// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: btc.proto

#ifndef PROTOBUF_btc_2eproto__INCLUDED
#define PROTOBUF_btc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace btcapi {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_btc_2eproto();
void protobuf_InitDefaults_btc_2eproto();
void protobuf_AssignDesc_btc_2eproto();
void protobuf_ShutdownFile_btc_2eproto();

class BtcTxExtra;
class BtcTxInput;
class BtcTxOutput;
class BtcXpubReq;
class BtcXpubRes;
class Utxo;

// ===================================================================

class Utxo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:btcapi.Utxo) */ {
 public:
  Utxo();
  virtual ~Utxo();

  Utxo(const Utxo& from);

  inline Utxo& operator=(const Utxo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Utxo& default_instance();

  static const Utxo* internal_default_instance();

  void Swap(Utxo* other);

  // implements Message ----------------------------------------------

  inline Utxo* New() const { return New(NULL); }

  Utxo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Utxo& from);
  void MergeFrom(const Utxo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Utxo* other);
  void UnsafeMergeFrom(const Utxo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tx_hash = 1;
  void clear_tx_hash();
  static const int kTxHashFieldNumber = 1;
  const ::std::string& tx_hash() const;
  void set_tx_hash(const ::std::string& value);
  void set_tx_hash(const char* value);
  void set_tx_hash(const char* value, size_t size);
  ::std::string* mutable_tx_hash();
  ::std::string* release_tx_hash();
  void set_allocated_tx_hash(::std::string* tx_hash);

  // optional int32 vout = 2;
  void clear_vout();
  static const int kVoutFieldNumber = 2;
  ::google::protobuf::int32 vout() const;
  void set_vout(::google::protobuf::int32 value);

  // optional int64 amount = 3;
  void clear_amount();
  static const int kAmountFieldNumber = 3;
  ::google::protobuf::int64 amount() const;
  void set_amount(::google::protobuf::int64 value);

  // optional string address = 4;
  void clear_address();
  static const int kAddressFieldNumber = 4;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional string script_pubKey = 5;
  void clear_script_pubkey();
  static const int kScriptPubKeyFieldNumber = 5;
  const ::std::string& script_pubkey() const;
  void set_script_pubkey(const ::std::string& value);
  void set_script_pubkey(const char* value);
  void set_script_pubkey(const char* value, size_t size);
  ::std::string* mutable_script_pubkey();
  ::std::string* release_script_pubkey();
  void set_allocated_script_pubkey(::std::string* script_pubkey);

  // optional string derived_path = 6;
  void clear_derived_path();
  static const int kDerivedPathFieldNumber = 6;
  const ::std::string& derived_path() const;
  void set_derived_path(const ::std::string& value);
  void set_derived_path(const char* value);
  void set_derived_path(const char* value, size_t size);
  ::std::string* mutable_derived_path();
  ::std::string* release_derived_path();
  void set_allocated_derived_path(::std::string* derived_path);

  // optional int64 sequence = 7;
  void clear_sequence();
  static const int kSequenceFieldNumber = 7;
  ::google::protobuf::int64 sequence() const;
  void set_sequence(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:btcapi.Utxo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tx_hash_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr script_pubkey_;
  ::google::protobuf::internal::ArenaStringPtr derived_path_;
  ::google::protobuf::int64 amount_;
  ::google::protobuf::int64 sequence_;
  ::google::protobuf::int32 vout_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_btc_2eproto_impl();
  friend void  protobuf_AddDesc_btc_2eproto_impl();
  friend void protobuf_AssignDesc_btc_2eproto();
  friend void protobuf_ShutdownFile_btc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Utxo> Utxo_default_instance_;

// -------------------------------------------------------------------

class BtcTxExtra : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:btcapi.BtcTxExtra) */ {
 public:
  BtcTxExtra();
  virtual ~BtcTxExtra();

  BtcTxExtra(const BtcTxExtra& from);

  inline BtcTxExtra& operator=(const BtcTxExtra& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtcTxExtra& default_instance();

  static const BtcTxExtra* internal_default_instance();

  void Swap(BtcTxExtra* other);

  // implements Message ----------------------------------------------

  inline BtcTxExtra* New() const { return New(NULL); }

  BtcTxExtra* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtcTxExtra& from);
  void MergeFrom(const BtcTxExtra& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BtcTxExtra* other);
  void UnsafeMergeFrom(const BtcTxExtra& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string opReturn = 1;
  void clear_opreturn();
  static const int kOpReturnFieldNumber = 1;
  const ::std::string& opreturn() const;
  void set_opreturn(const ::std::string& value);
  void set_opreturn(const char* value);
  void set_opreturn(const char* value, size_t size);
  ::std::string* mutable_opreturn();
  ::std::string* release_opreturn();
  void set_allocated_opreturn(::std::string* opreturn);

  // optional int32 propertyId = 2;
  void clear_propertyid();
  static const int kPropertyIdFieldNumber = 2;
  ::google::protobuf::int32 propertyid() const;
  void set_propertyid(::google::protobuf::int32 value);

  // optional string feeMode = 3;
  void clear_feemode();
  static const int kFeeModeFieldNumber = 3;
  const ::std::string& feemode() const;
  void set_feemode(const ::std::string& value);
  void set_feemode(const char* value);
  void set_feemode(const char* value, size_t size);
  ::std::string* mutable_feemode();
  ::std::string* release_feemode();
  void set_allocated_feemode(::std::string* feemode);

  // @@protoc_insertion_point(class_scope:btcapi.BtcTxExtra)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr opreturn_;
  ::google::protobuf::internal::ArenaStringPtr feemode_;
  ::google::protobuf::int32 propertyid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_btc_2eproto_impl();
  friend void  protobuf_AddDesc_btc_2eproto_impl();
  friend void protobuf_AssignDesc_btc_2eproto();
  friend void protobuf_ShutdownFile_btc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BtcTxExtra> BtcTxExtra_default_instance_;

// -------------------------------------------------------------------

class BtcTxInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:btcapi.BtcTxInput) */ {
 public:
  BtcTxInput();
  virtual ~BtcTxInput();

  BtcTxInput(const BtcTxInput& from);

  inline BtcTxInput& operator=(const BtcTxInput& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtcTxInput& default_instance();

  static const BtcTxInput* internal_default_instance();

  void Swap(BtcTxInput* other);

  // implements Message ----------------------------------------------

  inline BtcTxInput* New() const { return New(NULL); }

  BtcTxInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtcTxInput& from);
  void MergeFrom(const BtcTxInput& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BtcTxInput* other);
  void UnsafeMergeFrom(const BtcTxInput& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string to = 1;
  void clear_to();
  static const int kToFieldNumber = 1;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // optional int64 amount = 2;
  void clear_amount();
  static const int kAmountFieldNumber = 2;
  ::google::protobuf::int64 amount() const;
  void set_amount(::google::protobuf::int64 value);

  // optional int64 fee = 3;
  void clear_fee();
  static const int kFeeFieldNumber = 3;
  ::google::protobuf::int64 fee() const;
  void set_fee(::google::protobuf::int64 value);

  // optional uint32 change_address_index = 4;
  void clear_change_address_index();
  static const int kChangeAddressIndexFieldNumber = 4;
  ::google::protobuf::uint32 change_address_index() const;
  void set_change_address_index(::google::protobuf::uint32 value);

  // repeated .btcapi.Utxo unspents = 5;
  int unspents_size() const;
  void clear_unspents();
  static const int kUnspentsFieldNumber = 5;
  const ::btcapi::Utxo& unspents(int index) const;
  ::btcapi::Utxo* mutable_unspents(int index);
  ::btcapi::Utxo* add_unspents();
  ::google::protobuf::RepeatedPtrField< ::btcapi::Utxo >*
      mutable_unspents();
  const ::google::protobuf::RepeatedPtrField< ::btcapi::Utxo >&
      unspents() const;

  // optional string segWit = 6;
  void clear_segwit();
  static const int kSegWitFieldNumber = 6;
  const ::std::string& segwit() const;
  void set_segwit(const ::std::string& value);
  void set_segwit(const char* value);
  void set_segwit(const char* value, size_t size);
  ::std::string* mutable_segwit();
  ::std::string* release_segwit();
  void set_allocated_segwit(::std::string* segwit);

  // optional string protocol = 7;
  void clear_protocol();
  static const int kProtocolFieldNumber = 7;
  const ::std::string& protocol() const;
  void set_protocol(const ::std::string& value);
  void set_protocol(const char* value);
  void set_protocol(const char* value, size_t size);
  ::std::string* mutable_protocol();
  ::std::string* release_protocol();
  void set_allocated_protocol(::std::string* protocol);

  // optional .btcapi.BtcTxExtra extra = 8;
  bool has_extra() const;
  void clear_extra();
  static const int kExtraFieldNumber = 8;
  const ::btcapi::BtcTxExtra& extra() const;
  ::btcapi::BtcTxExtra* mutable_extra();
  ::btcapi::BtcTxExtra* release_extra();
  void set_allocated_extra(::btcapi::BtcTxExtra* extra);

  // @@protoc_insertion_point(class_scope:btcapi.BtcTxInput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::btcapi::Utxo > unspents_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  ::google::protobuf::internal::ArenaStringPtr segwit_;
  ::google::protobuf::internal::ArenaStringPtr protocol_;
  ::btcapi::BtcTxExtra* extra_;
  ::google::protobuf::int64 amount_;
  ::google::protobuf::int64 fee_;
  ::google::protobuf::uint32 change_address_index_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_btc_2eproto_impl();
  friend void  protobuf_AddDesc_btc_2eproto_impl();
  friend void protobuf_AssignDesc_btc_2eproto();
  friend void protobuf_ShutdownFile_btc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BtcTxInput> BtcTxInput_default_instance_;

// -------------------------------------------------------------------

class BtcTxOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:btcapi.BtcTxOutput) */ {
 public:
  BtcTxOutput();
  virtual ~BtcTxOutput();

  BtcTxOutput(const BtcTxOutput& from);

  inline BtcTxOutput& operator=(const BtcTxOutput& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtcTxOutput& default_instance();

  static const BtcTxOutput* internal_default_instance();

  void Swap(BtcTxOutput* other);

  // implements Message ----------------------------------------------

  inline BtcTxOutput* New() const { return New(NULL); }

  BtcTxOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtcTxOutput& from);
  void MergeFrom(const BtcTxOutput& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BtcTxOutput* other);
  void UnsafeMergeFrom(const BtcTxOutput& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string signature = 1;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional string txHash = 2;
  void clear_txhash();
  static const int kTxHashFieldNumber = 2;
  const ::std::string& txhash() const;
  void set_txhash(const ::std::string& value);
  void set_txhash(const char* value);
  void set_txhash(const char* value, size_t size);
  ::std::string* mutable_txhash();
  ::std::string* release_txhash();
  void set_allocated_txhash(::std::string* txhash);

  // optional string wtxHash = 3;
  void clear_wtxhash();
  static const int kWtxHashFieldNumber = 3;
  const ::std::string& wtxhash() const;
  void set_wtxhash(const ::std::string& value);
  void set_wtxhash(const char* value);
  void set_wtxhash(const char* value, size_t size);
  ::std::string* mutable_wtxhash();
  ::std::string* release_wtxhash();
  void set_allocated_wtxhash(::std::string* wtxhash);

  // @@protoc_insertion_point(class_scope:btcapi.BtcTxOutput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr txhash_;
  ::google::protobuf::internal::ArenaStringPtr wtxhash_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_btc_2eproto_impl();
  friend void  protobuf_AddDesc_btc_2eproto_impl();
  friend void protobuf_AssignDesc_btc_2eproto();
  friend void protobuf_ShutdownFile_btc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BtcTxOutput> BtcTxOutput_default_instance_;

// -------------------------------------------------------------------

class BtcXpubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:btcapi.BtcXpubReq) */ {
 public:
  BtcXpubReq();
  virtual ~BtcXpubReq();

  BtcXpubReq(const BtcXpubReq& from);

  inline BtcXpubReq& operator=(const BtcXpubReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtcXpubReq& default_instance();

  static const BtcXpubReq* internal_default_instance();

  void Swap(BtcXpubReq* other);

  // implements Message ----------------------------------------------

  inline BtcXpubReq* New() const { return New(NULL); }

  BtcXpubReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtcXpubReq& from);
  void MergeFrom(const BtcXpubReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BtcXpubReq* other);
  void UnsafeMergeFrom(const BtcXpubReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string network = 1;
  void clear_network();
  static const int kNetworkFieldNumber = 1;
  const ::std::string& network() const;
  void set_network(const ::std::string& value);
  void set_network(const char* value);
  void set_network(const char* value, size_t size);
  ::std::string* mutable_network();
  ::std::string* release_network();
  void set_allocated_network(::std::string* network);

  // optional string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:btcapi.BtcXpubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr network_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_btc_2eproto_impl();
  friend void  protobuf_AddDesc_btc_2eproto_impl();
  friend void protobuf_AssignDesc_btc_2eproto();
  friend void protobuf_ShutdownFile_btc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BtcXpubReq> BtcXpubReq_default_instance_;

// -------------------------------------------------------------------

class BtcXpubRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:btcapi.BtcXpubRes) */ {
 public:
  BtcXpubRes();
  virtual ~BtcXpubRes();

  BtcXpubRes(const BtcXpubRes& from);

  inline BtcXpubRes& operator=(const BtcXpubRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtcXpubRes& default_instance();

  static const BtcXpubRes* internal_default_instance();

  void Swap(BtcXpubRes* other);

  // implements Message ----------------------------------------------

  inline BtcXpubRes* New() const { return New(NULL); }

  BtcXpubRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtcXpubRes& from);
  void MergeFrom(const BtcXpubRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BtcXpubRes* other);
  void UnsafeMergeFrom(const BtcXpubRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string xpub = 1;
  void clear_xpub();
  static const int kXpubFieldNumber = 1;
  const ::std::string& xpub() const;
  void set_xpub(const ::std::string& value);
  void set_xpub(const char* value);
  void set_xpub(const char* value, size_t size);
  ::std::string* mutable_xpub();
  ::std::string* release_xpub();
  void set_allocated_xpub(::std::string* xpub);

  // @@protoc_insertion_point(class_scope:btcapi.BtcXpubRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr xpub_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_btc_2eproto_impl();
  friend void  protobuf_AddDesc_btc_2eproto_impl();
  friend void protobuf_AssignDesc_btc_2eproto();
  friend void protobuf_ShutdownFile_btc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BtcXpubRes> BtcXpubRes_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Utxo

// optional string tx_hash = 1;
inline void Utxo::clear_tx_hash() {
  tx_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Utxo::tx_hash() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.tx_hash)
  return tx_hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_tx_hash(const ::std::string& value) {
  
  tx_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.tx_hash)
}
inline void Utxo::set_tx_hash(const char* value) {
  
  tx_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.tx_hash)
}
inline void Utxo::set_tx_hash(const char* value, size_t size) {
  
  tx_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.tx_hash)
}
inline ::std::string* Utxo::mutable_tx_hash() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.tx_hash)
  return tx_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Utxo::release_tx_hash() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.tx_hash)
  
  return tx_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_allocated_tx_hash(::std::string* tx_hash) {
  if (tx_hash != NULL) {
    
  } else {
    
  }
  tx_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tx_hash);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.tx_hash)
}

// optional int32 vout = 2;
inline void Utxo::clear_vout() {
  vout_ = 0;
}
inline ::google::protobuf::int32 Utxo::vout() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.vout)
  return vout_;
}
inline void Utxo::set_vout(::google::protobuf::int32 value) {
  
  vout_ = value;
  // @@protoc_insertion_point(field_set:btcapi.Utxo.vout)
}

// optional int64 amount = 3;
inline void Utxo::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Utxo::amount() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.amount)
  return amount_;
}
inline void Utxo::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:btcapi.Utxo.amount)
}

// optional string address = 4;
inline void Utxo::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Utxo::address() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.address)
}
inline void Utxo::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.address)
}
inline void Utxo::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.address)
}
inline ::std::string* Utxo::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Utxo::release_address() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.address)
}

// optional string script_pubKey = 5;
inline void Utxo::clear_script_pubkey() {
  script_pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Utxo::script_pubkey() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.script_pubKey)
  return script_pubkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_script_pubkey(const ::std::string& value) {
  
  script_pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.script_pubKey)
}
inline void Utxo::set_script_pubkey(const char* value) {
  
  script_pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.script_pubKey)
}
inline void Utxo::set_script_pubkey(const char* value, size_t size) {
  
  script_pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.script_pubKey)
}
inline ::std::string* Utxo::mutable_script_pubkey() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.script_pubKey)
  return script_pubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Utxo::release_script_pubkey() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.script_pubKey)
  
  return script_pubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_allocated_script_pubkey(::std::string* script_pubkey) {
  if (script_pubkey != NULL) {
    
  } else {
    
  }
  script_pubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script_pubkey);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.script_pubKey)
}

// optional string derived_path = 6;
inline void Utxo::clear_derived_path() {
  derived_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Utxo::derived_path() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.derived_path)
  return derived_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_derived_path(const ::std::string& value) {
  
  derived_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.derived_path)
}
inline void Utxo::set_derived_path(const char* value) {
  
  derived_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.derived_path)
}
inline void Utxo::set_derived_path(const char* value, size_t size) {
  
  derived_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.derived_path)
}
inline ::std::string* Utxo::mutable_derived_path() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.derived_path)
  return derived_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Utxo::release_derived_path() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.derived_path)
  
  return derived_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_allocated_derived_path(::std::string* derived_path) {
  if (derived_path != NULL) {
    
  } else {
    
  }
  derived_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), derived_path);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.derived_path)
}

// optional int64 sequence = 7;
inline void Utxo::clear_sequence() {
  sequence_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Utxo::sequence() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.sequence)
  return sequence_;
}
inline void Utxo::set_sequence(::google::protobuf::int64 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:btcapi.Utxo.sequence)
}

inline const Utxo* Utxo::internal_default_instance() {
  return &Utxo_default_instance_.get();
}
// -------------------------------------------------------------------

// BtcTxExtra

// optional string opReturn = 1;
inline void BtcTxExtra::clear_opreturn() {
  opreturn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxExtra::opreturn() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxExtra.opReturn)
  return opreturn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxExtra::set_opreturn(const ::std::string& value) {
  
  opreturn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxExtra.opReturn)
}
inline void BtcTxExtra::set_opreturn(const char* value) {
  
  opreturn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxExtra.opReturn)
}
inline void BtcTxExtra::set_opreturn(const char* value, size_t size) {
  
  opreturn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxExtra.opReturn)
}
inline ::std::string* BtcTxExtra::mutable_opreturn() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxExtra.opReturn)
  return opreturn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxExtra::release_opreturn() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxExtra.opReturn)
  
  return opreturn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxExtra::set_allocated_opreturn(::std::string* opreturn) {
  if (opreturn != NULL) {
    
  } else {
    
  }
  opreturn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opreturn);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxExtra.opReturn)
}

// optional int32 propertyId = 2;
inline void BtcTxExtra::clear_propertyid() {
  propertyid_ = 0;
}
inline ::google::protobuf::int32 BtcTxExtra::propertyid() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxExtra.propertyId)
  return propertyid_;
}
inline void BtcTxExtra::set_propertyid(::google::protobuf::int32 value) {
  
  propertyid_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxExtra.propertyId)
}

// optional string feeMode = 3;
inline void BtcTxExtra::clear_feemode() {
  feemode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxExtra::feemode() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxExtra.feeMode)
  return feemode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxExtra::set_feemode(const ::std::string& value) {
  
  feemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxExtra.feeMode)
}
inline void BtcTxExtra::set_feemode(const char* value) {
  
  feemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxExtra.feeMode)
}
inline void BtcTxExtra::set_feemode(const char* value, size_t size) {
  
  feemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxExtra.feeMode)
}
inline ::std::string* BtcTxExtra::mutable_feemode() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxExtra.feeMode)
  return feemode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxExtra::release_feemode() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxExtra.feeMode)
  
  return feemode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxExtra::set_allocated_feemode(::std::string* feemode) {
  if (feemode != NULL) {
    
  } else {
    
  }
  feemode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feemode);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxExtra.feeMode)
}

inline const BtcTxExtra* BtcTxExtra::internal_default_instance() {
  return &BtcTxExtra_default_instance_.get();
}
// -------------------------------------------------------------------

// BtcTxInput

// optional string to = 1;
inline void BtcTxInput::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::to() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.to)
  return to_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.to)
}
inline void BtcTxInput::set_to(const char* value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.to)
}
inline void BtcTxInput::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.to)
}
inline ::std::string* BtcTxInput::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_to() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.to)
}

// optional int64 amount = 2;
inline void BtcTxInput::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BtcTxInput::amount() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.amount)
  return amount_;
}
inline void BtcTxInput::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.amount)
}

// optional int64 fee = 3;
inline void BtcTxInput::clear_fee() {
  fee_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BtcTxInput::fee() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.fee)
  return fee_;
}
inline void BtcTxInput::set_fee(::google::protobuf::int64 value) {
  
  fee_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.fee)
}

// optional uint32 change_address_index = 4;
inline void BtcTxInput::clear_change_address_index() {
  change_address_index_ = 0u;
}
inline ::google::protobuf::uint32 BtcTxInput::change_address_index() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.change_address_index)
  return change_address_index_;
}
inline void BtcTxInput::set_change_address_index(::google::protobuf::uint32 value) {
  
  change_address_index_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.change_address_index)
}

// repeated .btcapi.Utxo unspents = 5;
inline int BtcTxInput::unspents_size() const {
  return unspents_.size();
}
inline void BtcTxInput::clear_unspents() {
  unspents_.Clear();
}
inline const ::btcapi::Utxo& BtcTxInput::unspents(int index) const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.unspents)
  return unspents_.Get(index);
}
inline ::btcapi::Utxo* BtcTxInput::mutable_unspents(int index) {
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.unspents)
  return unspents_.Mutable(index);
}
inline ::btcapi::Utxo* BtcTxInput::add_unspents() {
  // @@protoc_insertion_point(field_add:btcapi.BtcTxInput.unspents)
  return unspents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::btcapi::Utxo >*
BtcTxInput::mutable_unspents() {
  // @@protoc_insertion_point(field_mutable_list:btcapi.BtcTxInput.unspents)
  return &unspents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::btcapi::Utxo >&
BtcTxInput::unspents() const {
  // @@protoc_insertion_point(field_list:btcapi.BtcTxInput.unspents)
  return unspents_;
}

// optional string segWit = 6;
inline void BtcTxInput::clear_segwit() {
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::segwit() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.segWit)
  return segwit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_segwit(const ::std::string& value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.segWit)
}
inline void BtcTxInput::set_segwit(const char* value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.segWit)
}
inline void BtcTxInput::set_segwit(const char* value, size_t size) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.segWit)
}
inline ::std::string* BtcTxInput::mutable_segwit() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.segWit)
  return segwit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_segwit() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.segWit)
  
  return segwit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_segwit(::std::string* segwit) {
  if (segwit != NULL) {
    
  } else {
    
  }
  segwit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segwit);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.segWit)
}

// optional string protocol = 7;
inline void BtcTxInput::clear_protocol() {
  protocol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::protocol() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.protocol)
  return protocol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_protocol(const ::std::string& value) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.protocol)
}
inline void BtcTxInput::set_protocol(const char* value) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.protocol)
}
inline void BtcTxInput::set_protocol(const char* value, size_t size) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.protocol)
}
inline ::std::string* BtcTxInput::mutable_protocol() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.protocol)
  return protocol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_protocol() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.protocol)
  
  return protocol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_protocol(::std::string* protocol) {
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.protocol)
}

// optional .btcapi.BtcTxExtra extra = 8;
inline bool BtcTxInput::has_extra() const {
  return this != internal_default_instance() && extra_ != NULL;
}
inline void BtcTxInput::clear_extra() {
  if (GetArenaNoVirtual() == NULL && extra_ != NULL) delete extra_;
  extra_ = NULL;
}
inline const ::btcapi::BtcTxExtra& BtcTxInput::extra() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.extra)
  return extra_ != NULL ? *extra_
                         : *::btcapi::BtcTxExtra::internal_default_instance();
}
inline ::btcapi::BtcTxExtra* BtcTxInput::mutable_extra() {
  
  if (extra_ == NULL) {
    extra_ = new ::btcapi::BtcTxExtra;
  }
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.extra)
  return extra_;
}
inline ::btcapi::BtcTxExtra* BtcTxInput::release_extra() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.extra)
  
  ::btcapi::BtcTxExtra* temp = extra_;
  extra_ = NULL;
  return temp;
}
inline void BtcTxInput::set_allocated_extra(::btcapi::BtcTxExtra* extra) {
  delete extra_;
  extra_ = extra;
  if (extra) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.extra)
}

inline const BtcTxInput* BtcTxInput::internal_default_instance() {
  return &BtcTxInput_default_instance_.get();
}
// -------------------------------------------------------------------

// BtcTxOutput

// optional string signature = 1;
inline void BtcTxOutput::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxOutput::signature() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxOutput.signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxOutput::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxOutput.signature)
}
inline void BtcTxOutput::set_signature(const char* value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxOutput.signature)
}
inline void BtcTxOutput::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxOutput.signature)
}
inline ::std::string* BtcTxOutput::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxOutput.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxOutput::release_signature() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxOutput.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxOutput::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxOutput.signature)
}

// optional string txHash = 2;
inline void BtcTxOutput::clear_txhash() {
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxOutput::txhash() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxOutput.txHash)
  return txhash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxOutput::set_txhash(const ::std::string& value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxOutput.txHash)
}
inline void BtcTxOutput::set_txhash(const char* value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxOutput.txHash)
}
inline void BtcTxOutput::set_txhash(const char* value, size_t size) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxOutput.txHash)
}
inline ::std::string* BtcTxOutput::mutable_txhash() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxOutput.txHash)
  return txhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxOutput::release_txhash() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxOutput.txHash)
  
  return txhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxOutput::set_allocated_txhash(::std::string* txhash) {
  if (txhash != NULL) {
    
  } else {
    
  }
  txhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txhash);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxOutput.txHash)
}

// optional string wtxHash = 3;
inline void BtcTxOutput::clear_wtxhash() {
  wtxhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxOutput::wtxhash() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxOutput.wtxHash)
  return wtxhash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxOutput::set_wtxhash(const ::std::string& value) {
  
  wtxhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxOutput.wtxHash)
}
inline void BtcTxOutput::set_wtxhash(const char* value) {
  
  wtxhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxOutput.wtxHash)
}
inline void BtcTxOutput::set_wtxhash(const char* value, size_t size) {
  
  wtxhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxOutput.wtxHash)
}
inline ::std::string* BtcTxOutput::mutable_wtxhash() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxOutput.wtxHash)
  return wtxhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxOutput::release_wtxhash() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxOutput.wtxHash)
  
  return wtxhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxOutput::set_allocated_wtxhash(::std::string* wtxhash) {
  if (wtxhash != NULL) {
    
  } else {
    
  }
  wtxhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wtxhash);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxOutput.wtxHash)
}

inline const BtcTxOutput* BtcTxOutput::internal_default_instance() {
  return &BtcTxOutput_default_instance_.get();
}
// -------------------------------------------------------------------

// BtcXpubReq

// optional string network = 1;
inline void BtcXpubReq::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcXpubReq::network() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcXpubReq.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcXpubReq::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcXpubReq.network)
}
inline void BtcXpubReq::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcXpubReq.network)
}
inline void BtcXpubReq::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcXpubReq.network)
}
inline ::std::string* BtcXpubReq::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcXpubReq.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcXpubReq::release_network() {
  // @@protoc_insertion_point(field_release:btcapi.BtcXpubReq.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcXpubReq::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcXpubReq.network)
}

// optional string path = 2;
inline void BtcXpubReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcXpubReq::path() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcXpubReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcXpubReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcXpubReq.path)
}
inline void BtcXpubReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcXpubReq.path)
}
inline void BtcXpubReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcXpubReq.path)
}
inline ::std::string* BtcXpubReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcXpubReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcXpubReq::release_path() {
  // @@protoc_insertion_point(field_release:btcapi.BtcXpubReq.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcXpubReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcXpubReq.path)
}

inline const BtcXpubReq* BtcXpubReq::internal_default_instance() {
  return &BtcXpubReq_default_instance_.get();
}
// -------------------------------------------------------------------

// BtcXpubRes

// optional string xpub = 1;
inline void BtcXpubRes::clear_xpub() {
  xpub_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcXpubRes::xpub() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcXpubRes.xpub)
  return xpub_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcXpubRes::set_xpub(const ::std::string& value) {
  
  xpub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcXpubRes.xpub)
}
inline void BtcXpubRes::set_xpub(const char* value) {
  
  xpub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcXpubRes.xpub)
}
inline void BtcXpubRes::set_xpub(const char* value, size_t size) {
  
  xpub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcXpubRes.xpub)
}
inline ::std::string* BtcXpubRes::mutable_xpub() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcXpubRes.xpub)
  return xpub_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcXpubRes::release_xpub() {
  // @@protoc_insertion_point(field_release:btcapi.BtcXpubRes.xpub)
  
  return xpub_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcXpubRes::set_allocated_xpub(::std::string* xpub) {
  if (xpub != NULL) {
    
  } else {
    
  }
  xpub_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xpub);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcXpubRes.xpub)
}

inline const BtcXpubRes* BtcXpubRes::internal_default_instance() {
  return &BtcXpubRes_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace btcapi

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_btc_2eproto__INCLUDED
