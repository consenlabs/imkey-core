// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eth.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "eth.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ethapi {

namespace {

const ::google::protobuf::Descriptor* EthTxInput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EthTxInput_reflection_ = NULL;
const ::google::protobuf::Descriptor* EthTxOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EthTxOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* EthMessageInput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EthMessageInput_reflection_ = NULL;
const ::google::protobuf::Descriptor* EthMessageOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EthMessageOutput_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_eth_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_eth_2eproto() {
  protobuf_AddDesc_eth_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "eth.proto");
  GOOGLE_CHECK(file != NULL);
  EthTxInput_descriptor_ = file->message_type(0);
  static const int EthTxInput_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxInput, nonce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxInput, gas_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxInput, gas_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxInput, to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxInput, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxInput, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxInput, chain_id_),
  };
  EthTxInput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EthTxInput_descriptor_,
      EthTxInput::internal_default_instance(),
      EthTxInput_offsets_,
      -1,
      -1,
      -1,
      sizeof(EthTxInput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxInput, _internal_metadata_));
  EthTxOutput_descriptor_ = file->message_type(1);
  static const int EthTxOutput_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxOutput, signature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxOutput, txhash_),
  };
  EthTxOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EthTxOutput_descriptor_,
      EthTxOutput::internal_default_instance(),
      EthTxOutput_offsets_,
      -1,
      -1,
      -1,
      sizeof(EthTxOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxOutput, _internal_metadata_));
  EthMessageInput_descriptor_ = file->message_type(2);
  static const int EthMessageInput_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthMessageInput, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthMessageInput, ispersonalsign_),
  };
  EthMessageInput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EthMessageInput_descriptor_,
      EthMessageInput::internal_default_instance(),
      EthMessageInput_offsets_,
      -1,
      -1,
      -1,
      sizeof(EthMessageInput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthMessageInput, _internal_metadata_));
  EthMessageOutput_descriptor_ = file->message_type(3);
  static const int EthMessageOutput_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthMessageOutput, signature_),
  };
  EthMessageOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EthMessageOutput_descriptor_,
      EthMessageOutput::internal_default_instance(),
      EthMessageOutput_offsets_,
      -1,
      -1,
      -1,
      sizeof(EthMessageOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthMessageOutput, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_eth_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EthTxInput_descriptor_, EthTxInput::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EthTxOutput_descriptor_, EthTxOutput::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EthMessageInput_descriptor_, EthMessageInput::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EthMessageOutput_descriptor_, EthMessageOutput::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_eth_2eproto() {
  EthTxInput_default_instance_.Shutdown();
  delete EthTxInput_reflection_;
  EthTxOutput_default_instance_.Shutdown();
  delete EthTxOutput_reflection_;
  EthMessageInput_default_instance_.Shutdown();
  delete EthMessageInput_reflection_;
  EthMessageOutput_default_instance_.Shutdown();
  delete EthMessageOutput_reflection_;
}

void protobuf_InitDefaults_eth_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  EthTxInput_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EthTxOutput_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EthMessageInput_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EthMessageOutput_default_instance_.DefaultConstruct();
  EthTxInput_default_instance_.get_mutable()->InitAsDefaultInstance();
  EthTxOutput_default_instance_.get_mutable()->InitAsDefaultInstance();
  EthMessageInput_default_instance_.get_mutable()->InitAsDefaultInstance();
  EthMessageOutput_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_eth_2eproto_once_);
void protobuf_InitDefaults_eth_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_eth_2eproto_once_,
                 &protobuf_InitDefaults_eth_2eproto_impl);
}
void protobuf_AddDesc_eth_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_eth_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\teth.proto\022\006ethapi\"|\n\nEthTxInput\022\r\n\005non"
    "ce\030\001 \001(\t\022\021\n\tgas_price\030\002 \001(\t\022\021\n\tgas_limit"
    "\030\003 \001(\t\022\n\n\002to\030\004 \001(\t\022\r\n\005value\030\005 \001(\t\022\014\n\004dat"
    "a\030\006 \001(\t\022\020\n\010chain_id\030\007 \001(\t\"0\n\013EthTxOutput"
    "\022\021\n\tsignature\030\001 \001(\t\022\016\n\006txHash\030\002 \001(\t\":\n\017E"
    "thMessageInput\022\017\n\007message\030\001 \001(\t\022\026\n\016isPer"
    "sonalSign\030\002 \001(\010\"%\n\020EthMessageOutput\022\021\n\ts"
    "ignature\030\001 \001(\tb\006proto3", 302);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "eth.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_eth_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_eth_2eproto_once_);
void protobuf_AddDesc_eth_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_eth_2eproto_once_,
                 &protobuf_AddDesc_eth_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_eth_2eproto {
  StaticDescriptorInitializer_eth_2eproto() {
    protobuf_AddDesc_eth_2eproto();
  }
} static_descriptor_initializer_eth_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EthTxInput::kNonceFieldNumber;
const int EthTxInput::kGasPriceFieldNumber;
const int EthTxInput::kGasLimitFieldNumber;
const int EthTxInput::kToFieldNumber;
const int EthTxInput::kValueFieldNumber;
const int EthTxInput::kDataFieldNumber;
const int EthTxInput::kChainIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EthTxInput::EthTxInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_eth_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ethapi.EthTxInput)
}

void EthTxInput::InitAsDefaultInstance() {
}

EthTxInput::EthTxInput(const EthTxInput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ethapi.EthTxInput)
}

void EthTxInput::SharedCtor() {
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chain_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EthTxInput::~EthTxInput() {
  // @@protoc_insertion_point(destructor:ethapi.EthTxInput)
  SharedDtor();
}

void EthTxInput::SharedDtor() {
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chain_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EthTxInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EthTxInput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EthTxInput_descriptor_;
}

const EthTxInput& EthTxInput::default_instance() {
  protobuf_InitDefaults_eth_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EthTxInput> EthTxInput_default_instance_;

EthTxInput* EthTxInput::New(::google::protobuf::Arena* arena) const {
  EthTxInput* n = new EthTxInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EthTxInput::Clear() {
// @@protoc_insertion_point(message_clear_start:ethapi.EthTxInput)
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chain_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EthTxInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ethapi.EthTxInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string nonce = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nonce().data(), this->nonce().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxInput.nonce"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gas_price;
        break;
      }

      // optional string gas_price = 2;
      case 2: {
        if (tag == 18) {
         parse_gas_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gas_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gas_price().data(), this->gas_price().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxInput.gas_price"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gas_limit;
        break;
      }

      // optional string gas_limit = 3;
      case 3: {
        if (tag == 26) {
         parse_gas_limit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gas_limit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gas_limit().data(), this->gas_limit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxInput.gas_limit"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_to;
        break;
      }

      // optional string to = 4;
      case 4: {
        if (tag == 34) {
         parse_to:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), this->to().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxInput.to"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_value;
        break;
      }

      // optional string value = 5;
      case 5: {
        if (tag == 42) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxInput.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_data;
        break;
      }

      // optional string data = 6;
      case 6: {
        if (tag == 50) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxInput.data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_chain_id;
        break;
      }

      // optional string chain_id = 7;
      case 7: {
        if (tag == 58) {
         parse_chain_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chain_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chain_id().data(), this->chain_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxInput.chain_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ethapi.EthTxInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ethapi.EthTxInput)
  return false;
#undef DO_
}

void EthTxInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ethapi.EthTxInput)
  // optional string nonce = 1;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), this->nonce().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.nonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nonce(), output);
  }

  // optional string gas_price = 2;
  if (this->gas_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_price().data(), this->gas_price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.gas_price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gas_price(), output);
  }

  // optional string gas_limit = 3;
  if (this->gas_limit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_limit().data(), this->gas_limit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.gas_limit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gas_limit(), output);
  }

  // optional string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->to(), output);
  }

  // optional string value = 5;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->value(), output);
  }

  // optional string data = 6;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->data(), output);
  }

  // optional string chain_id = 7;
  if (this->chain_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chain_id().data(), this->chain_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.chain_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->chain_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ethapi.EthTxInput)
}

::google::protobuf::uint8* EthTxInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ethapi.EthTxInput)
  // optional string nonce = 1;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), this->nonce().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.nonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nonce(), target);
  }

  // optional string gas_price = 2;
  if (this->gas_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_price().data(), this->gas_price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.gas_price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gas_price(), target);
  }

  // optional string gas_limit = 3;
  if (this->gas_limit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_limit().data(), this->gas_limit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.gas_limit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gas_limit(), target);
  }

  // optional string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->to(), target);
  }

  // optional string value = 5;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->value(), target);
  }

  // optional string data = 6;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->data(), target);
  }

  // optional string chain_id = 7;
  if (this->chain_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chain_id().data(), this->chain_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxInput.chain_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->chain_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ethapi.EthTxInput)
  return target;
}

size_t EthTxInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ethapi.EthTxInput)
  size_t total_size = 0;

  // optional string nonce = 1;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nonce());
  }

  // optional string gas_price = 2;
  if (this->gas_price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gas_price());
  }

  // optional string gas_limit = 3;
  if (this->gas_limit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gas_limit());
  }

  // optional string to = 4;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // optional string value = 5;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // optional string data = 6;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // optional string chain_id = 7;
  if (this->chain_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chain_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EthTxInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ethapi.EthTxInput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EthTxInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EthTxInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ethapi.EthTxInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ethapi.EthTxInput)
    UnsafeMergeFrom(*source);
  }
}

void EthTxInput::MergeFrom(const EthTxInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ethapi.EthTxInput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EthTxInput::UnsafeMergeFrom(const EthTxInput& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.nonce().size() > 0) {

    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  if (from.gas_price().size() > 0) {

    gas_price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_price_);
  }
  if (from.gas_limit().size() > 0) {

    gas_limit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_limit_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.chain_id().size() > 0) {

    chain_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chain_id_);
  }
}

void EthTxInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ethapi.EthTxInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EthTxInput::CopyFrom(const EthTxInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ethapi.EthTxInput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EthTxInput::IsInitialized() const {

  return true;
}

void EthTxInput::Swap(EthTxInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EthTxInput::InternalSwap(EthTxInput* other) {
  nonce_.Swap(&other->nonce_);
  gas_price_.Swap(&other->gas_price_);
  gas_limit_.Swap(&other->gas_limit_);
  to_.Swap(&other->to_);
  value_.Swap(&other->value_);
  data_.Swap(&other->data_);
  chain_id_.Swap(&other->chain_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EthTxInput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EthTxInput_descriptor_;
  metadata.reflection = EthTxInput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EthTxInput

// optional string nonce = 1;
void EthTxInput::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxInput::nonce() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxInput.nonce)
  return nonce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxInput.nonce)
}
void EthTxInput::set_nonce(const char* value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxInput.nonce)
}
void EthTxInput::set_nonce(const char* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxInput.nonce)
}
::std::string* EthTxInput::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxInput.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxInput::release_nonce() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxInput.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxInput.nonce)
}

// optional string gas_price = 2;
void EthTxInput::clear_gas_price() {
  gas_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxInput::gas_price() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxInput.gas_price)
  return gas_price_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_gas_price(const ::std::string& value) {
  
  gas_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxInput.gas_price)
}
void EthTxInput::set_gas_price(const char* value) {
  
  gas_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxInput.gas_price)
}
void EthTxInput::set_gas_price(const char* value, size_t size) {
  
  gas_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxInput.gas_price)
}
::std::string* EthTxInput::mutable_gas_price() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxInput.gas_price)
  return gas_price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxInput::release_gas_price() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxInput.gas_price)
  
  return gas_price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_allocated_gas_price(::std::string* gas_price) {
  if (gas_price != NULL) {
    
  } else {
    
  }
  gas_price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gas_price);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxInput.gas_price)
}

// optional string gas_limit = 3;
void EthTxInput::clear_gas_limit() {
  gas_limit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxInput::gas_limit() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxInput.gas_limit)
  return gas_limit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_gas_limit(const ::std::string& value) {
  
  gas_limit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxInput.gas_limit)
}
void EthTxInput::set_gas_limit(const char* value) {
  
  gas_limit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxInput.gas_limit)
}
void EthTxInput::set_gas_limit(const char* value, size_t size) {
  
  gas_limit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxInput.gas_limit)
}
::std::string* EthTxInput::mutable_gas_limit() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxInput.gas_limit)
  return gas_limit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxInput::release_gas_limit() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxInput.gas_limit)
  
  return gas_limit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_allocated_gas_limit(::std::string* gas_limit) {
  if (gas_limit != NULL) {
    
  } else {
    
  }
  gas_limit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gas_limit);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxInput.gas_limit)
}

// optional string to = 4;
void EthTxInput::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxInput::to() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxInput.to)
  return to_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxInput.to)
}
void EthTxInput::set_to(const char* value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxInput.to)
}
void EthTxInput::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxInput.to)
}
::std::string* EthTxInput::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxInput.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxInput::release_to() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxInput.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxInput.to)
}

// optional string value = 5;
void EthTxInput::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxInput::value() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxInput.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxInput.value)
}
void EthTxInput::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxInput.value)
}
void EthTxInput::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxInput.value)
}
::std::string* EthTxInput::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxInput.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxInput::release_value() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxInput.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxInput.value)
}

// optional string data = 6;
void EthTxInput::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxInput::data() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxInput.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxInput.data)
}
void EthTxInput::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxInput.data)
}
void EthTxInput::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxInput.data)
}
::std::string* EthTxInput::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxInput.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxInput::release_data() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxInput.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxInput.data)
}

// optional string chain_id = 7;
void EthTxInput::clear_chain_id() {
  chain_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxInput::chain_id() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxInput.chain_id)
  return chain_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_chain_id(const ::std::string& value) {
  
  chain_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxInput.chain_id)
}
void EthTxInput::set_chain_id(const char* value) {
  
  chain_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxInput.chain_id)
}
void EthTxInput::set_chain_id(const char* value, size_t size) {
  
  chain_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxInput.chain_id)
}
::std::string* EthTxInput::mutable_chain_id() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxInput.chain_id)
  return chain_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxInput::release_chain_id() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxInput.chain_id)
  
  return chain_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxInput::set_allocated_chain_id(::std::string* chain_id) {
  if (chain_id != NULL) {
    
  } else {
    
  }
  chain_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chain_id);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxInput.chain_id)
}

inline const EthTxInput* EthTxInput::internal_default_instance() {
  return &EthTxInput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EthTxOutput::kSignatureFieldNumber;
const int EthTxOutput::kTxHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EthTxOutput::EthTxOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_eth_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ethapi.EthTxOutput)
}

void EthTxOutput::InitAsDefaultInstance() {
}

EthTxOutput::EthTxOutput(const EthTxOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ethapi.EthTxOutput)
}

void EthTxOutput::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EthTxOutput::~EthTxOutput() {
  // @@protoc_insertion_point(destructor:ethapi.EthTxOutput)
  SharedDtor();
}

void EthTxOutput::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EthTxOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EthTxOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EthTxOutput_descriptor_;
}

const EthTxOutput& EthTxOutput::default_instance() {
  protobuf_InitDefaults_eth_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EthTxOutput> EthTxOutput_default_instance_;

EthTxOutput* EthTxOutput::New(::google::protobuf::Arena* arena) const {
  EthTxOutput* n = new EthTxOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EthTxOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:ethapi.EthTxOutput)
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EthTxOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ethapi.EthTxOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string signature = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxOutput.signature"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_txHash;
        break;
      }

      // optional string txHash = 2;
      case 2: {
        if (tag == 18) {
         parse_txHash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_txhash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->txhash().data(), this->txhash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxOutput.txHash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ethapi.EthTxOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ethapi.EthTxOutput)
  return false;
#undef DO_
}

void EthTxOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ethapi.EthTxOutput)
  // optional string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxOutput.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  // optional string txHash = 2;
  if (this->txhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txhash().data(), this->txhash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxOutput.txHash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->txhash(), output);
  }

  // @@protoc_insertion_point(serialize_end:ethapi.EthTxOutput)
}

::google::protobuf::uint8* EthTxOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ethapi.EthTxOutput)
  // optional string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxOutput.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  // optional string txHash = 2;
  if (this->txhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txhash().data(), this->txhash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxOutput.txHash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->txhash(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ethapi.EthTxOutput)
  return target;
}

size_t EthTxOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ethapi.EthTxOutput)
  size_t total_size = 0;

  // optional string signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // optional string txHash = 2;
  if (this->txhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->txhash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EthTxOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ethapi.EthTxOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EthTxOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EthTxOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ethapi.EthTxOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ethapi.EthTxOutput)
    UnsafeMergeFrom(*source);
  }
}

void EthTxOutput::MergeFrom(const EthTxOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ethapi.EthTxOutput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EthTxOutput::UnsafeMergeFrom(const EthTxOutput& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.txhash().size() > 0) {

    txhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txhash_);
  }
}

void EthTxOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ethapi.EthTxOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EthTxOutput::CopyFrom(const EthTxOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ethapi.EthTxOutput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EthTxOutput::IsInitialized() const {

  return true;
}

void EthTxOutput::Swap(EthTxOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EthTxOutput::InternalSwap(EthTxOutput* other) {
  signature_.Swap(&other->signature_);
  txhash_.Swap(&other->txhash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EthTxOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EthTxOutput_descriptor_;
  metadata.reflection = EthTxOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EthTxOutput

// optional string signature = 1;
void EthTxOutput::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxOutput::signature() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxOutput.signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxOutput::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxOutput.signature)
}
void EthTxOutput::set_signature(const char* value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxOutput.signature)
}
void EthTxOutput::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxOutput.signature)
}
::std::string* EthTxOutput::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxOutput.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxOutput::release_signature() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxOutput.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxOutput::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxOutput.signature)
}

// optional string txHash = 2;
void EthTxOutput::clear_txhash() {
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxOutput::txhash() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxOutput.txHash)
  return txhash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxOutput::set_txhash(const ::std::string& value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxOutput.txHash)
}
void EthTxOutput::set_txhash(const char* value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxOutput.txHash)
}
void EthTxOutput::set_txhash(const char* value, size_t size) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxOutput.txHash)
}
::std::string* EthTxOutput::mutable_txhash() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxOutput.txHash)
  return txhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxOutput::release_txhash() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxOutput.txHash)
  
  return txhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxOutput::set_allocated_txhash(::std::string* txhash) {
  if (txhash != NULL) {
    
  } else {
    
  }
  txhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txhash);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxOutput.txHash)
}

inline const EthTxOutput* EthTxOutput::internal_default_instance() {
  return &EthTxOutput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EthMessageInput::kMessageFieldNumber;
const int EthMessageInput::kIsPersonalSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EthMessageInput::EthMessageInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_eth_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ethapi.EthMessageInput)
}

void EthMessageInput::InitAsDefaultInstance() {
}

EthMessageInput::EthMessageInput(const EthMessageInput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ethapi.EthMessageInput)
}

void EthMessageInput::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ispersonalsign_ = false;
  _cached_size_ = 0;
}

EthMessageInput::~EthMessageInput() {
  // @@protoc_insertion_point(destructor:ethapi.EthMessageInput)
  SharedDtor();
}

void EthMessageInput::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EthMessageInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EthMessageInput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EthMessageInput_descriptor_;
}

const EthMessageInput& EthMessageInput::default_instance() {
  protobuf_InitDefaults_eth_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EthMessageInput> EthMessageInput_default_instance_;

EthMessageInput* EthMessageInput::New(::google::protobuf::Arena* arena) const {
  EthMessageInput* n = new EthMessageInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EthMessageInput::Clear() {
// @@protoc_insertion_point(message_clear_start:ethapi.EthMessageInput)
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ispersonalsign_ = false;
}

bool EthMessageInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ethapi.EthMessageInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthMessageInput.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_isPersonalSign;
        break;
      }

      // optional bool isPersonalSign = 2;
      case 2: {
        if (tag == 16) {
         parse_isPersonalSign:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispersonalsign_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ethapi.EthMessageInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ethapi.EthMessageInput)
  return false;
#undef DO_
}

void EthMessageInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ethapi.EthMessageInput)
  // optional string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthMessageInput.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // optional bool isPersonalSign = 2;
  if (this->ispersonalsign() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->ispersonalsign(), output);
  }

  // @@protoc_insertion_point(serialize_end:ethapi.EthMessageInput)
}

::google::protobuf::uint8* EthMessageInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ethapi.EthMessageInput)
  // optional string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthMessageInput.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // optional bool isPersonalSign = 2;
  if (this->ispersonalsign() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->ispersonalsign(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ethapi.EthMessageInput)
  return target;
}

size_t EthMessageInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ethapi.EthMessageInput)
  size_t total_size = 0;

  // optional string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional bool isPersonalSign = 2;
  if (this->ispersonalsign() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EthMessageInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ethapi.EthMessageInput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EthMessageInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EthMessageInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ethapi.EthMessageInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ethapi.EthMessageInput)
    UnsafeMergeFrom(*source);
  }
}

void EthMessageInput::MergeFrom(const EthMessageInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ethapi.EthMessageInput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EthMessageInput::UnsafeMergeFrom(const EthMessageInput& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.ispersonalsign() != 0) {
    set_ispersonalsign(from.ispersonalsign());
  }
}

void EthMessageInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ethapi.EthMessageInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EthMessageInput::CopyFrom(const EthMessageInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ethapi.EthMessageInput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EthMessageInput::IsInitialized() const {

  return true;
}

void EthMessageInput::Swap(EthMessageInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EthMessageInput::InternalSwap(EthMessageInput* other) {
  message_.Swap(&other->message_);
  std::swap(ispersonalsign_, other->ispersonalsign_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EthMessageInput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EthMessageInput_descriptor_;
  metadata.reflection = EthMessageInput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EthMessageInput

// optional string message = 1;
void EthMessageInput::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthMessageInput::message() const {
  // @@protoc_insertion_point(field_get:ethapi.EthMessageInput.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthMessageInput::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthMessageInput.message)
}
void EthMessageInput::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthMessageInput.message)
}
void EthMessageInput::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthMessageInput.message)
}
::std::string* EthMessageInput::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthMessageInput.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthMessageInput::release_message() {
  // @@protoc_insertion_point(field_release:ethapi.EthMessageInput.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthMessageInput::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthMessageInput.message)
}

// optional bool isPersonalSign = 2;
void EthMessageInput::clear_ispersonalsign() {
  ispersonalsign_ = false;
}
bool EthMessageInput::ispersonalsign() const {
  // @@protoc_insertion_point(field_get:ethapi.EthMessageInput.isPersonalSign)
  return ispersonalsign_;
}
void EthMessageInput::set_ispersonalsign(bool value) {
  
  ispersonalsign_ = value;
  // @@protoc_insertion_point(field_set:ethapi.EthMessageInput.isPersonalSign)
}

inline const EthMessageInput* EthMessageInput::internal_default_instance() {
  return &EthMessageInput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EthMessageOutput::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EthMessageOutput::EthMessageOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_eth_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ethapi.EthMessageOutput)
}

void EthMessageOutput::InitAsDefaultInstance() {
}

EthMessageOutput::EthMessageOutput(const EthMessageOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ethapi.EthMessageOutput)
}

void EthMessageOutput::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EthMessageOutput::~EthMessageOutput() {
  // @@protoc_insertion_point(destructor:ethapi.EthMessageOutput)
  SharedDtor();
}

void EthMessageOutput::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EthMessageOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EthMessageOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EthMessageOutput_descriptor_;
}

const EthMessageOutput& EthMessageOutput::default_instance() {
  protobuf_InitDefaults_eth_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EthMessageOutput> EthMessageOutput_default_instance_;

EthMessageOutput* EthMessageOutput::New(::google::protobuf::Arena* arena) const {
  EthMessageOutput* n = new EthMessageOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EthMessageOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:ethapi.EthMessageOutput)
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EthMessageOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ethapi.EthMessageOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string signature = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthMessageOutput.signature"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ethapi.EthMessageOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ethapi.EthMessageOutput)
  return false;
#undef DO_
}

void EthMessageOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ethapi.EthMessageOutput)
  // optional string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthMessageOutput.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  // @@protoc_insertion_point(serialize_end:ethapi.EthMessageOutput)
}

::google::protobuf::uint8* EthMessageOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ethapi.EthMessageOutput)
  // optional string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthMessageOutput.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ethapi.EthMessageOutput)
  return target;
}

size_t EthMessageOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ethapi.EthMessageOutput)
  size_t total_size = 0;

  // optional string signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EthMessageOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ethapi.EthMessageOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EthMessageOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EthMessageOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ethapi.EthMessageOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ethapi.EthMessageOutput)
    UnsafeMergeFrom(*source);
  }
}

void EthMessageOutput::MergeFrom(const EthMessageOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ethapi.EthMessageOutput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EthMessageOutput::UnsafeMergeFrom(const EthMessageOutput& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void EthMessageOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ethapi.EthMessageOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EthMessageOutput::CopyFrom(const EthMessageOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ethapi.EthMessageOutput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EthMessageOutput::IsInitialized() const {

  return true;
}

void EthMessageOutput::Swap(EthMessageOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EthMessageOutput::InternalSwap(EthMessageOutput* other) {
  signature_.Swap(&other->signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EthMessageOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EthMessageOutput_descriptor_;
  metadata.reflection = EthMessageOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EthMessageOutput

// optional string signature = 1;
void EthMessageOutput::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthMessageOutput::signature() const {
  // @@protoc_insertion_point(field_get:ethapi.EthMessageOutput.signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthMessageOutput::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthMessageOutput.signature)
}
void EthMessageOutput::set_signature(const char* value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthMessageOutput.signature)
}
void EthMessageOutput::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthMessageOutput.signature)
}
::std::string* EthMessageOutput::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthMessageOutput.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthMessageOutput::release_signature() {
  // @@protoc_insertion_point(field_release:ethapi.EthMessageOutput.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthMessageOutput::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthMessageOutput.signature)
}

inline const EthMessageOutput* EthMessageOutput::internal_default_instance() {
  return &EthMessageOutput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ethapi

// @@protoc_insertion_point(global_scope)
