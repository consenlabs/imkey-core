// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace common {

namespace {

const ::google::protobuf::Descriptor* SignParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SignParam_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_common_2eproto() {
  protobuf_AddDesc_common_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common.proto");
  GOOGLE_CHECK(file != NULL);
  SignParam_descriptor_ = file->message_type(0);
  static const int SignParam_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, chaintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, network_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, payment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, receiver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, fee_),
  };
  SignParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SignParam_descriptor_,
      SignParam::internal_default_instance(),
      SignParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(SignParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SignParam_descriptor_, SignParam::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_2eproto() {
  SignParam_default_instance_.Shutdown();
  delete SignParam_reflection_;
}

void protobuf_InitDefaults_common_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  SignParam_default_instance_.DefaultConstruct();
  SignParam_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_common_2eproto_once_);
void protobuf_InitDefaults_common_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_common_2eproto_once_,
                 &protobuf_InitDefaults_common_2eproto_impl);
}
void protobuf_AddDesc_common_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014common.proto\022\006common\032\031google/protobuf/"
    "any.proto\"\242\001\n\tSignParam\022\021\n\tchainType\030\001 \001"
    "(\t\022\014\n\004path\030\002 \001(\t\022\017\n\007network\030\003 \001(\t\022#\n\005inp"
    "ut\030\004 \001(\0132\024.google.protobuf.Any\022\017\n\007paymen"
    "t\030\005 \001(\t\022\020\n\010receiver\030\006 \001(\t\022\016\n\006sender\030\007 \001("
    "\t\022\013\n\003fee\030\010 \001(\tb\006proto3", 222);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_common_2eproto_once_);
void protobuf_AddDesc_common_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_common_2eproto_once_,
                 &protobuf_AddDesc_common_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_2eproto {
  StaticDescriptorInitializer_common_2eproto() {
    protobuf_AddDesc_common_2eproto();
  }
} static_descriptor_initializer_common_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignParam::kChainTypeFieldNumber;
const int SignParam::kPathFieldNumber;
const int SignParam::kNetworkFieldNumber;
const int SignParam::kInputFieldNumber;
const int SignParam::kPaymentFieldNumber;
const int SignParam::kReceiverFieldNumber;
const int SignParam::kSenderFieldNumber;
const int SignParam::kFeeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignParam::SignParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_common_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.SignParam)
}

void SignParam::InitAsDefaultInstance() {
  input_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

SignParam::SignParam(const SignParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:common.SignParam)
}

void SignParam::SharedCtor() {
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fee_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_ = NULL;
  _cached_size_ = 0;
}

SignParam::~SignParam() {
  // @@protoc_insertion_point(destructor:common.SignParam)
  SharedDtor();
}

void SignParam::SharedDtor() {
  chaintype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fee_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &SignParam_default_instance_.get()) {
    delete input_;
  }
}

void SignParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SignParam_descriptor_;
}

const SignParam& SignParam::default_instance() {
  protobuf_InitDefaults_common_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SignParam> SignParam_default_instance_;

SignParam* SignParam::New(::google::protobuf::Arena* arena) const {
  SignParam* n = new SignParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignParam::Clear() {
// @@protoc_insertion_point(message_clear_start:common.SignParam)
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && input_ != NULL) delete input_;
  input_ = NULL;
  payment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SignParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.SignParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chainType = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chaintype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chaintype().data(), this->chaintype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.SignParam.chainType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // optional string path = 2;
      case 2: {
        if (tag == 18) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.SignParam.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_network;
        break;
      }

      // optional string network = 3;
      case 3: {
        if (tag == 26) {
         parse_network:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), this->network().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.SignParam.network"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_input;
        break;
      }

      // optional .google.protobuf.Any input = 4;
      case 4: {
        if (tag == 34) {
         parse_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_payment;
        break;
      }

      // optional string payment = 5;
      case 5: {
        if (tag == 42) {
         parse_payment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payment().data(), this->payment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.SignParam.payment"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_receiver;
        break;
      }

      // optional string receiver = 6;
      case 6: {
        if (tag == 50) {
         parse_receiver:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->receiver().data(), this->receiver().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.SignParam.receiver"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sender;
        break;
      }

      // optional string sender = 7;
      case 7: {
        if (tag == 58) {
         parse_sender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), this->sender().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.SignParam.sender"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_fee;
        break;
      }

      // optional string fee = 8;
      case 8: {
        if (tag == 66) {
         parse_fee:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fee()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fee().data(), this->fee().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.SignParam.fee"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.SignParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.SignParam)
  return false;
#undef DO_
}

void SignParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.SignParam)
  // optional string chainType = 1;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.chainType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chaintype(), output);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // optional string network = 3;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->network(), output);
  }

  // optional .google.protobuf.Any input = 4;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->input_, output);
  }

  // optional string payment = 5;
  if (this->payment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment().data(), this->payment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.payment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->payment(), output);
  }

  // optional string receiver = 6;
  if (this->receiver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->receiver().data(), this->receiver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.receiver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->receiver(), output);
  }

  // optional string sender = 7;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sender(), output);
  }

  // optional string fee = 8;
  if (this->fee().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fee().data(), this->fee().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.fee");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->fee(), output);
  }

  // @@protoc_insertion_point(serialize_end:common.SignParam)
}

::google::protobuf::uint8* SignParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.SignParam)
  // optional string chainType = 1;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.chainType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chaintype(), target);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // optional string network = 3;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->network(), target);
  }

  // optional .google.protobuf.Any input = 4;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->input_, false, target);
  }

  // optional string payment = 5;
  if (this->payment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment().data(), this->payment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.payment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->payment(), target);
  }

  // optional string receiver = 6;
  if (this->receiver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->receiver().data(), this->receiver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.receiver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->receiver(), target);
  }

  // optional string sender = 7;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sender(), target);
  }

  // optional string fee = 8;
  if (this->fee().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fee().data(), this->fee().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.SignParam.fee");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->fee(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:common.SignParam)
  return target;
}

size_t SignParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.SignParam)
  size_t total_size = 0;

  // optional string chainType = 1;
  if (this->chaintype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chaintype());
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional string network = 3;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // optional .google.protobuf.Any input = 4;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->input_);
  }

  // optional string payment = 5;
  if (this->payment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payment());
  }

  // optional string receiver = 6;
  if (this->receiver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receiver());
  }

  // optional string sender = 7;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // optional string fee = 8;
  if (this->fee().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fee());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.SignParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SignParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.SignParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.SignParam)
    UnsafeMergeFrom(*source);
  }
}

void SignParam::MergeFrom(const SignParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.SignParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SignParam::UnsafeMergeFrom(const SignParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.chaintype().size() > 0) {

    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.has_input()) {
    mutable_input()->::google::protobuf::Any::MergeFrom(from.input());
  }
  if (from.payment().size() > 0) {

    payment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_);
  }
  if (from.receiver().size() > 0) {

    receiver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.fee().size() > 0) {

    fee_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fee_);
  }
}

void SignParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.SignParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignParam::CopyFrom(const SignParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.SignParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SignParam::IsInitialized() const {

  return true;
}

void SignParam::Swap(SignParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignParam::InternalSwap(SignParam* other) {
  chaintype_.Swap(&other->chaintype_);
  path_.Swap(&other->path_);
  network_.Swap(&other->network_);
  std::swap(input_, other->input_);
  payment_.Swap(&other->payment_);
  receiver_.Swap(&other->receiver_);
  sender_.Swap(&other->sender_);
  fee_.Swap(&other->fee_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SignParam_descriptor_;
  metadata.reflection = SignParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SignParam

// optional string chainType = 1;
void SignParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SignParam::chaintype() const {
  // @@protoc_insertion_point(field_get:common.SignParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.SignParam.chainType)
}
void SignParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.SignParam.chainType)
}
void SignParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.SignParam.chainType)
}
::std::string* SignParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:common.SignParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:common.SignParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:common.SignParam.chainType)
}

// optional string path = 2;
void SignParam::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SignParam::path() const {
  // @@protoc_insertion_point(field_get:common.SignParam.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.SignParam.path)
}
void SignParam::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.SignParam.path)
}
void SignParam::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.SignParam.path)
}
::std::string* SignParam::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:common.SignParam.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignParam::release_path() {
  // @@protoc_insertion_point(field_release:common.SignParam.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:common.SignParam.path)
}

// optional string network = 3;
void SignParam::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SignParam::network() const {
  // @@protoc_insertion_point(field_get:common.SignParam.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.SignParam.network)
}
void SignParam::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.SignParam.network)
}
void SignParam::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.SignParam.network)
}
::std::string* SignParam::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:common.SignParam.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignParam::release_network() {
  // @@protoc_insertion_point(field_release:common.SignParam.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:common.SignParam.network)
}

// optional .google.protobuf.Any input = 4;
bool SignParam::has_input() const {
  return this != internal_default_instance() && input_ != NULL;
}
void SignParam::clear_input() {
  if (GetArenaNoVirtual() == NULL && input_ != NULL) delete input_;
  input_ = NULL;
}
const ::google::protobuf::Any& SignParam::input() const {
  // @@protoc_insertion_point(field_get:common.SignParam.input)
  return input_ != NULL ? *input_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* SignParam::mutable_input() {
  
  if (input_ == NULL) {
    input_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:common.SignParam.input)
  return input_;
}
::google::protobuf::Any* SignParam::release_input() {
  // @@protoc_insertion_point(field_release:common.SignParam.input)
  
  ::google::protobuf::Any* temp = input_;
  input_ = NULL;
  return temp;
}
void SignParam::set_allocated_input(::google::protobuf::Any* input) {
  delete input_;
  input_ = input;
  if (input) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:common.SignParam.input)
}

// optional string payment = 5;
void SignParam::clear_payment() {
  payment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SignParam::payment() const {
  // @@protoc_insertion_point(field_get:common.SignParam.payment)
  return payment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_payment(const ::std::string& value) {
  
  payment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.SignParam.payment)
}
void SignParam::set_payment(const char* value) {
  
  payment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.SignParam.payment)
}
void SignParam::set_payment(const char* value, size_t size) {
  
  payment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.SignParam.payment)
}
::std::string* SignParam::mutable_payment() {
  
  // @@protoc_insertion_point(field_mutable:common.SignParam.payment)
  return payment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignParam::release_payment() {
  // @@protoc_insertion_point(field_release:common.SignParam.payment)
  
  return payment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_allocated_payment(::std::string* payment) {
  if (payment != NULL) {
    
  } else {
    
  }
  payment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payment);
  // @@protoc_insertion_point(field_set_allocated:common.SignParam.payment)
}

// optional string receiver = 6;
void SignParam::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SignParam::receiver() const {
  // @@protoc_insertion_point(field_get:common.SignParam.receiver)
  return receiver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_receiver(const ::std::string& value) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.SignParam.receiver)
}
void SignParam::set_receiver(const char* value) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.SignParam.receiver)
}
void SignParam::set_receiver(const char* value, size_t size) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.SignParam.receiver)
}
::std::string* SignParam::mutable_receiver() {
  
  // @@protoc_insertion_point(field_mutable:common.SignParam.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignParam::release_receiver() {
  // @@protoc_insertion_point(field_release:common.SignParam.receiver)
  
  return receiver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_allocated_receiver(::std::string* receiver) {
  if (receiver != NULL) {
    
  } else {
    
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:common.SignParam.receiver)
}

// optional string sender = 7;
void SignParam::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SignParam::sender() const {
  // @@protoc_insertion_point(field_get:common.SignParam.sender)
  return sender_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.SignParam.sender)
}
void SignParam::set_sender(const char* value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.SignParam.sender)
}
void SignParam::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.SignParam.sender)
}
::std::string* SignParam::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:common.SignParam.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignParam::release_sender() {
  // @@protoc_insertion_point(field_release:common.SignParam.sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:common.SignParam.sender)
}

// optional string fee = 8;
void SignParam::clear_fee() {
  fee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SignParam::fee() const {
  // @@protoc_insertion_point(field_get:common.SignParam.fee)
  return fee_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_fee(const ::std::string& value) {
  
  fee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.SignParam.fee)
}
void SignParam::set_fee(const char* value) {
  
  fee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.SignParam.fee)
}
void SignParam::set_fee(const char* value, size_t size) {
  
  fee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.SignParam.fee)
}
::std::string* SignParam::mutable_fee() {
  
  // @@protoc_insertion_point(field_mutable:common.SignParam.fee)
  return fee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignParam::release_fee() {
  // @@protoc_insertion_point(field_release:common.SignParam.fee)
  
  return fee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_allocated_fee(::std::string* fee) {
  if (fee != NULL) {
    
  } else {
    
  }
  fee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fee);
  // @@protoc_insertion_point(field_set_allocated:common.SignParam.fee)
}

inline const SignParam* SignParam::internal_default_instance() {
  return &SignParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace common

// @@protoc_insertion_point(global_scope)
