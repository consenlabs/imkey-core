// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: btc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "btc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace btcapi {

namespace {

const ::google::protobuf::Descriptor* Utxo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Utxo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BtcTxExtra_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BtcTxExtra_reflection_ = NULL;
const ::google::protobuf::Descriptor* BtcTxInput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BtcTxInput_reflection_ = NULL;
const ::google::protobuf::Descriptor* BtcTxOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BtcTxOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* BtcXpubReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BtcXpubReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BtcXpubRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BtcXpubRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_btc_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_btc_2eproto() {
  protobuf_AddDesc_btc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "btc.proto");
  GOOGLE_CHECK(file != NULL);
  Utxo_descriptor_ = file->message_type(0);
  static const int Utxo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, tx_hash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, vout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, script_pubkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, derived_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, sequence_),
  };
  Utxo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Utxo_descriptor_,
      Utxo::internal_default_instance(),
      Utxo_offsets_,
      -1,
      -1,
      -1,
      sizeof(Utxo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, _internal_metadata_));
  BtcTxExtra_descriptor_ = file->message_type(1);
  static const int BtcTxExtra_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxExtra, opreturn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxExtra, propertyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxExtra, feemode_),
  };
  BtcTxExtra_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BtcTxExtra_descriptor_,
      BtcTxExtra::internal_default_instance(),
      BtcTxExtra_offsets_,
      -1,
      -1,
      -1,
      sizeof(BtcTxExtra),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxExtra, _internal_metadata_));
  BtcTxInput_descriptor_ = file->message_type(2);
  static const int BtcTxInput_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, fee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, change_address_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, unspents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, segwit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, protocol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, extra_),
  };
  BtcTxInput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BtcTxInput_descriptor_,
      BtcTxInput::internal_default_instance(),
      BtcTxInput_offsets_,
      -1,
      -1,
      -1,
      sizeof(BtcTxInput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, _internal_metadata_));
  BtcTxOutput_descriptor_ = file->message_type(3);
  static const int BtcTxOutput_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxOutput, signature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxOutput, txhash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxOutput, wtxhash_),
  };
  BtcTxOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BtcTxOutput_descriptor_,
      BtcTxOutput::internal_default_instance(),
      BtcTxOutput_offsets_,
      -1,
      -1,
      -1,
      sizeof(BtcTxOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxOutput, _internal_metadata_));
  BtcXpubReq_descriptor_ = file->message_type(4);
  static const int BtcXpubReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcXpubReq, network_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcXpubReq, path_),
  };
  BtcXpubReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BtcXpubReq_descriptor_,
      BtcXpubReq::internal_default_instance(),
      BtcXpubReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(BtcXpubReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcXpubReq, _internal_metadata_));
  BtcXpubRes_descriptor_ = file->message_type(5);
  static const int BtcXpubRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcXpubRes, xpub_),
  };
  BtcXpubRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BtcXpubRes_descriptor_,
      BtcXpubRes::internal_default_instance(),
      BtcXpubRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(BtcXpubRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcXpubRes, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_btc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Utxo_descriptor_, Utxo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BtcTxExtra_descriptor_, BtcTxExtra::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BtcTxInput_descriptor_, BtcTxInput::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BtcTxOutput_descriptor_, BtcTxOutput::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BtcXpubReq_descriptor_, BtcXpubReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BtcXpubRes_descriptor_, BtcXpubRes::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_btc_2eproto() {
  Utxo_default_instance_.Shutdown();
  delete Utxo_reflection_;
  BtcTxExtra_default_instance_.Shutdown();
  delete BtcTxExtra_reflection_;
  BtcTxInput_default_instance_.Shutdown();
  delete BtcTxInput_reflection_;
  BtcTxOutput_default_instance_.Shutdown();
  delete BtcTxOutput_reflection_;
  BtcXpubReq_default_instance_.Shutdown();
  delete BtcXpubReq_reflection_;
  BtcXpubRes_default_instance_.Shutdown();
  delete BtcXpubRes_reflection_;
}

void protobuf_InitDefaults_btc_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  Utxo_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BtcTxExtra_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BtcTxInput_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BtcTxOutput_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BtcXpubReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BtcXpubRes_default_instance_.DefaultConstruct();
  Utxo_default_instance_.get_mutable()->InitAsDefaultInstance();
  BtcTxExtra_default_instance_.get_mutable()->InitAsDefaultInstance();
  BtcTxInput_default_instance_.get_mutable()->InitAsDefaultInstance();
  BtcTxOutput_default_instance_.get_mutable()->InitAsDefaultInstance();
  BtcXpubReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  BtcXpubRes_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_btc_2eproto_once_);
void protobuf_InitDefaults_btc_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_btc_2eproto_once_,
                 &protobuf_InitDefaults_btc_2eproto_impl);
}
void protobuf_AddDesc_btc_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_btc_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tbtc.proto\022\006btcapi\"\205\001\n\004Utxo\022\017\n\007tx_hash\030"
    "\001 \001(\t\022\014\n\004vout\030\002 \001(\005\022\016\n\006amount\030\003 \001(\003\022\017\n\007a"
    "ddress\030\004 \001(\t\022\025\n\rscript_pubKey\030\005 \001(\t\022\024\n\014d"
    "erived_path\030\006 \001(\t\022\020\n\010sequence\030\007 \001(\003\"C\n\nB"
    "tcTxExtra\022\020\n\010opReturn\030\001 \001(\t\022\022\n\npropertyI"
    "d\030\002 \001(\005\022\017\n\007feeMode\030\003 \001(\t\"\270\001\n\nBtcTxInput\022"
    "\n\n\002to\030\001 \001(\t\022\016\n\006amount\030\002 \001(\003\022\013\n\003fee\030\003 \001(\003"
    "\022\034\n\024change_address_index\030\004 \001(\r\022\036\n\010unspen"
    "ts\030\005 \003(\0132\014.btcapi.Utxo\022\016\n\006segWit\030\006 \001(\t\022\020"
    "\n\010protocol\030\007 \001(\t\022!\n\005extra\030\010 \001(\0132\022.btcapi"
    ".BtcTxExtra\"A\n\013BtcTxOutput\022\021\n\tsignature\030"
    "\001 \001(\t\022\016\n\006txHash\030\002 \001(\t\022\017\n\007wtxHash\030\003 \001(\t\"+"
    "\n\nBtcXpubReq\022\017\n\007network\030\001 \001(\t\022\014\n\004path\030\002 "
    "\001(\t\"\032\n\nBtcXpubRes\022\014\n\004xpub\030\001 \001(\tb\006proto3", 559);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "btc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_btc_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_btc_2eproto_once_);
void protobuf_AddDesc_btc_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_btc_2eproto_once_,
                 &protobuf_AddDesc_btc_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_btc_2eproto {
  StaticDescriptorInitializer_btc_2eproto() {
    protobuf_AddDesc_btc_2eproto();
  }
} static_descriptor_initializer_btc_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Utxo::kTxHashFieldNumber;
const int Utxo::kVoutFieldNumber;
const int Utxo::kAmountFieldNumber;
const int Utxo::kAddressFieldNumber;
const int Utxo::kScriptPubKeyFieldNumber;
const int Utxo::kDerivedPathFieldNumber;
const int Utxo::kSequenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Utxo::Utxo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_btc_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:btcapi.Utxo)
}

void Utxo::InitAsDefaultInstance() {
}

Utxo::Utxo(const Utxo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:btcapi.Utxo)
}

void Utxo::SharedCtor() {
  tx_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derived_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, reinterpret_cast<char*>(&vout_) -
    reinterpret_cast<char*>(&amount_) + sizeof(vout_));
  _cached_size_ = 0;
}

Utxo::~Utxo() {
  // @@protoc_insertion_point(destructor:btcapi.Utxo)
  SharedDtor();
}

void Utxo::SharedDtor() {
  tx_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derived_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Utxo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Utxo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Utxo_descriptor_;
}

const Utxo& Utxo::default_instance() {
  protobuf_InitDefaults_btc_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Utxo> Utxo_default_instance_;

Utxo* Utxo::New(::google::protobuf::Arena* arena) const {
  Utxo* n = new Utxo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Utxo::Clear() {
// @@protoc_insertion_point(message_clear_start:btcapi.Utxo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Utxo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Utxo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(amount_, vout_);
  tx_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derived_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Utxo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:btcapi.Utxo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tx_hash = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tx_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tx_hash().data(), this->tx_hash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.Utxo.tx_hash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vout;
        break;
      }

      // optional int32 vout = 2;
      case 2: {
        if (tag == 16) {
         parse_vout:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vout_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_amount;
        break;
      }

      // optional int64 amount = 3;
      case 3: {
        if (tag == 24) {
         parse_amount:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_address;
        break;
      }

      // optional string address = 4;
      case 4: {
        if (tag == 34) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.Utxo.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_script_pubKey;
        break;
      }

      // optional string script_pubKey = 5;
      case 5: {
        if (tag == 42) {
         parse_script_pubKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script_pubkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script_pubkey().data(), this->script_pubkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.Utxo.script_pubKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_derived_path;
        break;
      }

      // optional string derived_path = 6;
      case 6: {
        if (tag == 50) {
         parse_derived_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_derived_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->derived_path().data(), this->derived_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.Utxo.derived_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_sequence;
        break;
      }

      // optional int64 sequence = 7;
      case 7: {
        if (tag == 56) {
         parse_sequence:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:btcapi.Utxo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:btcapi.Utxo)
  return false;
#undef DO_
}

void Utxo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:btcapi.Utxo)
  // optional string tx_hash = 1;
  if (this->tx_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tx_hash().data(), this->tx_hash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.tx_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tx_hash(), output);
  }

  // optional int32 vout = 2;
  if (this->vout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vout(), output);
  }

  // optional int64 amount = 3;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->amount(), output);
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address(), output);
  }

  // optional string script_pubKey = 5;
  if (this->script_pubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_pubkey().data(), this->script_pubkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.script_pubKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->script_pubkey(), output);
  }

  // optional string derived_path = 6;
  if (this->derived_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->derived_path().data(), this->derived_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.derived_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->derived_path(), output);
  }

  // optional int64 sequence = 7;
  if (this->sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->sequence(), output);
  }

  // @@protoc_insertion_point(serialize_end:btcapi.Utxo)
}

::google::protobuf::uint8* Utxo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:btcapi.Utxo)
  // optional string tx_hash = 1;
  if (this->tx_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tx_hash().data(), this->tx_hash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.tx_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tx_hash(), target);
  }

  // optional int32 vout = 2;
  if (this->vout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vout(), target);
  }

  // optional int64 amount = 3;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->amount(), target);
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }

  // optional string script_pubKey = 5;
  if (this->script_pubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_pubkey().data(), this->script_pubkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.script_pubKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->script_pubkey(), target);
  }

  // optional string derived_path = 6;
  if (this->derived_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->derived_path().data(), this->derived_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.derived_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->derived_path(), target);
  }

  // optional int64 sequence = 7;
  if (this->sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->sequence(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:btcapi.Utxo)
  return target;
}

size_t Utxo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:btcapi.Utxo)
  size_t total_size = 0;

  // optional string tx_hash = 1;
  if (this->tx_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tx_hash());
  }

  // optional int32 vout = 2;
  if (this->vout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vout());
  }

  // optional int64 amount = 3;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // optional string script_pubKey = 5;
  if (this->script_pubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script_pubkey());
  }

  // optional string derived_path = 6;
  if (this->derived_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->derived_path());
  }

  // optional int64 sequence = 7;
  if (this->sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sequence());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Utxo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:btcapi.Utxo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Utxo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Utxo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:btcapi.Utxo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:btcapi.Utxo)
    UnsafeMergeFrom(*source);
  }
}

void Utxo::MergeFrom(const Utxo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:btcapi.Utxo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Utxo::UnsafeMergeFrom(const Utxo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.tx_hash().size() > 0) {

    tx_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_hash_);
  }
  if (from.vout() != 0) {
    set_vout(from.vout());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.script_pubkey().size() > 0) {

    script_pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_pubkey_);
  }
  if (from.derived_path().size() > 0) {

    derived_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.derived_path_);
  }
  if (from.sequence() != 0) {
    set_sequence(from.sequence());
  }
}

void Utxo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:btcapi.Utxo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Utxo::CopyFrom(const Utxo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:btcapi.Utxo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Utxo::IsInitialized() const {

  return true;
}

void Utxo::Swap(Utxo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Utxo::InternalSwap(Utxo* other) {
  tx_hash_.Swap(&other->tx_hash_);
  std::swap(vout_, other->vout_);
  std::swap(amount_, other->amount_);
  address_.Swap(&other->address_);
  script_pubkey_.Swap(&other->script_pubkey_);
  derived_path_.Swap(&other->derived_path_);
  std::swap(sequence_, other->sequence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Utxo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Utxo_descriptor_;
  metadata.reflection = Utxo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Utxo

// optional string tx_hash = 1;
void Utxo::clear_tx_hash() {
  tx_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Utxo::tx_hash() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.tx_hash)
  return tx_hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_tx_hash(const ::std::string& value) {
  
  tx_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.tx_hash)
}
void Utxo::set_tx_hash(const char* value) {
  
  tx_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.tx_hash)
}
void Utxo::set_tx_hash(const char* value, size_t size) {
  
  tx_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.tx_hash)
}
::std::string* Utxo::mutable_tx_hash() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.tx_hash)
  return tx_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Utxo::release_tx_hash() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.tx_hash)
  
  return tx_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_allocated_tx_hash(::std::string* tx_hash) {
  if (tx_hash != NULL) {
    
  } else {
    
  }
  tx_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tx_hash);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.tx_hash)
}

// optional int32 vout = 2;
void Utxo::clear_vout() {
  vout_ = 0;
}
::google::protobuf::int32 Utxo::vout() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.vout)
  return vout_;
}
void Utxo::set_vout(::google::protobuf::int32 value) {
  
  vout_ = value;
  // @@protoc_insertion_point(field_set:btcapi.Utxo.vout)
}

// optional int64 amount = 3;
void Utxo::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Utxo::amount() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.amount)
  return amount_;
}
void Utxo::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:btcapi.Utxo.amount)
}

// optional string address = 4;
void Utxo::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Utxo::address() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.address)
}
void Utxo::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.address)
}
void Utxo::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.address)
}
::std::string* Utxo::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Utxo::release_address() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.address)
}

// optional string script_pubKey = 5;
void Utxo::clear_script_pubkey() {
  script_pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Utxo::script_pubkey() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.script_pubKey)
  return script_pubkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_script_pubkey(const ::std::string& value) {
  
  script_pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.script_pubKey)
}
void Utxo::set_script_pubkey(const char* value) {
  
  script_pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.script_pubKey)
}
void Utxo::set_script_pubkey(const char* value, size_t size) {
  
  script_pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.script_pubKey)
}
::std::string* Utxo::mutable_script_pubkey() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.script_pubKey)
  return script_pubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Utxo::release_script_pubkey() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.script_pubKey)
  
  return script_pubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_allocated_script_pubkey(::std::string* script_pubkey) {
  if (script_pubkey != NULL) {
    
  } else {
    
  }
  script_pubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script_pubkey);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.script_pubKey)
}

// optional string derived_path = 6;
void Utxo::clear_derived_path() {
  derived_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Utxo::derived_path() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.derived_path)
  return derived_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_derived_path(const ::std::string& value) {
  
  derived_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.derived_path)
}
void Utxo::set_derived_path(const char* value) {
  
  derived_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.derived_path)
}
void Utxo::set_derived_path(const char* value, size_t size) {
  
  derived_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.derived_path)
}
::std::string* Utxo::mutable_derived_path() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.derived_path)
  return derived_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Utxo::release_derived_path() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.derived_path)
  
  return derived_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_allocated_derived_path(::std::string* derived_path) {
  if (derived_path != NULL) {
    
  } else {
    
  }
  derived_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), derived_path);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.derived_path)
}

// optional int64 sequence = 7;
void Utxo::clear_sequence() {
  sequence_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Utxo::sequence() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.sequence)
  return sequence_;
}
void Utxo::set_sequence(::google::protobuf::int64 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:btcapi.Utxo.sequence)
}

inline const Utxo* Utxo::internal_default_instance() {
  return &Utxo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BtcTxExtra::kOpReturnFieldNumber;
const int BtcTxExtra::kPropertyIdFieldNumber;
const int BtcTxExtra::kFeeModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BtcTxExtra::BtcTxExtra()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_btc_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:btcapi.BtcTxExtra)
}

void BtcTxExtra::InitAsDefaultInstance() {
}

BtcTxExtra::BtcTxExtra(const BtcTxExtra& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:btcapi.BtcTxExtra)
}

void BtcTxExtra::SharedCtor() {
  opreturn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feemode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  propertyid_ = 0;
  _cached_size_ = 0;
}

BtcTxExtra::~BtcTxExtra() {
  // @@protoc_insertion_point(destructor:btcapi.BtcTxExtra)
  SharedDtor();
}

void BtcTxExtra::SharedDtor() {
  opreturn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feemode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BtcTxExtra::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BtcTxExtra::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BtcTxExtra_descriptor_;
}

const BtcTxExtra& BtcTxExtra::default_instance() {
  protobuf_InitDefaults_btc_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BtcTxExtra> BtcTxExtra_default_instance_;

BtcTxExtra* BtcTxExtra::New(::google::protobuf::Arena* arena) const {
  BtcTxExtra* n = new BtcTxExtra;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BtcTxExtra::Clear() {
// @@protoc_insertion_point(message_clear_start:btcapi.BtcTxExtra)
  opreturn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  propertyid_ = 0;
  feemode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BtcTxExtra::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:btcapi.BtcTxExtra)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string opReturn = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opreturn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->opreturn().data(), this->opreturn().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxExtra.opReturn"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_propertyId;
        break;
      }

      // optional int32 propertyId = 2;
      case 2: {
        if (tag == 16) {
         parse_propertyId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &propertyid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_feeMode;
        break;
      }

      // optional string feeMode = 3;
      case 3: {
        if (tag == 26) {
         parse_feeMode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_feemode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->feemode().data(), this->feemode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxExtra.feeMode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:btcapi.BtcTxExtra)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:btcapi.BtcTxExtra)
  return false;
#undef DO_
}

void BtcTxExtra::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:btcapi.BtcTxExtra)
  // optional string opReturn = 1;
  if (this->opreturn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opreturn().data(), this->opreturn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxExtra.opReturn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->opreturn(), output);
  }

  // optional int32 propertyId = 2;
  if (this->propertyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->propertyid(), output);
  }

  // optional string feeMode = 3;
  if (this->feemode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->feemode().data(), this->feemode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxExtra.feeMode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->feemode(), output);
  }

  // @@protoc_insertion_point(serialize_end:btcapi.BtcTxExtra)
}

::google::protobuf::uint8* BtcTxExtra::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:btcapi.BtcTxExtra)
  // optional string opReturn = 1;
  if (this->opreturn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opreturn().data(), this->opreturn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxExtra.opReturn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->opreturn(), target);
  }

  // optional int32 propertyId = 2;
  if (this->propertyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->propertyid(), target);
  }

  // optional string feeMode = 3;
  if (this->feemode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->feemode().data(), this->feemode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxExtra.feeMode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->feemode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:btcapi.BtcTxExtra)
  return target;
}

size_t BtcTxExtra::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:btcapi.BtcTxExtra)
  size_t total_size = 0;

  // optional string opReturn = 1;
  if (this->opreturn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opreturn());
  }

  // optional int32 propertyId = 2;
  if (this->propertyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->propertyid());
  }

  // optional string feeMode = 3;
  if (this->feemode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->feemode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BtcTxExtra::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:btcapi.BtcTxExtra)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BtcTxExtra* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BtcTxExtra>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:btcapi.BtcTxExtra)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:btcapi.BtcTxExtra)
    UnsafeMergeFrom(*source);
  }
}

void BtcTxExtra::MergeFrom(const BtcTxExtra& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:btcapi.BtcTxExtra)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BtcTxExtra::UnsafeMergeFrom(const BtcTxExtra& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.opreturn().size() > 0) {

    opreturn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opreturn_);
  }
  if (from.propertyid() != 0) {
    set_propertyid(from.propertyid());
  }
  if (from.feemode().size() > 0) {

    feemode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feemode_);
  }
}

void BtcTxExtra::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:btcapi.BtcTxExtra)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BtcTxExtra::CopyFrom(const BtcTxExtra& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:btcapi.BtcTxExtra)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BtcTxExtra::IsInitialized() const {

  return true;
}

void BtcTxExtra::Swap(BtcTxExtra* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BtcTxExtra::InternalSwap(BtcTxExtra* other) {
  opreturn_.Swap(&other->opreturn_);
  std::swap(propertyid_, other->propertyid_);
  feemode_.Swap(&other->feemode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BtcTxExtra::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BtcTxExtra_descriptor_;
  metadata.reflection = BtcTxExtra_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BtcTxExtra

// optional string opReturn = 1;
void BtcTxExtra::clear_opreturn() {
  opreturn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxExtra::opreturn() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxExtra.opReturn)
  return opreturn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxExtra::set_opreturn(const ::std::string& value) {
  
  opreturn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxExtra.opReturn)
}
void BtcTxExtra::set_opreturn(const char* value) {
  
  opreturn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxExtra.opReturn)
}
void BtcTxExtra::set_opreturn(const char* value, size_t size) {
  
  opreturn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxExtra.opReturn)
}
::std::string* BtcTxExtra::mutable_opreturn() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxExtra.opReturn)
  return opreturn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxExtra::release_opreturn() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxExtra.opReturn)
  
  return opreturn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxExtra::set_allocated_opreturn(::std::string* opreturn) {
  if (opreturn != NULL) {
    
  } else {
    
  }
  opreturn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opreturn);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxExtra.opReturn)
}

// optional int32 propertyId = 2;
void BtcTxExtra::clear_propertyid() {
  propertyid_ = 0;
}
::google::protobuf::int32 BtcTxExtra::propertyid() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxExtra.propertyId)
  return propertyid_;
}
void BtcTxExtra::set_propertyid(::google::protobuf::int32 value) {
  
  propertyid_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxExtra.propertyId)
}

// optional string feeMode = 3;
void BtcTxExtra::clear_feemode() {
  feemode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxExtra::feemode() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxExtra.feeMode)
  return feemode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxExtra::set_feemode(const ::std::string& value) {
  
  feemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxExtra.feeMode)
}
void BtcTxExtra::set_feemode(const char* value) {
  
  feemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxExtra.feeMode)
}
void BtcTxExtra::set_feemode(const char* value, size_t size) {
  
  feemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxExtra.feeMode)
}
::std::string* BtcTxExtra::mutable_feemode() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxExtra.feeMode)
  return feemode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxExtra::release_feemode() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxExtra.feeMode)
  
  return feemode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxExtra::set_allocated_feemode(::std::string* feemode) {
  if (feemode != NULL) {
    
  } else {
    
  }
  feemode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feemode);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxExtra.feeMode)
}

inline const BtcTxExtra* BtcTxExtra::internal_default_instance() {
  return &BtcTxExtra_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BtcTxInput::kToFieldNumber;
const int BtcTxInput::kAmountFieldNumber;
const int BtcTxInput::kFeeFieldNumber;
const int BtcTxInput::kChangeAddressIndexFieldNumber;
const int BtcTxInput::kUnspentsFieldNumber;
const int BtcTxInput::kSegWitFieldNumber;
const int BtcTxInput::kProtocolFieldNumber;
const int BtcTxInput::kExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BtcTxInput::BtcTxInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_btc_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:btcapi.BtcTxInput)
}

void BtcTxInput::InitAsDefaultInstance() {
  extra_ = const_cast< ::btcapi::BtcTxExtra*>(
      ::btcapi::BtcTxExtra::internal_default_instance());
}

BtcTxInput::BtcTxInput(const BtcTxInput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:btcapi.BtcTxInput)
}

void BtcTxInput::SharedCtor() {
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_ = NULL;
  ::memset(&amount_, 0, reinterpret_cast<char*>(&change_address_index_) -
    reinterpret_cast<char*>(&amount_) + sizeof(change_address_index_));
  _cached_size_ = 0;
}

BtcTxInput::~BtcTxInput() {
  // @@protoc_insertion_point(destructor:btcapi.BtcTxInput)
  SharedDtor();
}

void BtcTxInput::SharedDtor() {
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &BtcTxInput_default_instance_.get()) {
    delete extra_;
  }
}

void BtcTxInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BtcTxInput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BtcTxInput_descriptor_;
}

const BtcTxInput& BtcTxInput::default_instance() {
  protobuf_InitDefaults_btc_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BtcTxInput> BtcTxInput_default_instance_;

BtcTxInput* BtcTxInput::New(::google::protobuf::Arena* arena) const {
  BtcTxInput* n = new BtcTxInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BtcTxInput::Clear() {
// @@protoc_insertion_point(message_clear_start:btcapi.BtcTxInput)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BtcTxInput, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BtcTxInput*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(amount_, change_address_index_);
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && extra_ != NULL) delete extra_;
  extra_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  unspents_.Clear();
}

bool BtcTxInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:btcapi.BtcTxInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string to = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), this->to().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxInput.to"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_amount;
        break;
      }

      // optional int64 amount = 2;
      case 2: {
        if (tag == 16) {
         parse_amount:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_fee;
        break;
      }

      // optional int64 fee = 3;
      case 3: {
        if (tag == 24) {
         parse_fee:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fee_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_change_address_index;
        break;
      }

      // optional uint32 change_address_index = 4;
      case 4: {
        if (tag == 32) {
         parse_change_address_index:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &change_address_index_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_unspents;
        break;
      }

      // repeated .btcapi.Utxo unspents = 5;
      case 5: {
        if (tag == 42) {
         parse_unspents:
          DO_(input->IncrementRecursionDepth());
         parse_loop_unspents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_unspents()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_unspents;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(50)) goto parse_segWit;
        break;
      }

      // optional string segWit = 6;
      case 6: {
        if (tag == 50) {
         parse_segWit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_segwit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->segwit().data(), this->segwit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxInput.segWit"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_protocol;
        break;
      }

      // optional string protocol = 7;
      case 7: {
        if (tag == 58) {
         parse_protocol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protocol().data(), this->protocol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxInput.protocol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_extra;
        break;
      }

      // optional .btcapi.BtcTxExtra extra = 8;
      case 8: {
        if (tag == 66) {
         parse_extra:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extra()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:btcapi.BtcTxInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:btcapi.BtcTxInput)
  return false;
#undef DO_
}

void BtcTxInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:btcapi.BtcTxInput)
  // optional string to = 1;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->to(), output);
  }

  // optional int64 amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->amount(), output);
  }

  // optional int64 fee = 3;
  if (this->fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->fee(), output);
  }

  // optional uint32 change_address_index = 4;
  if (this->change_address_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->change_address_index(), output);
  }

  // repeated .btcapi.Utxo unspents = 5;
  for (unsigned int i = 0, n = this->unspents_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->unspents(i), output);
  }

  // optional string segWit = 6;
  if (this->segwit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segwit().data(), this->segwit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.segWit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->segwit(), output);
  }

  // optional string protocol = 7;
  if (this->protocol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol().data(), this->protocol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.protocol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->protocol(), output);
  }

  // optional .btcapi.BtcTxExtra extra = 8;
  if (this->has_extra()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->extra_, output);
  }

  // @@protoc_insertion_point(serialize_end:btcapi.BtcTxInput)
}

::google::protobuf::uint8* BtcTxInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:btcapi.BtcTxInput)
  // optional string to = 1;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->to(), target);
  }

  // optional int64 amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->amount(), target);
  }

  // optional int64 fee = 3;
  if (this->fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->fee(), target);
  }

  // optional uint32 change_address_index = 4;
  if (this->change_address_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->change_address_index(), target);
  }

  // repeated .btcapi.Utxo unspents = 5;
  for (unsigned int i = 0, n = this->unspents_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->unspents(i), false, target);
  }

  // optional string segWit = 6;
  if (this->segwit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segwit().data(), this->segwit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.segWit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->segwit(), target);
  }

  // optional string protocol = 7;
  if (this->protocol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol().data(), this->protocol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.protocol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->protocol(), target);
  }

  // optional .btcapi.BtcTxExtra extra = 8;
  if (this->has_extra()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->extra_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:btcapi.BtcTxInput)
  return target;
}

size_t BtcTxInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:btcapi.BtcTxInput)
  size_t total_size = 0;

  // optional string to = 1;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // optional int64 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  // optional int64 fee = 3;
  if (this->fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fee());
  }

  // optional uint32 change_address_index = 4;
  if (this->change_address_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->change_address_index());
  }

  // optional string segWit = 6;
  if (this->segwit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->segwit());
  }

  // optional string protocol = 7;
  if (this->protocol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocol());
  }

  // optional .btcapi.BtcTxExtra extra = 8;
  if (this->has_extra()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->extra_);
  }

  // repeated .btcapi.Utxo unspents = 5;
  {
    unsigned int count = this->unspents_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unspents(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BtcTxInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:btcapi.BtcTxInput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BtcTxInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BtcTxInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:btcapi.BtcTxInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:btcapi.BtcTxInput)
    UnsafeMergeFrom(*source);
  }
}

void BtcTxInput::MergeFrom(const BtcTxInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:btcapi.BtcTxInput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BtcTxInput::UnsafeMergeFrom(const BtcTxInput& from) {
  GOOGLE_DCHECK(&from != this);
  unspents_.MergeFrom(from.unspents_);
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.fee() != 0) {
    set_fee(from.fee());
  }
  if (from.change_address_index() != 0) {
    set_change_address_index(from.change_address_index());
  }
  if (from.segwit().size() > 0) {

    segwit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.segwit_);
  }
  if (from.protocol().size() > 0) {

    protocol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_);
  }
  if (from.has_extra()) {
    mutable_extra()->::btcapi::BtcTxExtra::MergeFrom(from.extra());
  }
}

void BtcTxInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:btcapi.BtcTxInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BtcTxInput::CopyFrom(const BtcTxInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:btcapi.BtcTxInput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BtcTxInput::IsInitialized() const {

  return true;
}

void BtcTxInput::Swap(BtcTxInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BtcTxInput::InternalSwap(BtcTxInput* other) {
  to_.Swap(&other->to_);
  std::swap(amount_, other->amount_);
  std::swap(fee_, other->fee_);
  std::swap(change_address_index_, other->change_address_index_);
  unspents_.UnsafeArenaSwap(&other->unspents_);
  segwit_.Swap(&other->segwit_);
  protocol_.Swap(&other->protocol_);
  std::swap(extra_, other->extra_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BtcTxInput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BtcTxInput_descriptor_;
  metadata.reflection = BtcTxInput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BtcTxInput

// optional string to = 1;
void BtcTxInput::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::to() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.to)
  return to_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.to)
}
void BtcTxInput::set_to(const char* value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.to)
}
void BtcTxInput::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.to)
}
::std::string* BtcTxInput::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_to() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.to)
}

// optional int64 amount = 2;
void BtcTxInput::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BtcTxInput::amount() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.amount)
  return amount_;
}
void BtcTxInput::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.amount)
}

// optional int64 fee = 3;
void BtcTxInput::clear_fee() {
  fee_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BtcTxInput::fee() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.fee)
  return fee_;
}
void BtcTxInput::set_fee(::google::protobuf::int64 value) {
  
  fee_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.fee)
}

// optional uint32 change_address_index = 4;
void BtcTxInput::clear_change_address_index() {
  change_address_index_ = 0u;
}
::google::protobuf::uint32 BtcTxInput::change_address_index() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.change_address_index)
  return change_address_index_;
}
void BtcTxInput::set_change_address_index(::google::protobuf::uint32 value) {
  
  change_address_index_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.change_address_index)
}

// repeated .btcapi.Utxo unspents = 5;
int BtcTxInput::unspents_size() const {
  return unspents_.size();
}
void BtcTxInput::clear_unspents() {
  unspents_.Clear();
}
const ::btcapi::Utxo& BtcTxInput::unspents(int index) const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.unspents)
  return unspents_.Get(index);
}
::btcapi::Utxo* BtcTxInput::mutable_unspents(int index) {
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.unspents)
  return unspents_.Mutable(index);
}
::btcapi::Utxo* BtcTxInput::add_unspents() {
  // @@protoc_insertion_point(field_add:btcapi.BtcTxInput.unspents)
  return unspents_.Add();
}
::google::protobuf::RepeatedPtrField< ::btcapi::Utxo >*
BtcTxInput::mutable_unspents() {
  // @@protoc_insertion_point(field_mutable_list:btcapi.BtcTxInput.unspents)
  return &unspents_;
}
const ::google::protobuf::RepeatedPtrField< ::btcapi::Utxo >&
BtcTxInput::unspents() const {
  // @@protoc_insertion_point(field_list:btcapi.BtcTxInput.unspents)
  return unspents_;
}

// optional string segWit = 6;
void BtcTxInput::clear_segwit() {
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::segwit() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.segWit)
  return segwit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_segwit(const ::std::string& value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.segWit)
}
void BtcTxInput::set_segwit(const char* value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.segWit)
}
void BtcTxInput::set_segwit(const char* value, size_t size) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.segWit)
}
::std::string* BtcTxInput::mutable_segwit() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.segWit)
  return segwit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_segwit() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.segWit)
  
  return segwit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_segwit(::std::string* segwit) {
  if (segwit != NULL) {
    
  } else {
    
  }
  segwit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segwit);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.segWit)
}

// optional string protocol = 7;
void BtcTxInput::clear_protocol() {
  protocol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::protocol() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.protocol)
  return protocol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_protocol(const ::std::string& value) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.protocol)
}
void BtcTxInput::set_protocol(const char* value) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.protocol)
}
void BtcTxInput::set_protocol(const char* value, size_t size) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.protocol)
}
::std::string* BtcTxInput::mutable_protocol() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.protocol)
  return protocol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_protocol() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.protocol)
  
  return protocol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_protocol(::std::string* protocol) {
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.protocol)
}

// optional .btcapi.BtcTxExtra extra = 8;
bool BtcTxInput::has_extra() const {
  return this != internal_default_instance() && extra_ != NULL;
}
void BtcTxInput::clear_extra() {
  if (GetArenaNoVirtual() == NULL && extra_ != NULL) delete extra_;
  extra_ = NULL;
}
const ::btcapi::BtcTxExtra& BtcTxInput::extra() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.extra)
  return extra_ != NULL ? *extra_
                         : *::btcapi::BtcTxExtra::internal_default_instance();
}
::btcapi::BtcTxExtra* BtcTxInput::mutable_extra() {
  
  if (extra_ == NULL) {
    extra_ = new ::btcapi::BtcTxExtra;
  }
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.extra)
  return extra_;
}
::btcapi::BtcTxExtra* BtcTxInput::release_extra() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.extra)
  
  ::btcapi::BtcTxExtra* temp = extra_;
  extra_ = NULL;
  return temp;
}
void BtcTxInput::set_allocated_extra(::btcapi::BtcTxExtra* extra) {
  delete extra_;
  extra_ = extra;
  if (extra) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.extra)
}

inline const BtcTxInput* BtcTxInput::internal_default_instance() {
  return &BtcTxInput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BtcTxOutput::kSignatureFieldNumber;
const int BtcTxOutput::kTxHashFieldNumber;
const int BtcTxOutput::kWtxHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BtcTxOutput::BtcTxOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_btc_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:btcapi.BtcTxOutput)
}

void BtcTxOutput::InitAsDefaultInstance() {
}

BtcTxOutput::BtcTxOutput(const BtcTxOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:btcapi.BtcTxOutput)
}

void BtcTxOutput::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wtxhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BtcTxOutput::~BtcTxOutput() {
  // @@protoc_insertion_point(destructor:btcapi.BtcTxOutput)
  SharedDtor();
}

void BtcTxOutput::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wtxhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BtcTxOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BtcTxOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BtcTxOutput_descriptor_;
}

const BtcTxOutput& BtcTxOutput::default_instance() {
  protobuf_InitDefaults_btc_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BtcTxOutput> BtcTxOutput_default_instance_;

BtcTxOutput* BtcTxOutput::New(::google::protobuf::Arena* arena) const {
  BtcTxOutput* n = new BtcTxOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BtcTxOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:btcapi.BtcTxOutput)
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wtxhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BtcTxOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:btcapi.BtcTxOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string signature = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxOutput.signature"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_txHash;
        break;
      }

      // optional string txHash = 2;
      case 2: {
        if (tag == 18) {
         parse_txHash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_txhash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->txhash().data(), this->txhash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxOutput.txHash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_wtxHash;
        break;
      }

      // optional string wtxHash = 3;
      case 3: {
        if (tag == 26) {
         parse_wtxHash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wtxhash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wtxhash().data(), this->wtxhash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxOutput.wtxHash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:btcapi.BtcTxOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:btcapi.BtcTxOutput)
  return false;
#undef DO_
}

void BtcTxOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:btcapi.BtcTxOutput)
  // optional string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxOutput.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  // optional string txHash = 2;
  if (this->txhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txhash().data(), this->txhash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxOutput.txHash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->txhash(), output);
  }

  // optional string wtxHash = 3;
  if (this->wtxhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wtxhash().data(), this->wtxhash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxOutput.wtxHash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->wtxhash(), output);
  }

  // @@protoc_insertion_point(serialize_end:btcapi.BtcTxOutput)
}

::google::protobuf::uint8* BtcTxOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:btcapi.BtcTxOutput)
  // optional string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxOutput.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  // optional string txHash = 2;
  if (this->txhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txhash().data(), this->txhash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxOutput.txHash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->txhash(), target);
  }

  // optional string wtxHash = 3;
  if (this->wtxhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wtxhash().data(), this->wtxhash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxOutput.wtxHash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->wtxhash(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:btcapi.BtcTxOutput)
  return target;
}

size_t BtcTxOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:btcapi.BtcTxOutput)
  size_t total_size = 0;

  // optional string signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // optional string txHash = 2;
  if (this->txhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->txhash());
  }

  // optional string wtxHash = 3;
  if (this->wtxhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wtxhash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BtcTxOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:btcapi.BtcTxOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BtcTxOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BtcTxOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:btcapi.BtcTxOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:btcapi.BtcTxOutput)
    UnsafeMergeFrom(*source);
  }
}

void BtcTxOutput::MergeFrom(const BtcTxOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:btcapi.BtcTxOutput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BtcTxOutput::UnsafeMergeFrom(const BtcTxOutput& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.txhash().size() > 0) {

    txhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txhash_);
  }
  if (from.wtxhash().size() > 0) {

    wtxhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wtxhash_);
  }
}

void BtcTxOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:btcapi.BtcTxOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BtcTxOutput::CopyFrom(const BtcTxOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:btcapi.BtcTxOutput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BtcTxOutput::IsInitialized() const {

  return true;
}

void BtcTxOutput::Swap(BtcTxOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BtcTxOutput::InternalSwap(BtcTxOutput* other) {
  signature_.Swap(&other->signature_);
  txhash_.Swap(&other->txhash_);
  wtxhash_.Swap(&other->wtxhash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BtcTxOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BtcTxOutput_descriptor_;
  metadata.reflection = BtcTxOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BtcTxOutput

// optional string signature = 1;
void BtcTxOutput::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxOutput::signature() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxOutput.signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxOutput::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxOutput.signature)
}
void BtcTxOutput::set_signature(const char* value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxOutput.signature)
}
void BtcTxOutput::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxOutput.signature)
}
::std::string* BtcTxOutput::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxOutput.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxOutput::release_signature() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxOutput.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxOutput::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxOutput.signature)
}

// optional string txHash = 2;
void BtcTxOutput::clear_txhash() {
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxOutput::txhash() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxOutput.txHash)
  return txhash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxOutput::set_txhash(const ::std::string& value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxOutput.txHash)
}
void BtcTxOutput::set_txhash(const char* value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxOutput.txHash)
}
void BtcTxOutput::set_txhash(const char* value, size_t size) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxOutput.txHash)
}
::std::string* BtcTxOutput::mutable_txhash() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxOutput.txHash)
  return txhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxOutput::release_txhash() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxOutput.txHash)
  
  return txhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxOutput::set_allocated_txhash(::std::string* txhash) {
  if (txhash != NULL) {
    
  } else {
    
  }
  txhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txhash);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxOutput.txHash)
}

// optional string wtxHash = 3;
void BtcTxOutput::clear_wtxhash() {
  wtxhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxOutput::wtxhash() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxOutput.wtxHash)
  return wtxhash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxOutput::set_wtxhash(const ::std::string& value) {
  
  wtxhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxOutput.wtxHash)
}
void BtcTxOutput::set_wtxhash(const char* value) {
  
  wtxhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxOutput.wtxHash)
}
void BtcTxOutput::set_wtxhash(const char* value, size_t size) {
  
  wtxhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxOutput.wtxHash)
}
::std::string* BtcTxOutput::mutable_wtxhash() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxOutput.wtxHash)
  return wtxhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxOutput::release_wtxhash() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxOutput.wtxHash)
  
  return wtxhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxOutput::set_allocated_wtxhash(::std::string* wtxhash) {
  if (wtxhash != NULL) {
    
  } else {
    
  }
  wtxhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wtxhash);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxOutput.wtxHash)
}

inline const BtcTxOutput* BtcTxOutput::internal_default_instance() {
  return &BtcTxOutput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BtcXpubReq::kNetworkFieldNumber;
const int BtcXpubReq::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BtcXpubReq::BtcXpubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_btc_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:btcapi.BtcXpubReq)
}

void BtcXpubReq::InitAsDefaultInstance() {
}

BtcXpubReq::BtcXpubReq(const BtcXpubReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:btcapi.BtcXpubReq)
}

void BtcXpubReq::SharedCtor() {
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BtcXpubReq::~BtcXpubReq() {
  // @@protoc_insertion_point(destructor:btcapi.BtcXpubReq)
  SharedDtor();
}

void BtcXpubReq::SharedDtor() {
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BtcXpubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BtcXpubReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BtcXpubReq_descriptor_;
}

const BtcXpubReq& BtcXpubReq::default_instance() {
  protobuf_InitDefaults_btc_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BtcXpubReq> BtcXpubReq_default_instance_;

BtcXpubReq* BtcXpubReq::New(::google::protobuf::Arena* arena) const {
  BtcXpubReq* n = new BtcXpubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BtcXpubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:btcapi.BtcXpubReq)
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BtcXpubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:btcapi.BtcXpubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string network = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), this->network().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcXpubReq.network"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // optional string path = 2;
      case 2: {
        if (tag == 18) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcXpubReq.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:btcapi.BtcXpubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:btcapi.BtcXpubReq)
  return false;
#undef DO_
}

void BtcXpubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:btcapi.BtcXpubReq)
  // optional string network = 1;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcXpubReq.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->network(), output);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcXpubReq.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // @@protoc_insertion_point(serialize_end:btcapi.BtcXpubReq)
}

::google::protobuf::uint8* BtcXpubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:btcapi.BtcXpubReq)
  // optional string network = 1;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcXpubReq.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->network(), target);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcXpubReq.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:btcapi.BtcXpubReq)
  return target;
}

size_t BtcXpubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:btcapi.BtcXpubReq)
  size_t total_size = 0;

  // optional string network = 1;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BtcXpubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:btcapi.BtcXpubReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BtcXpubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BtcXpubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:btcapi.BtcXpubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:btcapi.BtcXpubReq)
    UnsafeMergeFrom(*source);
  }
}

void BtcXpubReq::MergeFrom(const BtcXpubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:btcapi.BtcXpubReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BtcXpubReq::UnsafeMergeFrom(const BtcXpubReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void BtcXpubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:btcapi.BtcXpubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BtcXpubReq::CopyFrom(const BtcXpubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:btcapi.BtcXpubReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BtcXpubReq::IsInitialized() const {

  return true;
}

void BtcXpubReq::Swap(BtcXpubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BtcXpubReq::InternalSwap(BtcXpubReq* other) {
  network_.Swap(&other->network_);
  path_.Swap(&other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BtcXpubReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BtcXpubReq_descriptor_;
  metadata.reflection = BtcXpubReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BtcXpubReq

// optional string network = 1;
void BtcXpubReq::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcXpubReq::network() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcXpubReq.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcXpubReq::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcXpubReq.network)
}
void BtcXpubReq::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcXpubReq.network)
}
void BtcXpubReq::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcXpubReq.network)
}
::std::string* BtcXpubReq::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcXpubReq.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcXpubReq::release_network() {
  // @@protoc_insertion_point(field_release:btcapi.BtcXpubReq.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcXpubReq::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcXpubReq.network)
}

// optional string path = 2;
void BtcXpubReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcXpubReq::path() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcXpubReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcXpubReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcXpubReq.path)
}
void BtcXpubReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcXpubReq.path)
}
void BtcXpubReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcXpubReq.path)
}
::std::string* BtcXpubReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcXpubReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcXpubReq::release_path() {
  // @@protoc_insertion_point(field_release:btcapi.BtcXpubReq.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcXpubReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcXpubReq.path)
}

inline const BtcXpubReq* BtcXpubReq::internal_default_instance() {
  return &BtcXpubReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BtcXpubRes::kXpubFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BtcXpubRes::BtcXpubRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_btc_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:btcapi.BtcXpubRes)
}

void BtcXpubRes::InitAsDefaultInstance() {
}

BtcXpubRes::BtcXpubRes(const BtcXpubRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:btcapi.BtcXpubRes)
}

void BtcXpubRes::SharedCtor() {
  xpub_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BtcXpubRes::~BtcXpubRes() {
  // @@protoc_insertion_point(destructor:btcapi.BtcXpubRes)
  SharedDtor();
}

void BtcXpubRes::SharedDtor() {
  xpub_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BtcXpubRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BtcXpubRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BtcXpubRes_descriptor_;
}

const BtcXpubRes& BtcXpubRes::default_instance() {
  protobuf_InitDefaults_btc_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BtcXpubRes> BtcXpubRes_default_instance_;

BtcXpubRes* BtcXpubRes::New(::google::protobuf::Arena* arena) const {
  BtcXpubRes* n = new BtcXpubRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BtcXpubRes::Clear() {
// @@protoc_insertion_point(message_clear_start:btcapi.BtcXpubRes)
  xpub_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BtcXpubRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:btcapi.BtcXpubRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string xpub = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xpub()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xpub().data(), this->xpub().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcXpubRes.xpub"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:btcapi.BtcXpubRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:btcapi.BtcXpubRes)
  return false;
#undef DO_
}

void BtcXpubRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:btcapi.BtcXpubRes)
  // optional string xpub = 1;
  if (this->xpub().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xpub().data(), this->xpub().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcXpubRes.xpub");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->xpub(), output);
  }

  // @@protoc_insertion_point(serialize_end:btcapi.BtcXpubRes)
}

::google::protobuf::uint8* BtcXpubRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:btcapi.BtcXpubRes)
  // optional string xpub = 1;
  if (this->xpub().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xpub().data(), this->xpub().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcXpubRes.xpub");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->xpub(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:btcapi.BtcXpubRes)
  return target;
}

size_t BtcXpubRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:btcapi.BtcXpubRes)
  size_t total_size = 0;

  // optional string xpub = 1;
  if (this->xpub().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xpub());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BtcXpubRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:btcapi.BtcXpubRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BtcXpubRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BtcXpubRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:btcapi.BtcXpubRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:btcapi.BtcXpubRes)
    UnsafeMergeFrom(*source);
  }
}

void BtcXpubRes::MergeFrom(const BtcXpubRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:btcapi.BtcXpubRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BtcXpubRes::UnsafeMergeFrom(const BtcXpubRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.xpub().size() > 0) {

    xpub_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xpub_);
  }
}

void BtcXpubRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:btcapi.BtcXpubRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BtcXpubRes::CopyFrom(const BtcXpubRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:btcapi.BtcXpubRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BtcXpubRes::IsInitialized() const {

  return true;
}

void BtcXpubRes::Swap(BtcXpubRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BtcXpubRes::InternalSwap(BtcXpubRes* other) {
  xpub_.Swap(&other->xpub_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BtcXpubRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BtcXpubRes_descriptor_;
  metadata.reflection = BtcXpubRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BtcXpubRes

// optional string xpub = 1;
void BtcXpubRes::clear_xpub() {
  xpub_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcXpubRes::xpub() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcXpubRes.xpub)
  return xpub_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcXpubRes::set_xpub(const ::std::string& value) {
  
  xpub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcXpubRes.xpub)
}
void BtcXpubRes::set_xpub(const char* value) {
  
  xpub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcXpubRes.xpub)
}
void BtcXpubRes::set_xpub(const char* value, size_t size) {
  
  xpub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcXpubRes.xpub)
}
::std::string* BtcXpubRes::mutable_xpub() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcXpubRes.xpub)
  return xpub_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcXpubRes::release_xpub() {
  // @@protoc_insertion_point(field_release:btcapi.BtcXpubRes.xpub)
  
  return xpub_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcXpubRes::set_allocated_xpub(::std::string* xpub) {
  if (xpub != NULL) {
    
  } else {
    
  }
  xpub_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xpub);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcXpubRes.xpub)
}

inline const BtcXpubRes* BtcXpubRes::internal_default_instance() {
  return &BtcXpubRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace btcapi

// @@protoc_insertion_point(global_scope)
