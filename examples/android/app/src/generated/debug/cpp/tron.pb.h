// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tron.proto

#ifndef PROTOBUF_tron_2eproto__INCLUDED
#define PROTOBUF_tron_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tronapi {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_tron_2eproto();
void protobuf_InitDefaults_tron_2eproto();
void protobuf_AssignDesc_tron_2eproto();
void protobuf_ShutdownFile_tron_2eproto();

class TronMessageInput;
class TronMessageOutput;
class TronTxInput;
class TronTxOutput;

// ===================================================================

class TronTxInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tronapi.TronTxInput) */ {
 public:
  TronTxInput();
  virtual ~TronTxInput();

  TronTxInput(const TronTxInput& from);

  inline TronTxInput& operator=(const TronTxInput& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TronTxInput& default_instance();

  static const TronTxInput* internal_default_instance();

  void Swap(TronTxInput* other);

  // implements Message ----------------------------------------------

  inline TronTxInput* New() const { return New(NULL); }

  TronTxInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TronTxInput& from);
  void MergeFrom(const TronTxInput& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TronTxInput* other);
  void UnsafeMergeFrom(const TronTxInput& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string raw_data = 2;
  void clear_raw_data();
  static const int kRawDataFieldNumber = 2;
  const ::std::string& raw_data() const;
  void set_raw_data(const ::std::string& value);
  void set_raw_data(const char* value);
  void set_raw_data(const char* value, size_t size);
  ::std::string* mutable_raw_data();
  ::std::string* release_raw_data();
  void set_allocated_raw_data(::std::string* raw_data);

  // @@protoc_insertion_point(class_scope:tronapi.TronTxInput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr raw_data_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tron_2eproto_impl();
  friend void  protobuf_AddDesc_tron_2eproto_impl();
  friend void protobuf_AssignDesc_tron_2eproto();
  friend void protobuf_ShutdownFile_tron_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TronTxInput> TronTxInput_default_instance_;

// -------------------------------------------------------------------

class TronTxOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tronapi.TronTxOutput) */ {
 public:
  TronTxOutput();
  virtual ~TronTxOutput();

  TronTxOutput(const TronTxOutput& from);

  inline TronTxOutput& operator=(const TronTxOutput& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TronTxOutput& default_instance();

  static const TronTxOutput* internal_default_instance();

  void Swap(TronTxOutput* other);

  // implements Message ----------------------------------------------

  inline TronTxOutput* New() const { return New(NULL); }

  TronTxOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TronTxOutput& from);
  void MergeFrom(const TronTxOutput& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TronTxOutput* other);
  void UnsafeMergeFrom(const TronTxOutput& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string signature = 1;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:tronapi.TronTxOutput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tron_2eproto_impl();
  friend void  protobuf_AddDesc_tron_2eproto_impl();
  friend void protobuf_AssignDesc_tron_2eproto();
  friend void protobuf_ShutdownFile_tron_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TronTxOutput> TronTxOutput_default_instance_;

// -------------------------------------------------------------------

class TronMessageInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tronapi.TronMessageInput) */ {
 public:
  TronMessageInput();
  virtual ~TronMessageInput();

  TronMessageInput(const TronMessageInput& from);

  inline TronMessageInput& operator=(const TronMessageInput& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TronMessageInput& default_instance();

  static const TronMessageInput* internal_default_instance();

  void Swap(TronMessageInput* other);

  // implements Message ----------------------------------------------

  inline TronMessageInput* New() const { return New(NULL); }

  TronMessageInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TronMessageInput& from);
  void MergeFrom(const TronMessageInput& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TronMessageInput* other);
  void UnsafeMergeFrom(const TronMessageInput& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional bool is_hex = 4;
  void clear_is_hex();
  static const int kIsHexFieldNumber = 4;
  bool is_hex() const;
  void set_is_hex(bool value);

  // optional bool is_tron_header = 5;
  void clear_is_tron_header();
  static const int kIsTronHeaderFieldNumber = 5;
  bool is_tron_header() const;
  void set_is_tron_header(bool value);

  // @@protoc_insertion_point(class_scope:tronapi.TronMessageInput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  bool is_hex_;
  bool is_tron_header_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tron_2eproto_impl();
  friend void  protobuf_AddDesc_tron_2eproto_impl();
  friend void protobuf_AssignDesc_tron_2eproto();
  friend void protobuf_ShutdownFile_tron_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TronMessageInput> TronMessageInput_default_instance_;

// -------------------------------------------------------------------

class TronMessageOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tronapi.TronMessageOutput) */ {
 public:
  TronMessageOutput();
  virtual ~TronMessageOutput();

  TronMessageOutput(const TronMessageOutput& from);

  inline TronMessageOutput& operator=(const TronMessageOutput& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TronMessageOutput& default_instance();

  static const TronMessageOutput* internal_default_instance();

  void Swap(TronMessageOutput* other);

  // implements Message ----------------------------------------------

  inline TronMessageOutput* New() const { return New(NULL); }

  TronMessageOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TronMessageOutput& from);
  void MergeFrom(const TronMessageOutput& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TronMessageOutput* other);
  void UnsafeMergeFrom(const TronMessageOutput& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string signature = 1;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:tronapi.TronMessageOutput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tron_2eproto_impl();
  friend void  protobuf_AddDesc_tron_2eproto_impl();
  friend void protobuf_AssignDesc_tron_2eproto();
  friend void protobuf_ShutdownFile_tron_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TronMessageOutput> TronMessageOutput_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TronTxInput

// optional string raw_data = 2;
inline void TronTxInput::clear_raw_data() {
  raw_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TronTxInput::raw_data() const {
  // @@protoc_insertion_point(field_get:tronapi.TronTxInput.raw_data)
  return raw_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TronTxInput::set_raw_data(const ::std::string& value) {
  
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tronapi.TronTxInput.raw_data)
}
inline void TronTxInput::set_raw_data(const char* value) {
  
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tronapi.TronTxInput.raw_data)
}
inline void TronTxInput::set_raw_data(const char* value, size_t size) {
  
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tronapi.TronTxInput.raw_data)
}
inline ::std::string* TronTxInput::mutable_raw_data() {
  
  // @@protoc_insertion_point(field_mutable:tronapi.TronTxInput.raw_data)
  return raw_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TronTxInput::release_raw_data() {
  // @@protoc_insertion_point(field_release:tronapi.TronTxInput.raw_data)
  
  return raw_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TronTxInput::set_allocated_raw_data(::std::string* raw_data) {
  if (raw_data != NULL) {
    
  } else {
    
  }
  raw_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_data);
  // @@protoc_insertion_point(field_set_allocated:tronapi.TronTxInput.raw_data)
}

inline const TronTxInput* TronTxInput::internal_default_instance() {
  return &TronTxInput_default_instance_.get();
}
// -------------------------------------------------------------------

// TronTxOutput

// optional string signature = 1;
inline void TronTxOutput::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TronTxOutput::signature() const {
  // @@protoc_insertion_point(field_get:tronapi.TronTxOutput.signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TronTxOutput::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tronapi.TronTxOutput.signature)
}
inline void TronTxOutput::set_signature(const char* value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tronapi.TronTxOutput.signature)
}
inline void TronTxOutput::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tronapi.TronTxOutput.signature)
}
inline ::std::string* TronTxOutput::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:tronapi.TronTxOutput.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TronTxOutput::release_signature() {
  // @@protoc_insertion_point(field_release:tronapi.TronTxOutput.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TronTxOutput::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:tronapi.TronTxOutput.signature)
}

inline const TronTxOutput* TronTxOutput::internal_default_instance() {
  return &TronTxOutput_default_instance_.get();
}
// -------------------------------------------------------------------

// TronMessageInput

// optional string message = 2;
inline void TronMessageInput::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TronMessageInput::message() const {
  // @@protoc_insertion_point(field_get:tronapi.TronMessageInput.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TronMessageInput::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tronapi.TronMessageInput.message)
}
inline void TronMessageInput::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tronapi.TronMessageInput.message)
}
inline void TronMessageInput::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tronapi.TronMessageInput.message)
}
inline ::std::string* TronMessageInput::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:tronapi.TronMessageInput.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TronMessageInput::release_message() {
  // @@protoc_insertion_point(field_release:tronapi.TronMessageInput.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TronMessageInput::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:tronapi.TronMessageInput.message)
}

// optional bool is_hex = 4;
inline void TronMessageInput::clear_is_hex() {
  is_hex_ = false;
}
inline bool TronMessageInput::is_hex() const {
  // @@protoc_insertion_point(field_get:tronapi.TronMessageInput.is_hex)
  return is_hex_;
}
inline void TronMessageInput::set_is_hex(bool value) {
  
  is_hex_ = value;
  // @@protoc_insertion_point(field_set:tronapi.TronMessageInput.is_hex)
}

// optional bool is_tron_header = 5;
inline void TronMessageInput::clear_is_tron_header() {
  is_tron_header_ = false;
}
inline bool TronMessageInput::is_tron_header() const {
  // @@protoc_insertion_point(field_get:tronapi.TronMessageInput.is_tron_header)
  return is_tron_header_;
}
inline void TronMessageInput::set_is_tron_header(bool value) {
  
  is_tron_header_ = value;
  // @@protoc_insertion_point(field_set:tronapi.TronMessageInput.is_tron_header)
}

inline const TronMessageInput* TronMessageInput::internal_default_instance() {
  return &TronMessageInput_default_instance_.get();
}
// -------------------------------------------------------------------

// TronMessageOutput

// optional string signature = 1;
inline void TronMessageOutput::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TronMessageOutput::signature() const {
  // @@protoc_insertion_point(field_get:tronapi.TronMessageOutput.signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TronMessageOutput::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tronapi.TronMessageOutput.signature)
}
inline void TronMessageOutput::set_signature(const char* value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tronapi.TronMessageOutput.signature)
}
inline void TronMessageOutput::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tronapi.TronMessageOutput.signature)
}
inline ::std::string* TronMessageOutput::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:tronapi.TronMessageOutput.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TronMessageOutput::release_signature() {
  // @@protoc_insertion_point(field_release:tronapi.TronMessageOutput.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TronMessageOutput::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:tronapi.TronMessageOutput.signature)
}

inline const TronMessageOutput* TronMessageOutput::internal_default_instance() {
  return &TronMessageOutput_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tronapi

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tron_2eproto__INCLUDED
