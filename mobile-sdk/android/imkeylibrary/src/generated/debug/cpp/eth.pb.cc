// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eth.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "eth.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ethapi {

namespace {

const ::google::protobuf::Descriptor* EthTxReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EthTxReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EthTxRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EthTxRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* EthAddressReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EthAddressReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EthAddressRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EthAddressRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* EthMessageSignReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EthMessageSignReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EthMessageSignRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EthMessageSignRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_eth_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_eth_2eproto() {
  protobuf_AddDesc_eth_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "eth.proto");
  GOOGLE_CHECK(file != NULL);
  EthTxReq_descriptor_ = file->message_type(0);
  static const int EthTxReq_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, nonce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, gas_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, gas_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, chain_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, payment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, receiver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, fee_),
  };
  EthTxReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EthTxReq_descriptor_,
      EthTxReq::internal_default_instance(),
      EthTxReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(EthTxReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxReq, _internal_metadata_));
  EthTxRes_descriptor_ = file->message_type(1);
  static const int EthTxRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxRes, tx_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxRes, tx_hash_),
  };
  EthTxRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EthTxRes_descriptor_,
      EthTxRes::internal_default_instance(),
      EthTxRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(EthTxRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthTxRes, _internal_metadata_));
  EthAddressReq_descriptor_ = file->message_type(2);
  static const int EthAddressReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthAddressReq, path_),
  };
  EthAddressReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EthAddressReq_descriptor_,
      EthAddressReq::internal_default_instance(),
      EthAddressReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(EthAddressReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthAddressReq, _internal_metadata_));
  EthAddressRes_descriptor_ = file->message_type(3);
  static const int EthAddressRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthAddressRes, address_),
  };
  EthAddressRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EthAddressRes_descriptor_,
      EthAddressRes::internal_default_instance(),
      EthAddressRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(EthAddressRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthAddressRes, _internal_metadata_));
  EthMessageSignReq_descriptor_ = file->message_type(4);
  static const int EthMessageSignReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthMessageSignReq, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthMessageSignReq, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthMessageSignReq, sender_),
  };
  EthMessageSignReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EthMessageSignReq_descriptor_,
      EthMessageSignReq::internal_default_instance(),
      EthMessageSignReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(EthMessageSignReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthMessageSignReq, _internal_metadata_));
  EthMessageSignRes_descriptor_ = file->message_type(5);
  static const int EthMessageSignRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthMessageSignRes, signature_),
  };
  EthMessageSignRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EthMessageSignRes_descriptor_,
      EthMessageSignRes::internal_default_instance(),
      EthMessageSignRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(EthMessageSignRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthMessageSignRes, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_eth_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EthTxReq_descriptor_, EthTxReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EthTxRes_descriptor_, EthTxRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EthAddressReq_descriptor_, EthAddressReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EthAddressRes_descriptor_, EthAddressRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EthMessageSignReq_descriptor_, EthMessageSignReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EthMessageSignRes_descriptor_, EthMessageSignRes::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_eth_2eproto() {
  EthTxReq_default_instance_.Shutdown();
  delete EthTxReq_reflection_;
  EthTxRes_default_instance_.Shutdown();
  delete EthTxRes_reflection_;
  EthAddressReq_default_instance_.Shutdown();
  delete EthAddressReq_reflection_;
  EthAddressRes_default_instance_.Shutdown();
  delete EthAddressRes_reflection_;
  EthMessageSignReq_default_instance_.Shutdown();
  delete EthMessageSignReq_reflection_;
  EthMessageSignRes_default_instance_.Shutdown();
  delete EthMessageSignRes_reflection_;
}

void protobuf_InitDefaults_eth_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  EthTxReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EthTxRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EthAddressReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EthAddressRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EthMessageSignReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EthMessageSignRes_default_instance_.DefaultConstruct();
  EthTxReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  EthTxRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  EthAddressReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  EthAddressRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  EthMessageSignReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  EthMessageSignRes_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_eth_2eproto_once_);
void protobuf_InitDefaults_eth_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_eth_2eproto_once_,
                 &protobuf_InitDefaults_eth_2eproto_impl);
}
void protobuf_AddDesc_eth_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_eth_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\teth.proto\022\006ethapi\"\310\001\n\010EthTxReq\022\r\n\005nonc"
    "e\030\001 \001(\t\022\021\n\tgas_price\030\002 \001(\t\022\021\n\tgas_limit\030"
    "\003 \001(\t\022\n\n\002to\030\004 \001(\t\022\r\n\005value\030\005 \001(\t\022\014\n\004data"
    "\030\006 \001(\t\022\020\n\010chain_id\030\007 \001(\t\022\014\n\004path\030\010 \001(\t\022\017"
    "\n\007payment\030\t \001(\t\022\020\n\010receiver\030\n \001(\t\022\016\n\006sen"
    "der\030\013 \001(\t\022\013\n\003fee\030\014 \001(\t\",\n\010EthTxRes\022\017\n\007tx"
    "_data\030\001 \001(\t\022\017\n\007tx_hash\030\002 \001(\t\"\035\n\rEthAddre"
    "ssReq\022\014\n\004path\030\001 \001(\t\" \n\rEthAddressRes\022\017\n\007"
    "address\030\001 \001(\t\"B\n\021EthMessageSignReq\022\014\n\004pa"
    "th\030\001 \001(\t\022\017\n\007message\030\002 \001(\t\022\016\n\006sender\030\003 \001("
    "\t\"&\n\021EthMessageSignRes\022\021\n\tsignature\030\001 \001("
    "\tb\006proto3", 449);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "eth.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_eth_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_eth_2eproto_once_);
void protobuf_AddDesc_eth_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_eth_2eproto_once_,
                 &protobuf_AddDesc_eth_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_eth_2eproto {
  StaticDescriptorInitializer_eth_2eproto() {
    protobuf_AddDesc_eth_2eproto();
  }
} static_descriptor_initializer_eth_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EthTxReq::kNonceFieldNumber;
const int EthTxReq::kGasPriceFieldNumber;
const int EthTxReq::kGasLimitFieldNumber;
const int EthTxReq::kToFieldNumber;
const int EthTxReq::kValueFieldNumber;
const int EthTxReq::kDataFieldNumber;
const int EthTxReq::kChainIdFieldNumber;
const int EthTxReq::kPathFieldNumber;
const int EthTxReq::kPaymentFieldNumber;
const int EthTxReq::kReceiverFieldNumber;
const int EthTxReq::kSenderFieldNumber;
const int EthTxReq::kFeeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EthTxReq::EthTxReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_eth_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ethapi.EthTxReq)
}

void EthTxReq::InitAsDefaultInstance() {
}

EthTxReq::EthTxReq(const EthTxReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ethapi.EthTxReq)
}

void EthTxReq::SharedCtor() {
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chain_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fee_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EthTxReq::~EthTxReq() {
  // @@protoc_insertion_point(destructor:ethapi.EthTxReq)
  SharedDtor();
}

void EthTxReq::SharedDtor() {
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chain_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fee_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EthTxReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EthTxReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EthTxReq_descriptor_;
}

const EthTxReq& EthTxReq::default_instance() {
  protobuf_InitDefaults_eth_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EthTxReq> EthTxReq_default_instance_;

EthTxReq* EthTxReq::New(::google::protobuf::Arena* arena) const {
  EthTxReq* n = new EthTxReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EthTxReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ethapi.EthTxReq)
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chain_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EthTxReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ethapi.EthTxReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string nonce = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nonce().data(), this->nonce().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxReq.nonce"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gas_price;
        break;
      }

      // optional string gas_price = 2;
      case 2: {
        if (tag == 18) {
         parse_gas_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gas_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gas_price().data(), this->gas_price().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxReq.gas_price"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gas_limit;
        break;
      }

      // optional string gas_limit = 3;
      case 3: {
        if (tag == 26) {
         parse_gas_limit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gas_limit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gas_limit().data(), this->gas_limit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxReq.gas_limit"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_to;
        break;
      }

      // optional string to = 4;
      case 4: {
        if (tag == 34) {
         parse_to:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), this->to().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxReq.to"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_value;
        break;
      }

      // optional string value = 5;
      case 5: {
        if (tag == 42) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxReq.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_data;
        break;
      }

      // optional string data = 6;
      case 6: {
        if (tag == 50) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxReq.data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_chain_id;
        break;
      }

      // optional string chain_id = 7;
      case 7: {
        if (tag == 58) {
         parse_chain_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chain_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chain_id().data(), this->chain_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxReq.chain_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_path;
        break;
      }

      // optional string path = 8;
      case 8: {
        if (tag == 66) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxReq.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_payment;
        break;
      }

      // optional string payment = 9;
      case 9: {
        if (tag == 74) {
         parse_payment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payment().data(), this->payment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxReq.payment"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_receiver;
        break;
      }

      // optional string receiver = 10;
      case 10: {
        if (tag == 82) {
         parse_receiver:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->receiver().data(), this->receiver().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxReq.receiver"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_sender;
        break;
      }

      // optional string sender = 11;
      case 11: {
        if (tag == 90) {
         parse_sender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), this->sender().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxReq.sender"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_fee;
        break;
      }

      // optional string fee = 12;
      case 12: {
        if (tag == 98) {
         parse_fee:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fee()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fee().data(), this->fee().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxReq.fee"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ethapi.EthTxReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ethapi.EthTxReq)
  return false;
#undef DO_
}

void EthTxReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ethapi.EthTxReq)
  // optional string nonce = 1;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), this->nonce().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.nonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nonce(), output);
  }

  // optional string gas_price = 2;
  if (this->gas_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_price().data(), this->gas_price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.gas_price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gas_price(), output);
  }

  // optional string gas_limit = 3;
  if (this->gas_limit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_limit().data(), this->gas_limit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.gas_limit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gas_limit(), output);
  }

  // optional string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->to(), output);
  }

  // optional string value = 5;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->value(), output);
  }

  // optional string data = 6;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->data(), output);
  }

  // optional string chain_id = 7;
  if (this->chain_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chain_id().data(), this->chain_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.chain_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->chain_id(), output);
  }

  // optional string path = 8;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->path(), output);
  }

  // optional string payment = 9;
  if (this->payment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment().data(), this->payment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.payment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->payment(), output);
  }

  // optional string receiver = 10;
  if (this->receiver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->receiver().data(), this->receiver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.receiver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->receiver(), output);
  }

  // optional string sender = 11;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sender(), output);
  }

  // optional string fee = 12;
  if (this->fee().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fee().data(), this->fee().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.fee");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->fee(), output);
  }

  // @@protoc_insertion_point(serialize_end:ethapi.EthTxReq)
}

::google::protobuf::uint8* EthTxReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ethapi.EthTxReq)
  // optional string nonce = 1;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), this->nonce().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.nonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nonce(), target);
  }

  // optional string gas_price = 2;
  if (this->gas_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_price().data(), this->gas_price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.gas_price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gas_price(), target);
  }

  // optional string gas_limit = 3;
  if (this->gas_limit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_limit().data(), this->gas_limit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.gas_limit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gas_limit(), target);
  }

  // optional string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->to(), target);
  }

  // optional string value = 5;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->value(), target);
  }

  // optional string data = 6;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->data(), target);
  }

  // optional string chain_id = 7;
  if (this->chain_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chain_id().data(), this->chain_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.chain_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->chain_id(), target);
  }

  // optional string path = 8;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->path(), target);
  }

  // optional string payment = 9;
  if (this->payment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment().data(), this->payment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.payment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->payment(), target);
  }

  // optional string receiver = 10;
  if (this->receiver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->receiver().data(), this->receiver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.receiver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->receiver(), target);
  }

  // optional string sender = 11;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sender(), target);
  }

  // optional string fee = 12;
  if (this->fee().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fee().data(), this->fee().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxReq.fee");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->fee(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ethapi.EthTxReq)
  return target;
}

size_t EthTxReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ethapi.EthTxReq)
  size_t total_size = 0;

  // optional string nonce = 1;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nonce());
  }

  // optional string gas_price = 2;
  if (this->gas_price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gas_price());
  }

  // optional string gas_limit = 3;
  if (this->gas_limit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gas_limit());
  }

  // optional string to = 4;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // optional string value = 5;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // optional string data = 6;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // optional string chain_id = 7;
  if (this->chain_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chain_id());
  }

  // optional string path = 8;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional string payment = 9;
  if (this->payment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payment());
  }

  // optional string receiver = 10;
  if (this->receiver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receiver());
  }

  // optional string sender = 11;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // optional string fee = 12;
  if (this->fee().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fee());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EthTxReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ethapi.EthTxReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EthTxReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EthTxReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ethapi.EthTxReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ethapi.EthTxReq)
    UnsafeMergeFrom(*source);
  }
}

void EthTxReq::MergeFrom(const EthTxReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ethapi.EthTxReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EthTxReq::UnsafeMergeFrom(const EthTxReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.nonce().size() > 0) {

    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  if (from.gas_price().size() > 0) {

    gas_price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_price_);
  }
  if (from.gas_limit().size() > 0) {

    gas_limit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_limit_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.chain_id().size() > 0) {

    chain_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chain_id_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.payment().size() > 0) {

    payment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_);
  }
  if (from.receiver().size() > 0) {

    receiver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.fee().size() > 0) {

    fee_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fee_);
  }
}

void EthTxReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ethapi.EthTxReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EthTxReq::CopyFrom(const EthTxReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ethapi.EthTxReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EthTxReq::IsInitialized() const {

  return true;
}

void EthTxReq::Swap(EthTxReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EthTxReq::InternalSwap(EthTxReq* other) {
  nonce_.Swap(&other->nonce_);
  gas_price_.Swap(&other->gas_price_);
  gas_limit_.Swap(&other->gas_limit_);
  to_.Swap(&other->to_);
  value_.Swap(&other->value_);
  data_.Swap(&other->data_);
  chain_id_.Swap(&other->chain_id_);
  path_.Swap(&other->path_);
  payment_.Swap(&other->payment_);
  receiver_.Swap(&other->receiver_);
  sender_.Swap(&other->sender_);
  fee_.Swap(&other->fee_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EthTxReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EthTxReq_descriptor_;
  metadata.reflection = EthTxReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EthTxReq

// optional string nonce = 1;
void EthTxReq::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxReq::nonce() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxReq.nonce)
  return nonce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxReq.nonce)
}
void EthTxReq::set_nonce(const char* value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxReq.nonce)
}
void EthTxReq::set_nonce(const char* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxReq.nonce)
}
::std::string* EthTxReq::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxReq.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxReq::release_nonce() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxReq.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxReq.nonce)
}

// optional string gas_price = 2;
void EthTxReq::clear_gas_price() {
  gas_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxReq::gas_price() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxReq.gas_price)
  return gas_price_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_gas_price(const ::std::string& value) {
  
  gas_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxReq.gas_price)
}
void EthTxReq::set_gas_price(const char* value) {
  
  gas_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxReq.gas_price)
}
void EthTxReq::set_gas_price(const char* value, size_t size) {
  
  gas_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxReq.gas_price)
}
::std::string* EthTxReq::mutable_gas_price() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxReq.gas_price)
  return gas_price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxReq::release_gas_price() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxReq.gas_price)
  
  return gas_price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_allocated_gas_price(::std::string* gas_price) {
  if (gas_price != NULL) {
    
  } else {
    
  }
  gas_price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gas_price);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxReq.gas_price)
}

// optional string gas_limit = 3;
void EthTxReq::clear_gas_limit() {
  gas_limit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxReq::gas_limit() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxReq.gas_limit)
  return gas_limit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_gas_limit(const ::std::string& value) {
  
  gas_limit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxReq.gas_limit)
}
void EthTxReq::set_gas_limit(const char* value) {
  
  gas_limit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxReq.gas_limit)
}
void EthTxReq::set_gas_limit(const char* value, size_t size) {
  
  gas_limit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxReq.gas_limit)
}
::std::string* EthTxReq::mutable_gas_limit() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxReq.gas_limit)
  return gas_limit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxReq::release_gas_limit() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxReq.gas_limit)
  
  return gas_limit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_allocated_gas_limit(::std::string* gas_limit) {
  if (gas_limit != NULL) {
    
  } else {
    
  }
  gas_limit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gas_limit);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxReq.gas_limit)
}

// optional string to = 4;
void EthTxReq::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxReq::to() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxReq.to)
  return to_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxReq.to)
}
void EthTxReq::set_to(const char* value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxReq.to)
}
void EthTxReq::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxReq.to)
}
::std::string* EthTxReq::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxReq.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxReq::release_to() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxReq.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxReq.to)
}

// optional string value = 5;
void EthTxReq::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxReq::value() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxReq.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxReq.value)
}
void EthTxReq::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxReq.value)
}
void EthTxReq::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxReq.value)
}
::std::string* EthTxReq::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxReq.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxReq::release_value() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxReq.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxReq.value)
}

// optional string data = 6;
void EthTxReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxReq::data() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxReq.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxReq.data)
}
void EthTxReq::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxReq.data)
}
void EthTxReq::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxReq.data)
}
::std::string* EthTxReq::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxReq::release_data() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxReq.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxReq.data)
}

// optional string chain_id = 7;
void EthTxReq::clear_chain_id() {
  chain_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxReq::chain_id() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxReq.chain_id)
  return chain_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_chain_id(const ::std::string& value) {
  
  chain_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxReq.chain_id)
}
void EthTxReq::set_chain_id(const char* value) {
  
  chain_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxReq.chain_id)
}
void EthTxReq::set_chain_id(const char* value, size_t size) {
  
  chain_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxReq.chain_id)
}
::std::string* EthTxReq::mutable_chain_id() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxReq.chain_id)
  return chain_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxReq::release_chain_id() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxReq.chain_id)
  
  return chain_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_allocated_chain_id(::std::string* chain_id) {
  if (chain_id != NULL) {
    
  } else {
    
  }
  chain_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chain_id);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxReq.chain_id)
}

// optional string path = 8;
void EthTxReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxReq::path() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxReq.path)
}
void EthTxReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxReq.path)
}
void EthTxReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxReq.path)
}
::std::string* EthTxReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxReq::release_path() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxReq.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxReq.path)
}

// optional string payment = 9;
void EthTxReq::clear_payment() {
  payment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxReq::payment() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxReq.payment)
  return payment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_payment(const ::std::string& value) {
  
  payment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxReq.payment)
}
void EthTxReq::set_payment(const char* value) {
  
  payment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxReq.payment)
}
void EthTxReq::set_payment(const char* value, size_t size) {
  
  payment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxReq.payment)
}
::std::string* EthTxReq::mutable_payment() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxReq.payment)
  return payment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxReq::release_payment() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxReq.payment)
  
  return payment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_allocated_payment(::std::string* payment) {
  if (payment != NULL) {
    
  } else {
    
  }
  payment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payment);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxReq.payment)
}

// optional string receiver = 10;
void EthTxReq::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxReq::receiver() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxReq.receiver)
  return receiver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_receiver(const ::std::string& value) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxReq.receiver)
}
void EthTxReq::set_receiver(const char* value) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxReq.receiver)
}
void EthTxReq::set_receiver(const char* value, size_t size) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxReq.receiver)
}
::std::string* EthTxReq::mutable_receiver() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxReq.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxReq::release_receiver() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxReq.receiver)
  
  return receiver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_allocated_receiver(::std::string* receiver) {
  if (receiver != NULL) {
    
  } else {
    
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxReq.receiver)
}

// optional string sender = 11;
void EthTxReq::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxReq::sender() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxReq.sender)
  return sender_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxReq.sender)
}
void EthTxReq::set_sender(const char* value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxReq.sender)
}
void EthTxReq::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxReq.sender)
}
::std::string* EthTxReq::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxReq.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxReq::release_sender() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxReq.sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxReq.sender)
}

// optional string fee = 12;
void EthTxReq::clear_fee() {
  fee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxReq::fee() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxReq.fee)
  return fee_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_fee(const ::std::string& value) {
  
  fee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxReq.fee)
}
void EthTxReq::set_fee(const char* value) {
  
  fee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxReq.fee)
}
void EthTxReq::set_fee(const char* value, size_t size) {
  
  fee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxReq.fee)
}
::std::string* EthTxReq::mutable_fee() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxReq.fee)
  return fee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxReq::release_fee() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxReq.fee)
  
  return fee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxReq::set_allocated_fee(::std::string* fee) {
  if (fee != NULL) {
    
  } else {
    
  }
  fee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fee);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxReq.fee)
}

inline const EthTxReq* EthTxReq::internal_default_instance() {
  return &EthTxReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EthTxRes::kTxDataFieldNumber;
const int EthTxRes::kTxHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EthTxRes::EthTxRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_eth_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ethapi.EthTxRes)
}

void EthTxRes::InitAsDefaultInstance() {
}

EthTxRes::EthTxRes(const EthTxRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ethapi.EthTxRes)
}

void EthTxRes::SharedCtor() {
  tx_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EthTxRes::~EthTxRes() {
  // @@protoc_insertion_point(destructor:ethapi.EthTxRes)
  SharedDtor();
}

void EthTxRes::SharedDtor() {
  tx_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EthTxRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EthTxRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EthTxRes_descriptor_;
}

const EthTxRes& EthTxRes::default_instance() {
  protobuf_InitDefaults_eth_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EthTxRes> EthTxRes_default_instance_;

EthTxRes* EthTxRes::New(::google::protobuf::Arena* arena) const {
  EthTxRes* n = new EthTxRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EthTxRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ethapi.EthTxRes)
  tx_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EthTxRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ethapi.EthTxRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tx_data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tx_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tx_data().data(), this->tx_data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxRes.tx_data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tx_hash;
        break;
      }

      // optional string tx_hash = 2;
      case 2: {
        if (tag == 18) {
         parse_tx_hash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tx_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tx_hash().data(), this->tx_hash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthTxRes.tx_hash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ethapi.EthTxRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ethapi.EthTxRes)
  return false;
#undef DO_
}

void EthTxRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ethapi.EthTxRes)
  // optional string tx_data = 1;
  if (this->tx_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tx_data().data(), this->tx_data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxRes.tx_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tx_data(), output);
  }

  // optional string tx_hash = 2;
  if (this->tx_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tx_hash().data(), this->tx_hash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxRes.tx_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tx_hash(), output);
  }

  // @@protoc_insertion_point(serialize_end:ethapi.EthTxRes)
}

::google::protobuf::uint8* EthTxRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ethapi.EthTxRes)
  // optional string tx_data = 1;
  if (this->tx_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tx_data().data(), this->tx_data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxRes.tx_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tx_data(), target);
  }

  // optional string tx_hash = 2;
  if (this->tx_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tx_hash().data(), this->tx_hash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthTxRes.tx_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tx_hash(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ethapi.EthTxRes)
  return target;
}

size_t EthTxRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ethapi.EthTxRes)
  size_t total_size = 0;

  // optional string tx_data = 1;
  if (this->tx_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tx_data());
  }

  // optional string tx_hash = 2;
  if (this->tx_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tx_hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EthTxRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ethapi.EthTxRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EthTxRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EthTxRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ethapi.EthTxRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ethapi.EthTxRes)
    UnsafeMergeFrom(*source);
  }
}

void EthTxRes::MergeFrom(const EthTxRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ethapi.EthTxRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EthTxRes::UnsafeMergeFrom(const EthTxRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.tx_data().size() > 0) {

    tx_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_data_);
  }
  if (from.tx_hash().size() > 0) {

    tx_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_hash_);
  }
}

void EthTxRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ethapi.EthTxRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EthTxRes::CopyFrom(const EthTxRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ethapi.EthTxRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EthTxRes::IsInitialized() const {

  return true;
}

void EthTxRes::Swap(EthTxRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EthTxRes::InternalSwap(EthTxRes* other) {
  tx_data_.Swap(&other->tx_data_);
  tx_hash_.Swap(&other->tx_hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EthTxRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EthTxRes_descriptor_;
  metadata.reflection = EthTxRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EthTxRes

// optional string tx_data = 1;
void EthTxRes::clear_tx_data() {
  tx_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxRes::tx_data() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxRes.tx_data)
  return tx_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxRes::set_tx_data(const ::std::string& value) {
  
  tx_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxRes.tx_data)
}
void EthTxRes::set_tx_data(const char* value) {
  
  tx_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxRes.tx_data)
}
void EthTxRes::set_tx_data(const char* value, size_t size) {
  
  tx_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxRes.tx_data)
}
::std::string* EthTxRes::mutable_tx_data() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxRes.tx_data)
  return tx_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxRes::release_tx_data() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxRes.tx_data)
  
  return tx_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxRes::set_allocated_tx_data(::std::string* tx_data) {
  if (tx_data != NULL) {
    
  } else {
    
  }
  tx_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tx_data);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxRes.tx_data)
}

// optional string tx_hash = 2;
void EthTxRes::clear_tx_hash() {
  tx_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthTxRes::tx_hash() const {
  // @@protoc_insertion_point(field_get:ethapi.EthTxRes.tx_hash)
  return tx_hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxRes::set_tx_hash(const ::std::string& value) {
  
  tx_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthTxRes.tx_hash)
}
void EthTxRes::set_tx_hash(const char* value) {
  
  tx_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthTxRes.tx_hash)
}
void EthTxRes::set_tx_hash(const char* value, size_t size) {
  
  tx_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthTxRes.tx_hash)
}
::std::string* EthTxRes::mutable_tx_hash() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthTxRes.tx_hash)
  return tx_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthTxRes::release_tx_hash() {
  // @@protoc_insertion_point(field_release:ethapi.EthTxRes.tx_hash)
  
  return tx_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthTxRes::set_allocated_tx_hash(::std::string* tx_hash) {
  if (tx_hash != NULL) {
    
  } else {
    
  }
  tx_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tx_hash);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthTxRes.tx_hash)
}

inline const EthTxRes* EthTxRes::internal_default_instance() {
  return &EthTxRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EthAddressReq::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EthAddressReq::EthAddressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_eth_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ethapi.EthAddressReq)
}

void EthAddressReq::InitAsDefaultInstance() {
}

EthAddressReq::EthAddressReq(const EthAddressReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ethapi.EthAddressReq)
}

void EthAddressReq::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EthAddressReq::~EthAddressReq() {
  // @@protoc_insertion_point(destructor:ethapi.EthAddressReq)
  SharedDtor();
}

void EthAddressReq::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EthAddressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EthAddressReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EthAddressReq_descriptor_;
}

const EthAddressReq& EthAddressReq::default_instance() {
  protobuf_InitDefaults_eth_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EthAddressReq> EthAddressReq_default_instance_;

EthAddressReq* EthAddressReq::New(::google::protobuf::Arena* arena) const {
  EthAddressReq* n = new EthAddressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EthAddressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ethapi.EthAddressReq)
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EthAddressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ethapi.EthAddressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthAddressReq.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ethapi.EthAddressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ethapi.EthAddressReq)
  return false;
#undef DO_
}

void EthAddressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ethapi.EthAddressReq)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthAddressReq.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // @@protoc_insertion_point(serialize_end:ethapi.EthAddressReq)
}

::google::protobuf::uint8* EthAddressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ethapi.EthAddressReq)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthAddressReq.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ethapi.EthAddressReq)
  return target;
}

size_t EthAddressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ethapi.EthAddressReq)
  size_t total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EthAddressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ethapi.EthAddressReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EthAddressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EthAddressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ethapi.EthAddressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ethapi.EthAddressReq)
    UnsafeMergeFrom(*source);
  }
}

void EthAddressReq::MergeFrom(const EthAddressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ethapi.EthAddressReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EthAddressReq::UnsafeMergeFrom(const EthAddressReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void EthAddressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ethapi.EthAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EthAddressReq::CopyFrom(const EthAddressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ethapi.EthAddressReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EthAddressReq::IsInitialized() const {

  return true;
}

void EthAddressReq::Swap(EthAddressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EthAddressReq::InternalSwap(EthAddressReq* other) {
  path_.Swap(&other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EthAddressReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EthAddressReq_descriptor_;
  metadata.reflection = EthAddressReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EthAddressReq

// optional string path = 1;
void EthAddressReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthAddressReq::path() const {
  // @@protoc_insertion_point(field_get:ethapi.EthAddressReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthAddressReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthAddressReq.path)
}
void EthAddressReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthAddressReq.path)
}
void EthAddressReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthAddressReq.path)
}
::std::string* EthAddressReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthAddressReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthAddressReq::release_path() {
  // @@protoc_insertion_point(field_release:ethapi.EthAddressReq.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthAddressReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthAddressReq.path)
}

inline const EthAddressReq* EthAddressReq::internal_default_instance() {
  return &EthAddressReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EthAddressRes::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EthAddressRes::EthAddressRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_eth_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ethapi.EthAddressRes)
}

void EthAddressRes::InitAsDefaultInstance() {
}

EthAddressRes::EthAddressRes(const EthAddressRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ethapi.EthAddressRes)
}

void EthAddressRes::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EthAddressRes::~EthAddressRes() {
  // @@protoc_insertion_point(destructor:ethapi.EthAddressRes)
  SharedDtor();
}

void EthAddressRes::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EthAddressRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EthAddressRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EthAddressRes_descriptor_;
}

const EthAddressRes& EthAddressRes::default_instance() {
  protobuf_InitDefaults_eth_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EthAddressRes> EthAddressRes_default_instance_;

EthAddressRes* EthAddressRes::New(::google::protobuf::Arena* arena) const {
  EthAddressRes* n = new EthAddressRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EthAddressRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ethapi.EthAddressRes)
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EthAddressRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ethapi.EthAddressRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthAddressRes.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ethapi.EthAddressRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ethapi.EthAddressRes)
  return false;
#undef DO_
}

void EthAddressRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ethapi.EthAddressRes)
  // optional string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthAddressRes.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // @@protoc_insertion_point(serialize_end:ethapi.EthAddressRes)
}

::google::protobuf::uint8* EthAddressRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ethapi.EthAddressRes)
  // optional string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthAddressRes.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ethapi.EthAddressRes)
  return target;
}

size_t EthAddressRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ethapi.EthAddressRes)
  size_t total_size = 0;

  // optional string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EthAddressRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ethapi.EthAddressRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EthAddressRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EthAddressRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ethapi.EthAddressRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ethapi.EthAddressRes)
    UnsafeMergeFrom(*source);
  }
}

void EthAddressRes::MergeFrom(const EthAddressRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ethapi.EthAddressRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EthAddressRes::UnsafeMergeFrom(const EthAddressRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void EthAddressRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ethapi.EthAddressRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EthAddressRes::CopyFrom(const EthAddressRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ethapi.EthAddressRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EthAddressRes::IsInitialized() const {

  return true;
}

void EthAddressRes::Swap(EthAddressRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EthAddressRes::InternalSwap(EthAddressRes* other) {
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EthAddressRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EthAddressRes_descriptor_;
  metadata.reflection = EthAddressRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EthAddressRes

// optional string address = 1;
void EthAddressRes::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthAddressRes::address() const {
  // @@protoc_insertion_point(field_get:ethapi.EthAddressRes.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthAddressRes::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthAddressRes.address)
}
void EthAddressRes::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthAddressRes.address)
}
void EthAddressRes::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthAddressRes.address)
}
::std::string* EthAddressRes::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthAddressRes.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthAddressRes::release_address() {
  // @@protoc_insertion_point(field_release:ethapi.EthAddressRes.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthAddressRes::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthAddressRes.address)
}

inline const EthAddressRes* EthAddressRes::internal_default_instance() {
  return &EthAddressRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EthMessageSignReq::kPathFieldNumber;
const int EthMessageSignReq::kMessageFieldNumber;
const int EthMessageSignReq::kSenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EthMessageSignReq::EthMessageSignReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_eth_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ethapi.EthMessageSignReq)
}

void EthMessageSignReq::InitAsDefaultInstance() {
}

EthMessageSignReq::EthMessageSignReq(const EthMessageSignReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ethapi.EthMessageSignReq)
}

void EthMessageSignReq::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EthMessageSignReq::~EthMessageSignReq() {
  // @@protoc_insertion_point(destructor:ethapi.EthMessageSignReq)
  SharedDtor();
}

void EthMessageSignReq::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EthMessageSignReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EthMessageSignReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EthMessageSignReq_descriptor_;
}

const EthMessageSignReq& EthMessageSignReq::default_instance() {
  protobuf_InitDefaults_eth_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EthMessageSignReq> EthMessageSignReq_default_instance_;

EthMessageSignReq* EthMessageSignReq::New(::google::protobuf::Arena* arena) const {
  EthMessageSignReq* n = new EthMessageSignReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EthMessageSignReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ethapi.EthMessageSignReq)
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EthMessageSignReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ethapi.EthMessageSignReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthMessageSignReq.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (tag == 18) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthMessageSignReq.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sender;
        break;
      }

      // optional string sender = 3;
      case 3: {
        if (tag == 26) {
         parse_sender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), this->sender().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthMessageSignReq.sender"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ethapi.EthMessageSignReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ethapi.EthMessageSignReq)
  return false;
#undef DO_
}

void EthMessageSignReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ethapi.EthMessageSignReq)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthMessageSignReq.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthMessageSignReq.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // optional string sender = 3;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthMessageSignReq.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sender(), output);
  }

  // @@protoc_insertion_point(serialize_end:ethapi.EthMessageSignReq)
}

::google::protobuf::uint8* EthMessageSignReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ethapi.EthMessageSignReq)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthMessageSignReq.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthMessageSignReq.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // optional string sender = 3;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthMessageSignReq.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sender(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ethapi.EthMessageSignReq)
  return target;
}

size_t EthMessageSignReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ethapi.EthMessageSignReq)
  size_t total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional string sender = 3;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EthMessageSignReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ethapi.EthMessageSignReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EthMessageSignReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EthMessageSignReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ethapi.EthMessageSignReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ethapi.EthMessageSignReq)
    UnsafeMergeFrom(*source);
  }
}

void EthMessageSignReq::MergeFrom(const EthMessageSignReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ethapi.EthMessageSignReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EthMessageSignReq::UnsafeMergeFrom(const EthMessageSignReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
}

void EthMessageSignReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ethapi.EthMessageSignReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EthMessageSignReq::CopyFrom(const EthMessageSignReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ethapi.EthMessageSignReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EthMessageSignReq::IsInitialized() const {

  return true;
}

void EthMessageSignReq::Swap(EthMessageSignReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EthMessageSignReq::InternalSwap(EthMessageSignReq* other) {
  path_.Swap(&other->path_);
  message_.Swap(&other->message_);
  sender_.Swap(&other->sender_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EthMessageSignReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EthMessageSignReq_descriptor_;
  metadata.reflection = EthMessageSignReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EthMessageSignReq

// optional string path = 1;
void EthMessageSignReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthMessageSignReq::path() const {
  // @@protoc_insertion_point(field_get:ethapi.EthMessageSignReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthMessageSignReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthMessageSignReq.path)
}
void EthMessageSignReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthMessageSignReq.path)
}
void EthMessageSignReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthMessageSignReq.path)
}
::std::string* EthMessageSignReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthMessageSignReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthMessageSignReq::release_path() {
  // @@protoc_insertion_point(field_release:ethapi.EthMessageSignReq.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthMessageSignReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthMessageSignReq.path)
}

// optional string message = 2;
void EthMessageSignReq::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthMessageSignReq::message() const {
  // @@protoc_insertion_point(field_get:ethapi.EthMessageSignReq.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthMessageSignReq::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthMessageSignReq.message)
}
void EthMessageSignReq::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthMessageSignReq.message)
}
void EthMessageSignReq::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthMessageSignReq.message)
}
::std::string* EthMessageSignReq::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthMessageSignReq.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthMessageSignReq::release_message() {
  // @@protoc_insertion_point(field_release:ethapi.EthMessageSignReq.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthMessageSignReq::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthMessageSignReq.message)
}

// optional string sender = 3;
void EthMessageSignReq::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthMessageSignReq::sender() const {
  // @@protoc_insertion_point(field_get:ethapi.EthMessageSignReq.sender)
  return sender_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthMessageSignReq::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthMessageSignReq.sender)
}
void EthMessageSignReq::set_sender(const char* value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthMessageSignReq.sender)
}
void EthMessageSignReq::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthMessageSignReq.sender)
}
::std::string* EthMessageSignReq::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthMessageSignReq.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthMessageSignReq::release_sender() {
  // @@protoc_insertion_point(field_release:ethapi.EthMessageSignReq.sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthMessageSignReq::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthMessageSignReq.sender)
}

inline const EthMessageSignReq* EthMessageSignReq::internal_default_instance() {
  return &EthMessageSignReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EthMessageSignRes::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EthMessageSignRes::EthMessageSignRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_eth_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ethapi.EthMessageSignRes)
}

void EthMessageSignRes::InitAsDefaultInstance() {
}

EthMessageSignRes::EthMessageSignRes(const EthMessageSignRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ethapi.EthMessageSignRes)
}

void EthMessageSignRes::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EthMessageSignRes::~EthMessageSignRes() {
  // @@protoc_insertion_point(destructor:ethapi.EthMessageSignRes)
  SharedDtor();
}

void EthMessageSignRes::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EthMessageSignRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EthMessageSignRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EthMessageSignRes_descriptor_;
}

const EthMessageSignRes& EthMessageSignRes::default_instance() {
  protobuf_InitDefaults_eth_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EthMessageSignRes> EthMessageSignRes_default_instance_;

EthMessageSignRes* EthMessageSignRes::New(::google::protobuf::Arena* arena) const {
  EthMessageSignRes* n = new EthMessageSignRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EthMessageSignRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ethapi.EthMessageSignRes)
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EthMessageSignRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ethapi.EthMessageSignRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string signature = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ethapi.EthMessageSignRes.signature"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ethapi.EthMessageSignRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ethapi.EthMessageSignRes)
  return false;
#undef DO_
}

void EthMessageSignRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ethapi.EthMessageSignRes)
  // optional string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthMessageSignRes.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  // @@protoc_insertion_point(serialize_end:ethapi.EthMessageSignRes)
}

::google::protobuf::uint8* EthMessageSignRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ethapi.EthMessageSignRes)
  // optional string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ethapi.EthMessageSignRes.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ethapi.EthMessageSignRes)
  return target;
}

size_t EthMessageSignRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ethapi.EthMessageSignRes)
  size_t total_size = 0;

  // optional string signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EthMessageSignRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ethapi.EthMessageSignRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EthMessageSignRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EthMessageSignRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ethapi.EthMessageSignRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ethapi.EthMessageSignRes)
    UnsafeMergeFrom(*source);
  }
}

void EthMessageSignRes::MergeFrom(const EthMessageSignRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ethapi.EthMessageSignRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EthMessageSignRes::UnsafeMergeFrom(const EthMessageSignRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void EthMessageSignRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ethapi.EthMessageSignRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EthMessageSignRes::CopyFrom(const EthMessageSignRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ethapi.EthMessageSignRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EthMessageSignRes::IsInitialized() const {

  return true;
}

void EthMessageSignRes::Swap(EthMessageSignRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EthMessageSignRes::InternalSwap(EthMessageSignRes* other) {
  signature_.Swap(&other->signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EthMessageSignRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EthMessageSignRes_descriptor_;
  metadata.reflection = EthMessageSignRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EthMessageSignRes

// optional string signature = 1;
void EthMessageSignRes::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EthMessageSignRes::signature() const {
  // @@protoc_insertion_point(field_get:ethapi.EthMessageSignRes.signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthMessageSignRes::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ethapi.EthMessageSignRes.signature)
}
void EthMessageSignRes::set_signature(const char* value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ethapi.EthMessageSignRes.signature)
}
void EthMessageSignRes::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ethapi.EthMessageSignRes.signature)
}
::std::string* EthMessageSignRes::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:ethapi.EthMessageSignRes.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EthMessageSignRes::release_signature() {
  // @@protoc_insertion_point(field_release:ethapi.EthMessageSignRes.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EthMessageSignRes::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:ethapi.EthMessageSignRes.signature)
}

inline const EthMessageSignRes* EthMessageSignRes::internal_default_instance() {
  return &EthMessageSignRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ethapi

// @@protoc_insertion_point(global_scope)
