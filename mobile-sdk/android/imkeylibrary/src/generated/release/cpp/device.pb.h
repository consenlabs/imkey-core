// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: device.proto

#ifndef PROTOBUF_device_2eproto__INCLUDED
#define PROTOBUF_device_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace deviceapi {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_device_2eproto();
void protobuf_InitDefaults_device_2eproto();
void protobuf_AssignDesc_device_2eproto();
void protobuf_ShutdownFile_device_2eproto();

class AppDeleteReq;
class AppDownloadReq;
class AppUpdateReq;
class AvailableAppBean;
class BindAcquireReq;
class BindAcquireRes;
class BindCheckReq;
class BindCheckRes;
class CheckUpdateRes;
class EmptyResponse;
class GetBatteryPowerRes;
class GetBleNameRes;
class GetBleVersionRes;
class GetFirmwareVersionRes;
class GetLifeTimeRes;
class GetRamSizeRes;
class GetSdkInfoRes;
class GetSeidRes;
class GetSnRes;
class SetBleNameReq;

// ===================================================================

class EmptyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.EmptyResponse) */ {
 public:
  EmptyResponse();
  virtual ~EmptyResponse();

  EmptyResponse(const EmptyResponse& from);

  inline EmptyResponse& operator=(const EmptyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmptyResponse& default_instance();

  static const EmptyResponse* internal_default_instance();

  void Swap(EmptyResponse* other);

  // implements Message ----------------------------------------------

  inline EmptyResponse* New() const { return New(NULL); }

  EmptyResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmptyResponse& from);
  void MergeFrom(const EmptyResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EmptyResponse* other);
  void UnsafeMergeFrom(const EmptyResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:deviceapi.EmptyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EmptyResponse> EmptyResponse_default_instance_;

// -------------------------------------------------------------------

class AppDownloadReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.AppDownloadReq) */ {
 public:
  AppDownloadReq();
  virtual ~AppDownloadReq();

  AppDownloadReq(const AppDownloadReq& from);

  inline AppDownloadReq& operator=(const AppDownloadReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppDownloadReq& default_instance();

  static const AppDownloadReq* internal_default_instance();

  void Swap(AppDownloadReq* other);

  // implements Message ----------------------------------------------

  inline AppDownloadReq* New() const { return New(NULL); }

  AppDownloadReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppDownloadReq& from);
  void MergeFrom(const AppDownloadReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppDownloadReq* other);
  void UnsafeMergeFrom(const AppDownloadReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string app_name = 1;
  void clear_app_name();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // @@protoc_insertion_point(class_scope:deviceapi.AppDownloadReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AppDownloadReq> AppDownloadReq_default_instance_;

// -------------------------------------------------------------------

class AppUpdateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.AppUpdateReq) */ {
 public:
  AppUpdateReq();
  virtual ~AppUpdateReq();

  AppUpdateReq(const AppUpdateReq& from);

  inline AppUpdateReq& operator=(const AppUpdateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppUpdateReq& default_instance();

  static const AppUpdateReq* internal_default_instance();

  void Swap(AppUpdateReq* other);

  // implements Message ----------------------------------------------

  inline AppUpdateReq* New() const { return New(NULL); }

  AppUpdateReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppUpdateReq& from);
  void MergeFrom(const AppUpdateReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppUpdateReq* other);
  void UnsafeMergeFrom(const AppUpdateReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string app_name = 1;
  void clear_app_name();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // @@protoc_insertion_point(class_scope:deviceapi.AppUpdateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AppUpdateReq> AppUpdateReq_default_instance_;

// -------------------------------------------------------------------

class AppDeleteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.AppDeleteReq) */ {
 public:
  AppDeleteReq();
  virtual ~AppDeleteReq();

  AppDeleteReq(const AppDeleteReq& from);

  inline AppDeleteReq& operator=(const AppDeleteReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppDeleteReq& default_instance();

  static const AppDeleteReq* internal_default_instance();

  void Swap(AppDeleteReq* other);

  // implements Message ----------------------------------------------

  inline AppDeleteReq* New() const { return New(NULL); }

  AppDeleteReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppDeleteReq& from);
  void MergeFrom(const AppDeleteReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppDeleteReq* other);
  void UnsafeMergeFrom(const AppDeleteReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string app_name = 1;
  void clear_app_name();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // @@protoc_insertion_point(class_scope:deviceapi.AppDeleteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AppDeleteReq> AppDeleteReq_default_instance_;

// -------------------------------------------------------------------

class CheckUpdateRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.CheckUpdateRes) */ {
 public:
  CheckUpdateRes();
  virtual ~CheckUpdateRes();

  CheckUpdateRes(const CheckUpdateRes& from);

  inline CheckUpdateRes& operator=(const CheckUpdateRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckUpdateRes& default_instance();

  static const CheckUpdateRes* internal_default_instance();

  void Swap(CheckUpdateRes* other);

  // implements Message ----------------------------------------------

  inline CheckUpdateRes* New() const { return New(NULL); }

  CheckUpdateRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckUpdateRes& from);
  void MergeFrom(const CheckUpdateRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CheckUpdateRes* other);
  void UnsafeMergeFrom(const CheckUpdateRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string se_id = 1;
  void clear_se_id();
  static const int kSeIdFieldNumber = 1;
  const ::std::string& se_id() const;
  void set_se_id(const ::std::string& value);
  void set_se_id(const char* value);
  void set_se_id(const char* value, size_t size);
  ::std::string* mutable_se_id();
  ::std::string* release_se_id();
  void set_allocated_se_id(::std::string* se_id);

  // optional string sn = 2;
  void clear_sn();
  static const int kSnFieldNumber = 2;
  const ::std::string& sn() const;
  void set_sn(const ::std::string& value);
  void set_sn(const char* value);
  void set_sn(const char* value, size_t size);
  ::std::string* mutable_sn();
  ::std::string* release_sn();
  void set_allocated_sn(::std::string* sn);

  // optional string status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // optional string sdk_mode = 4;
  void clear_sdk_mode();
  static const int kSdkModeFieldNumber = 4;
  const ::std::string& sdk_mode() const;
  void set_sdk_mode(const ::std::string& value);
  void set_sdk_mode(const char* value);
  void set_sdk_mode(const char* value, size_t size);
  ::std::string* mutable_sdk_mode();
  ::std::string* release_sdk_mode();
  void set_allocated_sdk_mode(::std::string* sdk_mode);

  // repeated .deviceapi.AvailableAppBean available_app_list = 5;
  int available_app_list_size() const;
  void clear_available_app_list();
  static const int kAvailableAppListFieldNumber = 5;
  const ::deviceapi::AvailableAppBean& available_app_list(int index) const;
  ::deviceapi::AvailableAppBean* mutable_available_app_list(int index);
  ::deviceapi::AvailableAppBean* add_available_app_list();
  ::google::protobuf::RepeatedPtrField< ::deviceapi::AvailableAppBean >*
      mutable_available_app_list();
  const ::google::protobuf::RepeatedPtrField< ::deviceapi::AvailableAppBean >&
      available_app_list() const;

  // @@protoc_insertion_point(class_scope:deviceapi.CheckUpdateRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::deviceapi::AvailableAppBean > available_app_list_;
  ::google::protobuf::internal::ArenaStringPtr se_id_;
  ::google::protobuf::internal::ArenaStringPtr sn_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::internal::ArenaStringPtr sdk_mode_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CheckUpdateRes> CheckUpdateRes_default_instance_;

// -------------------------------------------------------------------

class AvailableAppBean : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.AvailableAppBean) */ {
 public:
  AvailableAppBean();
  virtual ~AvailableAppBean();

  AvailableAppBean(const AvailableAppBean& from);

  inline AvailableAppBean& operator=(const AvailableAppBean& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AvailableAppBean& default_instance();

  static const AvailableAppBean* internal_default_instance();

  void Swap(AvailableAppBean* other);

  // implements Message ----------------------------------------------

  inline AvailableAppBean* New() const { return New(NULL); }

  AvailableAppBean* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AvailableAppBean& from);
  void MergeFrom(const AvailableAppBean& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AvailableAppBean* other);
  void UnsafeMergeFrom(const AvailableAppBean& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string app_name = 1;
  void clear_app_name();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // optional string app_logo = 2;
  void clear_app_logo();
  static const int kAppLogoFieldNumber = 2;
  const ::std::string& app_logo() const;
  void set_app_logo(const ::std::string& value);
  void set_app_logo(const char* value);
  void set_app_logo(const char* value, size_t size);
  ::std::string* mutable_app_logo();
  ::std::string* release_app_logo();
  void set_allocated_app_logo(::std::string* app_logo);

  // optional string installed_version = 3;
  void clear_installed_version();
  static const int kInstalledVersionFieldNumber = 3;
  const ::std::string& installed_version() const;
  void set_installed_version(const ::std::string& value);
  void set_installed_version(const char* value);
  void set_installed_version(const char* value, size_t size);
  ::std::string* mutable_installed_version();
  ::std::string* release_installed_version();
  void set_allocated_installed_version(::std::string* installed_version);

  // optional string last_updated = 4;
  void clear_last_updated();
  static const int kLastUpdatedFieldNumber = 4;
  const ::std::string& last_updated() const;
  void set_last_updated(const ::std::string& value);
  void set_last_updated(const char* value);
  void set_last_updated(const char* value, size_t size);
  ::std::string* mutable_last_updated();
  ::std::string* release_last_updated();
  void set_allocated_last_updated(::std::string* last_updated);

  // optional string latest_version = 5;
  void clear_latest_version();
  static const int kLatestVersionFieldNumber = 5;
  const ::std::string& latest_version() const;
  void set_latest_version(const ::std::string& value);
  void set_latest_version(const char* value);
  void set_latest_version(const char* value, size_t size);
  ::std::string* mutable_latest_version();
  ::std::string* release_latest_version();
  void set_allocated_latest_version(::std::string* latest_version);

  // optional string install_mode = 6;
  void clear_install_mode();
  static const int kInstallModeFieldNumber = 6;
  const ::std::string& install_mode() const;
  void set_install_mode(const ::std::string& value);
  void set_install_mode(const char* value);
  void set_install_mode(const char* value, size_t size);
  ::std::string* mutable_install_mode();
  ::std::string* release_install_mode();
  void set_allocated_install_mode(::std::string* install_mode);

  // @@protoc_insertion_point(class_scope:deviceapi.AvailableAppBean)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr app_logo_;
  ::google::protobuf::internal::ArenaStringPtr installed_version_;
  ::google::protobuf::internal::ArenaStringPtr last_updated_;
  ::google::protobuf::internal::ArenaStringPtr latest_version_;
  ::google::protobuf::internal::ArenaStringPtr install_mode_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AvailableAppBean> AvailableAppBean_default_instance_;

// -------------------------------------------------------------------

class BindCheckReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.BindCheckReq) */ {
 public:
  BindCheckReq();
  virtual ~BindCheckReq();

  BindCheckReq(const BindCheckReq& from);

  inline BindCheckReq& operator=(const BindCheckReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BindCheckReq& default_instance();

  static const BindCheckReq* internal_default_instance();

  void Swap(BindCheckReq* other);

  // implements Message ----------------------------------------------

  inline BindCheckReq* New() const { return New(NULL); }

  BindCheckReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BindCheckReq& from);
  void MergeFrom(const BindCheckReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BindCheckReq* other);
  void UnsafeMergeFrom(const BindCheckReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string file_path = 1;
  void clear_file_path();
  static const int kFilePathFieldNumber = 1;
  const ::std::string& file_path() const;
  void set_file_path(const ::std::string& value);
  void set_file_path(const char* value);
  void set_file_path(const char* value, size_t size);
  ::std::string* mutable_file_path();
  ::std::string* release_file_path();
  void set_allocated_file_path(::std::string* file_path);

  // @@protoc_insertion_point(class_scope:deviceapi.BindCheckReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_path_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BindCheckReq> BindCheckReq_default_instance_;

// -------------------------------------------------------------------

class BindCheckRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.BindCheckRes) */ {
 public:
  BindCheckRes();
  virtual ~BindCheckRes();

  BindCheckRes(const BindCheckRes& from);

  inline BindCheckRes& operator=(const BindCheckRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BindCheckRes& default_instance();

  static const BindCheckRes* internal_default_instance();

  void Swap(BindCheckRes* other);

  // implements Message ----------------------------------------------

  inline BindCheckRes* New() const { return New(NULL); }

  BindCheckRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BindCheckRes& from);
  void MergeFrom(const BindCheckRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BindCheckRes* other);
  void UnsafeMergeFrom(const BindCheckRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string bind_status = 1;
  void clear_bind_status();
  static const int kBindStatusFieldNumber = 1;
  const ::std::string& bind_status() const;
  void set_bind_status(const ::std::string& value);
  void set_bind_status(const char* value);
  void set_bind_status(const char* value, size_t size);
  ::std::string* mutable_bind_status();
  ::std::string* release_bind_status();
  void set_allocated_bind_status(::std::string* bind_status);

  // @@protoc_insertion_point(class_scope:deviceapi.BindCheckRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bind_status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BindCheckRes> BindCheckRes_default_instance_;

// -------------------------------------------------------------------

class BindAcquireReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.BindAcquireReq) */ {
 public:
  BindAcquireReq();
  virtual ~BindAcquireReq();

  BindAcquireReq(const BindAcquireReq& from);

  inline BindAcquireReq& operator=(const BindAcquireReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BindAcquireReq& default_instance();

  static const BindAcquireReq* internal_default_instance();

  void Swap(BindAcquireReq* other);

  // implements Message ----------------------------------------------

  inline BindAcquireReq* New() const { return New(NULL); }

  BindAcquireReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BindAcquireReq& from);
  void MergeFrom(const BindAcquireReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BindAcquireReq* other);
  void UnsafeMergeFrom(const BindAcquireReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string bind_code = 1;
  void clear_bind_code();
  static const int kBindCodeFieldNumber = 1;
  const ::std::string& bind_code() const;
  void set_bind_code(const ::std::string& value);
  void set_bind_code(const char* value);
  void set_bind_code(const char* value, size_t size);
  ::std::string* mutable_bind_code();
  ::std::string* release_bind_code();
  void set_allocated_bind_code(::std::string* bind_code);

  // @@protoc_insertion_point(class_scope:deviceapi.BindAcquireReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bind_code_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BindAcquireReq> BindAcquireReq_default_instance_;

// -------------------------------------------------------------------

class BindAcquireRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.BindAcquireRes) */ {
 public:
  BindAcquireRes();
  virtual ~BindAcquireRes();

  BindAcquireRes(const BindAcquireRes& from);

  inline BindAcquireRes& operator=(const BindAcquireRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BindAcquireRes& default_instance();

  static const BindAcquireRes* internal_default_instance();

  void Swap(BindAcquireRes* other);

  // implements Message ----------------------------------------------

  inline BindAcquireRes* New() const { return New(NULL); }

  BindAcquireRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BindAcquireRes& from);
  void MergeFrom(const BindAcquireRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BindAcquireRes* other);
  void UnsafeMergeFrom(const BindAcquireRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string bind_result = 1;
  void clear_bind_result();
  static const int kBindResultFieldNumber = 1;
  const ::std::string& bind_result() const;
  void set_bind_result(const ::std::string& value);
  void set_bind_result(const char* value);
  void set_bind_result(const char* value, size_t size);
  ::std::string* mutable_bind_result();
  ::std::string* release_bind_result();
  void set_allocated_bind_result(::std::string* bind_result);

  // @@protoc_insertion_point(class_scope:deviceapi.BindAcquireRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bind_result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BindAcquireRes> BindAcquireRes_default_instance_;

// -------------------------------------------------------------------

class GetSeidRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.GetSeidRes) */ {
 public:
  GetSeidRes();
  virtual ~GetSeidRes();

  GetSeidRes(const GetSeidRes& from);

  inline GetSeidRes& operator=(const GetSeidRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSeidRes& default_instance();

  static const GetSeidRes* internal_default_instance();

  void Swap(GetSeidRes* other);

  // implements Message ----------------------------------------------

  inline GetSeidRes* New() const { return New(NULL); }

  GetSeidRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSeidRes& from);
  void MergeFrom(const GetSeidRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetSeidRes* other);
  void UnsafeMergeFrom(const GetSeidRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string seid = 1;
  void clear_seid();
  static const int kSeidFieldNumber = 1;
  const ::std::string& seid() const;
  void set_seid(const ::std::string& value);
  void set_seid(const char* value);
  void set_seid(const char* value, size_t size);
  ::std::string* mutable_seid();
  ::std::string* release_seid();
  void set_allocated_seid(::std::string* seid);

  // @@protoc_insertion_point(class_scope:deviceapi.GetSeidRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr seid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetSeidRes> GetSeidRes_default_instance_;

// -------------------------------------------------------------------

class GetSnRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.GetSnRes) */ {
 public:
  GetSnRes();
  virtual ~GetSnRes();

  GetSnRes(const GetSnRes& from);

  inline GetSnRes& operator=(const GetSnRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSnRes& default_instance();

  static const GetSnRes* internal_default_instance();

  void Swap(GetSnRes* other);

  // implements Message ----------------------------------------------

  inline GetSnRes* New() const { return New(NULL); }

  GetSnRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSnRes& from);
  void MergeFrom(const GetSnRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetSnRes* other);
  void UnsafeMergeFrom(const GetSnRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string sn = 1;
  void clear_sn();
  static const int kSnFieldNumber = 1;
  const ::std::string& sn() const;
  void set_sn(const ::std::string& value);
  void set_sn(const char* value);
  void set_sn(const char* value, size_t size);
  ::std::string* mutable_sn();
  ::std::string* release_sn();
  void set_allocated_sn(::std::string* sn);

  // @@protoc_insertion_point(class_scope:deviceapi.GetSnRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sn_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetSnRes> GetSnRes_default_instance_;

// -------------------------------------------------------------------

class GetRamSizeRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.GetRamSizeRes) */ {
 public:
  GetRamSizeRes();
  virtual ~GetRamSizeRes();

  GetRamSizeRes(const GetRamSizeRes& from);

  inline GetRamSizeRes& operator=(const GetRamSizeRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRamSizeRes& default_instance();

  static const GetRamSizeRes* internal_default_instance();

  void Swap(GetRamSizeRes* other);

  // implements Message ----------------------------------------------

  inline GetRamSizeRes* New() const { return New(NULL); }

  GetRamSizeRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRamSizeRes& from);
  void MergeFrom(const GetRamSizeRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRamSizeRes* other);
  void UnsafeMergeFrom(const GetRamSizeRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ram_size = 1;
  void clear_ram_size();
  static const int kRamSizeFieldNumber = 1;
  const ::std::string& ram_size() const;
  void set_ram_size(const ::std::string& value);
  void set_ram_size(const char* value);
  void set_ram_size(const char* value, size_t size);
  ::std::string* mutable_ram_size();
  ::std::string* release_ram_size();
  void set_allocated_ram_size(::std::string* ram_size);

  // @@protoc_insertion_point(class_scope:deviceapi.GetRamSizeRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ram_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetRamSizeRes> GetRamSizeRes_default_instance_;

// -------------------------------------------------------------------

class GetFirmwareVersionRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.GetFirmwareVersionRes) */ {
 public:
  GetFirmwareVersionRes();
  virtual ~GetFirmwareVersionRes();

  GetFirmwareVersionRes(const GetFirmwareVersionRes& from);

  inline GetFirmwareVersionRes& operator=(const GetFirmwareVersionRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFirmwareVersionRes& default_instance();

  static const GetFirmwareVersionRes* internal_default_instance();

  void Swap(GetFirmwareVersionRes* other);

  // implements Message ----------------------------------------------

  inline GetFirmwareVersionRes* New() const { return New(NULL); }

  GetFirmwareVersionRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFirmwareVersionRes& from);
  void MergeFrom(const GetFirmwareVersionRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetFirmwareVersionRes* other);
  void UnsafeMergeFrom(const GetFirmwareVersionRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string firmware_version = 1;
  void clear_firmware_version();
  static const int kFirmwareVersionFieldNumber = 1;
  const ::std::string& firmware_version() const;
  void set_firmware_version(const ::std::string& value);
  void set_firmware_version(const char* value);
  void set_firmware_version(const char* value, size_t size);
  ::std::string* mutable_firmware_version();
  ::std::string* release_firmware_version();
  void set_allocated_firmware_version(::std::string* firmware_version);

  // @@protoc_insertion_point(class_scope:deviceapi.GetFirmwareVersionRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr firmware_version_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetFirmwareVersionRes> GetFirmwareVersionRes_default_instance_;

// -------------------------------------------------------------------

class GetBatteryPowerRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.GetBatteryPowerRes) */ {
 public:
  GetBatteryPowerRes();
  virtual ~GetBatteryPowerRes();

  GetBatteryPowerRes(const GetBatteryPowerRes& from);

  inline GetBatteryPowerRes& operator=(const GetBatteryPowerRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBatteryPowerRes& default_instance();

  static const GetBatteryPowerRes* internal_default_instance();

  void Swap(GetBatteryPowerRes* other);

  // implements Message ----------------------------------------------

  inline GetBatteryPowerRes* New() const { return New(NULL); }

  GetBatteryPowerRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBatteryPowerRes& from);
  void MergeFrom(const GetBatteryPowerRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetBatteryPowerRes* other);
  void UnsafeMergeFrom(const GetBatteryPowerRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string battery_power = 1;
  void clear_battery_power();
  static const int kBatteryPowerFieldNumber = 1;
  const ::std::string& battery_power() const;
  void set_battery_power(const ::std::string& value);
  void set_battery_power(const char* value);
  void set_battery_power(const char* value, size_t size);
  ::std::string* mutable_battery_power();
  ::std::string* release_battery_power();
  void set_allocated_battery_power(::std::string* battery_power);

  // @@protoc_insertion_point(class_scope:deviceapi.GetBatteryPowerRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr battery_power_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetBatteryPowerRes> GetBatteryPowerRes_default_instance_;

// -------------------------------------------------------------------

class GetLifeTimeRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.GetLifeTimeRes) */ {
 public:
  GetLifeTimeRes();
  virtual ~GetLifeTimeRes();

  GetLifeTimeRes(const GetLifeTimeRes& from);

  inline GetLifeTimeRes& operator=(const GetLifeTimeRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLifeTimeRes& default_instance();

  static const GetLifeTimeRes* internal_default_instance();

  void Swap(GetLifeTimeRes* other);

  // implements Message ----------------------------------------------

  inline GetLifeTimeRes* New() const { return New(NULL); }

  GetLifeTimeRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLifeTimeRes& from);
  void MergeFrom(const GetLifeTimeRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetLifeTimeRes* other);
  void UnsafeMergeFrom(const GetLifeTimeRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string life_time = 1;
  void clear_life_time();
  static const int kLifeTimeFieldNumber = 1;
  const ::std::string& life_time() const;
  void set_life_time(const ::std::string& value);
  void set_life_time(const char* value);
  void set_life_time(const char* value, size_t size);
  ::std::string* mutable_life_time();
  ::std::string* release_life_time();
  void set_allocated_life_time(::std::string* life_time);

  // @@protoc_insertion_point(class_scope:deviceapi.GetLifeTimeRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr life_time_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetLifeTimeRes> GetLifeTimeRes_default_instance_;

// -------------------------------------------------------------------

class GetBleNameRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.GetBleNameRes) */ {
 public:
  GetBleNameRes();
  virtual ~GetBleNameRes();

  GetBleNameRes(const GetBleNameRes& from);

  inline GetBleNameRes& operator=(const GetBleNameRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBleNameRes& default_instance();

  static const GetBleNameRes* internal_default_instance();

  void Swap(GetBleNameRes* other);

  // implements Message ----------------------------------------------

  inline GetBleNameRes* New() const { return New(NULL); }

  GetBleNameRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBleNameRes& from);
  void MergeFrom(const GetBleNameRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetBleNameRes* other);
  void UnsafeMergeFrom(const GetBleNameRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ble_name = 1;
  void clear_ble_name();
  static const int kBleNameFieldNumber = 1;
  const ::std::string& ble_name() const;
  void set_ble_name(const ::std::string& value);
  void set_ble_name(const char* value);
  void set_ble_name(const char* value, size_t size);
  ::std::string* mutable_ble_name();
  ::std::string* release_ble_name();
  void set_allocated_ble_name(::std::string* ble_name);

  // @@protoc_insertion_point(class_scope:deviceapi.GetBleNameRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ble_name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetBleNameRes> GetBleNameRes_default_instance_;

// -------------------------------------------------------------------

class SetBleNameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.SetBleNameReq) */ {
 public:
  SetBleNameReq();
  virtual ~SetBleNameReq();

  SetBleNameReq(const SetBleNameReq& from);

  inline SetBleNameReq& operator=(const SetBleNameReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetBleNameReq& default_instance();

  static const SetBleNameReq* internal_default_instance();

  void Swap(SetBleNameReq* other);

  // implements Message ----------------------------------------------

  inline SetBleNameReq* New() const { return New(NULL); }

  SetBleNameReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetBleNameReq& from);
  void MergeFrom(const SetBleNameReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetBleNameReq* other);
  void UnsafeMergeFrom(const SetBleNameReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ble_name = 1;
  void clear_ble_name();
  static const int kBleNameFieldNumber = 1;
  const ::std::string& ble_name() const;
  void set_ble_name(const ::std::string& value);
  void set_ble_name(const char* value);
  void set_ble_name(const char* value, size_t size);
  ::std::string* mutable_ble_name();
  ::std::string* release_ble_name();
  void set_allocated_ble_name(::std::string* ble_name);

  // @@protoc_insertion_point(class_scope:deviceapi.SetBleNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ble_name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SetBleNameReq> SetBleNameReq_default_instance_;

// -------------------------------------------------------------------

class GetBleVersionRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.GetBleVersionRes) */ {
 public:
  GetBleVersionRes();
  virtual ~GetBleVersionRes();

  GetBleVersionRes(const GetBleVersionRes& from);

  inline GetBleVersionRes& operator=(const GetBleVersionRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBleVersionRes& default_instance();

  static const GetBleVersionRes* internal_default_instance();

  void Swap(GetBleVersionRes* other);

  // implements Message ----------------------------------------------

  inline GetBleVersionRes* New() const { return New(NULL); }

  GetBleVersionRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBleVersionRes& from);
  void MergeFrom(const GetBleVersionRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetBleVersionRes* other);
  void UnsafeMergeFrom(const GetBleVersionRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ble_version = 1;
  void clear_ble_version();
  static const int kBleVersionFieldNumber = 1;
  const ::std::string& ble_version() const;
  void set_ble_version(const ::std::string& value);
  void set_ble_version(const char* value);
  void set_ble_version(const char* value, size_t size);
  ::std::string* mutable_ble_version();
  ::std::string* release_ble_version();
  void set_allocated_ble_version(::std::string* ble_version);

  // @@protoc_insertion_point(class_scope:deviceapi.GetBleVersionRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ble_version_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetBleVersionRes> GetBleVersionRes_default_instance_;

// -------------------------------------------------------------------

class GetSdkInfoRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceapi.GetSdkInfoRes) */ {
 public:
  GetSdkInfoRes();
  virtual ~GetSdkInfoRes();

  GetSdkInfoRes(const GetSdkInfoRes& from);

  inline GetSdkInfoRes& operator=(const GetSdkInfoRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSdkInfoRes& default_instance();

  static const GetSdkInfoRes* internal_default_instance();

  void Swap(GetSdkInfoRes* other);

  // implements Message ----------------------------------------------

  inline GetSdkInfoRes* New() const { return New(NULL); }

  GetSdkInfoRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSdkInfoRes& from);
  void MergeFrom(const GetSdkInfoRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetSdkInfoRes* other);
  void UnsafeMergeFrom(const GetSdkInfoRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string sdk_version = 1;
  void clear_sdk_version();
  static const int kSdkVersionFieldNumber = 1;
  const ::std::string& sdk_version() const;
  void set_sdk_version(const ::std::string& value);
  void set_sdk_version(const char* value);
  void set_sdk_version(const char* value, size_t size);
  ::std::string* mutable_sdk_version();
  ::std::string* release_sdk_version();
  void set_allocated_sdk_version(::std::string* sdk_version);

  // @@protoc_insertion_point(class_scope:deviceapi.GetSdkInfoRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sdk_version_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_device_2eproto_impl();
  friend void  protobuf_AddDesc_device_2eproto_impl();
  friend void protobuf_AssignDesc_device_2eproto();
  friend void protobuf_ShutdownFile_device_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetSdkInfoRes> GetSdkInfoRes_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EmptyResponse

inline const EmptyResponse* EmptyResponse::internal_default_instance() {
  return &EmptyResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// AppDownloadReq

// optional string app_name = 1;
inline void AppDownloadReq::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppDownloadReq::app_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.AppDownloadReq.app_name)
  return app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppDownloadReq::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AppDownloadReq.app_name)
}
inline void AppDownloadReq::set_app_name(const char* value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AppDownloadReq.app_name)
}
inline void AppDownloadReq::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AppDownloadReq.app_name)
}
inline ::std::string* AppDownloadReq::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AppDownloadReq.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppDownloadReq::release_app_name() {
  // @@protoc_insertion_point(field_release:deviceapi.AppDownloadReq.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppDownloadReq::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AppDownloadReq.app_name)
}

inline const AppDownloadReq* AppDownloadReq::internal_default_instance() {
  return &AppDownloadReq_default_instance_.get();
}
// -------------------------------------------------------------------

// AppUpdateReq

// optional string app_name = 1;
inline void AppUpdateReq::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppUpdateReq::app_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.AppUpdateReq.app_name)
  return app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppUpdateReq::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AppUpdateReq.app_name)
}
inline void AppUpdateReq::set_app_name(const char* value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AppUpdateReq.app_name)
}
inline void AppUpdateReq::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AppUpdateReq.app_name)
}
inline ::std::string* AppUpdateReq::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AppUpdateReq.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppUpdateReq::release_app_name() {
  // @@protoc_insertion_point(field_release:deviceapi.AppUpdateReq.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppUpdateReq::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AppUpdateReq.app_name)
}

inline const AppUpdateReq* AppUpdateReq::internal_default_instance() {
  return &AppUpdateReq_default_instance_.get();
}
// -------------------------------------------------------------------

// AppDeleteReq

// optional string app_name = 1;
inline void AppDeleteReq::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppDeleteReq::app_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.AppDeleteReq.app_name)
  return app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppDeleteReq::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AppDeleteReq.app_name)
}
inline void AppDeleteReq::set_app_name(const char* value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AppDeleteReq.app_name)
}
inline void AppDeleteReq::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AppDeleteReq.app_name)
}
inline ::std::string* AppDeleteReq::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AppDeleteReq.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppDeleteReq::release_app_name() {
  // @@protoc_insertion_point(field_release:deviceapi.AppDeleteReq.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppDeleteReq::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AppDeleteReq.app_name)
}

inline const AppDeleteReq* AppDeleteReq::internal_default_instance() {
  return &AppDeleteReq_default_instance_.get();
}
// -------------------------------------------------------------------

// CheckUpdateRes

// optional string se_id = 1;
inline void CheckUpdateRes::clear_se_id() {
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckUpdateRes::se_id() const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateRes.se_id)
  return se_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckUpdateRes::set_se_id(const ::std::string& value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.CheckUpdateRes.se_id)
}
inline void CheckUpdateRes::set_se_id(const char* value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.CheckUpdateRes.se_id)
}
inline void CheckUpdateRes::set_se_id(const char* value, size_t size) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.CheckUpdateRes.se_id)
}
inline ::std::string* CheckUpdateRes::mutable_se_id() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateRes.se_id)
  return se_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckUpdateRes::release_se_id() {
  // @@protoc_insertion_point(field_release:deviceapi.CheckUpdateRes.se_id)
  
  return se_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckUpdateRes::set_allocated_se_id(::std::string* se_id) {
  if (se_id != NULL) {
    
  } else {
    
  }
  se_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_id);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.CheckUpdateRes.se_id)
}

// optional string sn = 2;
inline void CheckUpdateRes::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckUpdateRes::sn() const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateRes.sn)
  return sn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckUpdateRes::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.CheckUpdateRes.sn)
}
inline void CheckUpdateRes::set_sn(const char* value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.CheckUpdateRes.sn)
}
inline void CheckUpdateRes::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.CheckUpdateRes.sn)
}
inline ::std::string* CheckUpdateRes::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateRes.sn)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckUpdateRes::release_sn() {
  // @@protoc_insertion_point(field_release:deviceapi.CheckUpdateRes.sn)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckUpdateRes::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.CheckUpdateRes.sn)
}

// optional string status = 3;
inline void CheckUpdateRes::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckUpdateRes::status() const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateRes.status)
  return status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckUpdateRes::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.CheckUpdateRes.status)
}
inline void CheckUpdateRes::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.CheckUpdateRes.status)
}
inline void CheckUpdateRes::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.CheckUpdateRes.status)
}
inline ::std::string* CheckUpdateRes::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateRes.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckUpdateRes::release_status() {
  // @@protoc_insertion_point(field_release:deviceapi.CheckUpdateRes.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckUpdateRes::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.CheckUpdateRes.status)
}

// optional string sdk_mode = 4;
inline void CheckUpdateRes::clear_sdk_mode() {
  sdk_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckUpdateRes::sdk_mode() const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateRes.sdk_mode)
  return sdk_mode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckUpdateRes::set_sdk_mode(const ::std::string& value) {
  
  sdk_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.CheckUpdateRes.sdk_mode)
}
inline void CheckUpdateRes::set_sdk_mode(const char* value) {
  
  sdk_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.CheckUpdateRes.sdk_mode)
}
inline void CheckUpdateRes::set_sdk_mode(const char* value, size_t size) {
  
  sdk_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.CheckUpdateRes.sdk_mode)
}
inline ::std::string* CheckUpdateRes::mutable_sdk_mode() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateRes.sdk_mode)
  return sdk_mode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckUpdateRes::release_sdk_mode() {
  // @@protoc_insertion_point(field_release:deviceapi.CheckUpdateRes.sdk_mode)
  
  return sdk_mode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckUpdateRes::set_allocated_sdk_mode(::std::string* sdk_mode) {
  if (sdk_mode != NULL) {
    
  } else {
    
  }
  sdk_mode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_mode);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.CheckUpdateRes.sdk_mode)
}

// repeated .deviceapi.AvailableAppBean available_app_list = 5;
inline int CheckUpdateRes::available_app_list_size() const {
  return available_app_list_.size();
}
inline void CheckUpdateRes::clear_available_app_list() {
  available_app_list_.Clear();
}
inline const ::deviceapi::AvailableAppBean& CheckUpdateRes::available_app_list(int index) const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateRes.available_app_list)
  return available_app_list_.Get(index);
}
inline ::deviceapi::AvailableAppBean* CheckUpdateRes::mutable_available_app_list(int index) {
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateRes.available_app_list)
  return available_app_list_.Mutable(index);
}
inline ::deviceapi::AvailableAppBean* CheckUpdateRes::add_available_app_list() {
  // @@protoc_insertion_point(field_add:deviceapi.CheckUpdateRes.available_app_list)
  return available_app_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::deviceapi::AvailableAppBean >*
CheckUpdateRes::mutable_available_app_list() {
  // @@protoc_insertion_point(field_mutable_list:deviceapi.CheckUpdateRes.available_app_list)
  return &available_app_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::deviceapi::AvailableAppBean >&
CheckUpdateRes::available_app_list() const {
  // @@protoc_insertion_point(field_list:deviceapi.CheckUpdateRes.available_app_list)
  return available_app_list_;
}

inline const CheckUpdateRes* CheckUpdateRes::internal_default_instance() {
  return &CheckUpdateRes_default_instance_.get();
}
// -------------------------------------------------------------------

// AvailableAppBean

// optional string app_name = 1;
inline void AvailableAppBean::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvailableAppBean::app_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.app_name)
  return app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvailableAppBean::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.app_name)
}
inline void AvailableAppBean::set_app_name(const char* value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.app_name)
}
inline void AvailableAppBean::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.app_name)
}
inline ::std::string* AvailableAppBean::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvailableAppBean::release_app_name() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvailableAppBean::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.app_name)
}

// optional string app_logo = 2;
inline void AvailableAppBean::clear_app_logo() {
  app_logo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvailableAppBean::app_logo() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.app_logo)
  return app_logo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvailableAppBean::set_app_logo(const ::std::string& value) {
  
  app_logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.app_logo)
}
inline void AvailableAppBean::set_app_logo(const char* value) {
  
  app_logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.app_logo)
}
inline void AvailableAppBean::set_app_logo(const char* value, size_t size) {
  
  app_logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.app_logo)
}
inline ::std::string* AvailableAppBean::mutable_app_logo() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.app_logo)
  return app_logo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvailableAppBean::release_app_logo() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.app_logo)
  
  return app_logo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvailableAppBean::set_allocated_app_logo(::std::string* app_logo) {
  if (app_logo != NULL) {
    
  } else {
    
  }
  app_logo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_logo);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.app_logo)
}

// optional string installed_version = 3;
inline void AvailableAppBean::clear_installed_version() {
  installed_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvailableAppBean::installed_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.installed_version)
  return installed_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvailableAppBean::set_installed_version(const ::std::string& value) {
  
  installed_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.installed_version)
}
inline void AvailableAppBean::set_installed_version(const char* value) {
  
  installed_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.installed_version)
}
inline void AvailableAppBean::set_installed_version(const char* value, size_t size) {
  
  installed_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.installed_version)
}
inline ::std::string* AvailableAppBean::mutable_installed_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.installed_version)
  return installed_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvailableAppBean::release_installed_version() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.installed_version)
  
  return installed_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvailableAppBean::set_allocated_installed_version(::std::string* installed_version) {
  if (installed_version != NULL) {
    
  } else {
    
  }
  installed_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), installed_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.installed_version)
}

// optional string last_updated = 4;
inline void AvailableAppBean::clear_last_updated() {
  last_updated_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvailableAppBean::last_updated() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.last_updated)
  return last_updated_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvailableAppBean::set_last_updated(const ::std::string& value) {
  
  last_updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.last_updated)
}
inline void AvailableAppBean::set_last_updated(const char* value) {
  
  last_updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.last_updated)
}
inline void AvailableAppBean::set_last_updated(const char* value, size_t size) {
  
  last_updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.last_updated)
}
inline ::std::string* AvailableAppBean::mutable_last_updated() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.last_updated)
  return last_updated_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvailableAppBean::release_last_updated() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.last_updated)
  
  return last_updated_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvailableAppBean::set_allocated_last_updated(::std::string* last_updated) {
  if (last_updated != NULL) {
    
  } else {
    
  }
  last_updated_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_updated);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.last_updated)
}

// optional string latest_version = 5;
inline void AvailableAppBean::clear_latest_version() {
  latest_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvailableAppBean::latest_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.latest_version)
  return latest_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvailableAppBean::set_latest_version(const ::std::string& value) {
  
  latest_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.latest_version)
}
inline void AvailableAppBean::set_latest_version(const char* value) {
  
  latest_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.latest_version)
}
inline void AvailableAppBean::set_latest_version(const char* value, size_t size) {
  
  latest_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.latest_version)
}
inline ::std::string* AvailableAppBean::mutable_latest_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.latest_version)
  return latest_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvailableAppBean::release_latest_version() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.latest_version)
  
  return latest_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvailableAppBean::set_allocated_latest_version(::std::string* latest_version) {
  if (latest_version != NULL) {
    
  } else {
    
  }
  latest_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), latest_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.latest_version)
}

// optional string install_mode = 6;
inline void AvailableAppBean::clear_install_mode() {
  install_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvailableAppBean::install_mode() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.install_mode)
  return install_mode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvailableAppBean::set_install_mode(const ::std::string& value) {
  
  install_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.install_mode)
}
inline void AvailableAppBean::set_install_mode(const char* value) {
  
  install_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.install_mode)
}
inline void AvailableAppBean::set_install_mode(const char* value, size_t size) {
  
  install_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.install_mode)
}
inline ::std::string* AvailableAppBean::mutable_install_mode() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.install_mode)
  return install_mode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvailableAppBean::release_install_mode() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.install_mode)
  
  return install_mode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvailableAppBean::set_allocated_install_mode(::std::string* install_mode) {
  if (install_mode != NULL) {
    
  } else {
    
  }
  install_mode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), install_mode);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.install_mode)
}

inline const AvailableAppBean* AvailableAppBean::internal_default_instance() {
  return &AvailableAppBean_default_instance_.get();
}
// -------------------------------------------------------------------

// BindCheckReq

// optional string file_path = 1;
inline void BindCheckReq::clear_file_path() {
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindCheckReq::file_path() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindCheckReq.file_path)
  return file_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindCheckReq::set_file_path(const ::std::string& value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindCheckReq.file_path)
}
inline void BindCheckReq::set_file_path(const char* value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindCheckReq.file_path)
}
inline void BindCheckReq::set_file_path(const char* value, size_t size) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindCheckReq.file_path)
}
inline ::std::string* BindCheckReq::mutable_file_path() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindCheckReq.file_path)
  return file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindCheckReq::release_file_path() {
  // @@protoc_insertion_point(field_release:deviceapi.BindCheckReq.file_path)
  
  return file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindCheckReq::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    
  } else {
    
  }
  file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindCheckReq.file_path)
}

inline const BindCheckReq* BindCheckReq::internal_default_instance() {
  return &BindCheckReq_default_instance_.get();
}
// -------------------------------------------------------------------

// BindCheckRes

// optional string bind_status = 1;
inline void BindCheckRes::clear_bind_status() {
  bind_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindCheckRes::bind_status() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindCheckRes.bind_status)
  return bind_status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindCheckRes::set_bind_status(const ::std::string& value) {
  
  bind_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindCheckRes.bind_status)
}
inline void BindCheckRes::set_bind_status(const char* value) {
  
  bind_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindCheckRes.bind_status)
}
inline void BindCheckRes::set_bind_status(const char* value, size_t size) {
  
  bind_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindCheckRes.bind_status)
}
inline ::std::string* BindCheckRes::mutable_bind_status() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindCheckRes.bind_status)
  return bind_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindCheckRes::release_bind_status() {
  // @@protoc_insertion_point(field_release:deviceapi.BindCheckRes.bind_status)
  
  return bind_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindCheckRes::set_allocated_bind_status(::std::string* bind_status) {
  if (bind_status != NULL) {
    
  } else {
    
  }
  bind_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bind_status);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindCheckRes.bind_status)
}

inline const BindCheckRes* BindCheckRes::internal_default_instance() {
  return &BindCheckRes_default_instance_.get();
}
// -------------------------------------------------------------------

// BindAcquireReq

// optional string bind_code = 1;
inline void BindAcquireReq::clear_bind_code() {
  bind_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindAcquireReq::bind_code() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindAcquireReq.bind_code)
  return bind_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindAcquireReq::set_bind_code(const ::std::string& value) {
  
  bind_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindAcquireReq.bind_code)
}
inline void BindAcquireReq::set_bind_code(const char* value) {
  
  bind_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindAcquireReq.bind_code)
}
inline void BindAcquireReq::set_bind_code(const char* value, size_t size) {
  
  bind_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindAcquireReq.bind_code)
}
inline ::std::string* BindAcquireReq::mutable_bind_code() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindAcquireReq.bind_code)
  return bind_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindAcquireReq::release_bind_code() {
  // @@protoc_insertion_point(field_release:deviceapi.BindAcquireReq.bind_code)
  
  return bind_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindAcquireReq::set_allocated_bind_code(::std::string* bind_code) {
  if (bind_code != NULL) {
    
  } else {
    
  }
  bind_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bind_code);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindAcquireReq.bind_code)
}

inline const BindAcquireReq* BindAcquireReq::internal_default_instance() {
  return &BindAcquireReq_default_instance_.get();
}
// -------------------------------------------------------------------

// BindAcquireRes

// optional string bind_result = 1;
inline void BindAcquireRes::clear_bind_result() {
  bind_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindAcquireRes::bind_result() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindAcquireRes.bind_result)
  return bind_result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindAcquireRes::set_bind_result(const ::std::string& value) {
  
  bind_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindAcquireRes.bind_result)
}
inline void BindAcquireRes::set_bind_result(const char* value) {
  
  bind_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindAcquireRes.bind_result)
}
inline void BindAcquireRes::set_bind_result(const char* value, size_t size) {
  
  bind_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindAcquireRes.bind_result)
}
inline ::std::string* BindAcquireRes::mutable_bind_result() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindAcquireRes.bind_result)
  return bind_result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindAcquireRes::release_bind_result() {
  // @@protoc_insertion_point(field_release:deviceapi.BindAcquireRes.bind_result)
  
  return bind_result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindAcquireRes::set_allocated_bind_result(::std::string* bind_result) {
  if (bind_result != NULL) {
    
  } else {
    
  }
  bind_result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bind_result);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindAcquireRes.bind_result)
}

inline const BindAcquireRes* BindAcquireRes::internal_default_instance() {
  return &BindAcquireRes_default_instance_.get();
}
// -------------------------------------------------------------------

// GetSeidRes

// optional string seid = 1;
inline void GetSeidRes::clear_seid() {
  seid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSeidRes::seid() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetSeidRes.seid)
  return seid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSeidRes::set_seid(const ::std::string& value) {
  
  seid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetSeidRes.seid)
}
inline void GetSeidRes::set_seid(const char* value) {
  
  seid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetSeidRes.seid)
}
inline void GetSeidRes::set_seid(const char* value, size_t size) {
  
  seid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetSeidRes.seid)
}
inline ::std::string* GetSeidRes::mutable_seid() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetSeidRes.seid)
  return seid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSeidRes::release_seid() {
  // @@protoc_insertion_point(field_release:deviceapi.GetSeidRes.seid)
  
  return seid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSeidRes::set_allocated_seid(::std::string* seid) {
  if (seid != NULL) {
    
  } else {
    
  }
  seid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seid);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetSeidRes.seid)
}

inline const GetSeidRes* GetSeidRes::internal_default_instance() {
  return &GetSeidRes_default_instance_.get();
}
// -------------------------------------------------------------------

// GetSnRes

// optional string sn = 1;
inline void GetSnRes::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSnRes::sn() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetSnRes.sn)
  return sn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSnRes::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetSnRes.sn)
}
inline void GetSnRes::set_sn(const char* value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetSnRes.sn)
}
inline void GetSnRes::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetSnRes.sn)
}
inline ::std::string* GetSnRes::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetSnRes.sn)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSnRes::release_sn() {
  // @@protoc_insertion_point(field_release:deviceapi.GetSnRes.sn)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSnRes::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetSnRes.sn)
}

inline const GetSnRes* GetSnRes::internal_default_instance() {
  return &GetSnRes_default_instance_.get();
}
// -------------------------------------------------------------------

// GetRamSizeRes

// optional string ram_size = 1;
inline void GetRamSizeRes::clear_ram_size() {
  ram_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRamSizeRes::ram_size() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetRamSizeRes.ram_size)
  return ram_size_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRamSizeRes::set_ram_size(const ::std::string& value) {
  
  ram_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetRamSizeRes.ram_size)
}
inline void GetRamSizeRes::set_ram_size(const char* value) {
  
  ram_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetRamSizeRes.ram_size)
}
inline void GetRamSizeRes::set_ram_size(const char* value, size_t size) {
  
  ram_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetRamSizeRes.ram_size)
}
inline ::std::string* GetRamSizeRes::mutable_ram_size() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetRamSizeRes.ram_size)
  return ram_size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRamSizeRes::release_ram_size() {
  // @@protoc_insertion_point(field_release:deviceapi.GetRamSizeRes.ram_size)
  
  return ram_size_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRamSizeRes::set_allocated_ram_size(::std::string* ram_size) {
  if (ram_size != NULL) {
    
  } else {
    
  }
  ram_size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ram_size);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetRamSizeRes.ram_size)
}

inline const GetRamSizeRes* GetRamSizeRes::internal_default_instance() {
  return &GetRamSizeRes_default_instance_.get();
}
// -------------------------------------------------------------------

// GetFirmwareVersionRes

// optional string firmware_version = 1;
inline void GetFirmwareVersionRes::clear_firmware_version() {
  firmware_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFirmwareVersionRes::firmware_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetFirmwareVersionRes.firmware_version)
  return firmware_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFirmwareVersionRes::set_firmware_version(const ::std::string& value) {
  
  firmware_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetFirmwareVersionRes.firmware_version)
}
inline void GetFirmwareVersionRes::set_firmware_version(const char* value) {
  
  firmware_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetFirmwareVersionRes.firmware_version)
}
inline void GetFirmwareVersionRes::set_firmware_version(const char* value, size_t size) {
  
  firmware_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetFirmwareVersionRes.firmware_version)
}
inline ::std::string* GetFirmwareVersionRes::mutable_firmware_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetFirmwareVersionRes.firmware_version)
  return firmware_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFirmwareVersionRes::release_firmware_version() {
  // @@protoc_insertion_point(field_release:deviceapi.GetFirmwareVersionRes.firmware_version)
  
  return firmware_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFirmwareVersionRes::set_allocated_firmware_version(::std::string* firmware_version) {
  if (firmware_version != NULL) {
    
  } else {
    
  }
  firmware_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firmware_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetFirmwareVersionRes.firmware_version)
}

inline const GetFirmwareVersionRes* GetFirmwareVersionRes::internal_default_instance() {
  return &GetFirmwareVersionRes_default_instance_.get();
}
// -------------------------------------------------------------------

// GetBatteryPowerRes

// optional string battery_power = 1;
inline void GetBatteryPowerRes::clear_battery_power() {
  battery_power_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBatteryPowerRes::battery_power() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetBatteryPowerRes.battery_power)
  return battery_power_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBatteryPowerRes::set_battery_power(const ::std::string& value) {
  
  battery_power_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetBatteryPowerRes.battery_power)
}
inline void GetBatteryPowerRes::set_battery_power(const char* value) {
  
  battery_power_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetBatteryPowerRes.battery_power)
}
inline void GetBatteryPowerRes::set_battery_power(const char* value, size_t size) {
  
  battery_power_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetBatteryPowerRes.battery_power)
}
inline ::std::string* GetBatteryPowerRes::mutable_battery_power() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetBatteryPowerRes.battery_power)
  return battery_power_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBatteryPowerRes::release_battery_power() {
  // @@protoc_insertion_point(field_release:deviceapi.GetBatteryPowerRes.battery_power)
  
  return battery_power_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBatteryPowerRes::set_allocated_battery_power(::std::string* battery_power) {
  if (battery_power != NULL) {
    
  } else {
    
  }
  battery_power_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), battery_power);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetBatteryPowerRes.battery_power)
}

inline const GetBatteryPowerRes* GetBatteryPowerRes::internal_default_instance() {
  return &GetBatteryPowerRes_default_instance_.get();
}
// -------------------------------------------------------------------

// GetLifeTimeRes

// optional string life_time = 1;
inline void GetLifeTimeRes::clear_life_time() {
  life_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetLifeTimeRes::life_time() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetLifeTimeRes.life_time)
  return life_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLifeTimeRes::set_life_time(const ::std::string& value) {
  
  life_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetLifeTimeRes.life_time)
}
inline void GetLifeTimeRes::set_life_time(const char* value) {
  
  life_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetLifeTimeRes.life_time)
}
inline void GetLifeTimeRes::set_life_time(const char* value, size_t size) {
  
  life_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetLifeTimeRes.life_time)
}
inline ::std::string* GetLifeTimeRes::mutable_life_time() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetLifeTimeRes.life_time)
  return life_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLifeTimeRes::release_life_time() {
  // @@protoc_insertion_point(field_release:deviceapi.GetLifeTimeRes.life_time)
  
  return life_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLifeTimeRes::set_allocated_life_time(::std::string* life_time) {
  if (life_time != NULL) {
    
  } else {
    
  }
  life_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), life_time);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetLifeTimeRes.life_time)
}

inline const GetLifeTimeRes* GetLifeTimeRes::internal_default_instance() {
  return &GetLifeTimeRes_default_instance_.get();
}
// -------------------------------------------------------------------

// GetBleNameRes

// optional string ble_name = 1;
inline void GetBleNameRes::clear_ble_name() {
  ble_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBleNameRes::ble_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetBleNameRes.ble_name)
  return ble_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBleNameRes::set_ble_name(const ::std::string& value) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetBleNameRes.ble_name)
}
inline void GetBleNameRes::set_ble_name(const char* value) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetBleNameRes.ble_name)
}
inline void GetBleNameRes::set_ble_name(const char* value, size_t size) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetBleNameRes.ble_name)
}
inline ::std::string* GetBleNameRes::mutable_ble_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetBleNameRes.ble_name)
  return ble_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBleNameRes::release_ble_name() {
  // @@protoc_insertion_point(field_release:deviceapi.GetBleNameRes.ble_name)
  
  return ble_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBleNameRes::set_allocated_ble_name(::std::string* ble_name) {
  if (ble_name != NULL) {
    
  } else {
    
  }
  ble_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ble_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetBleNameRes.ble_name)
}

inline const GetBleNameRes* GetBleNameRes::internal_default_instance() {
  return &GetBleNameRes_default_instance_.get();
}
// -------------------------------------------------------------------

// SetBleNameReq

// optional string ble_name = 1;
inline void SetBleNameReq::clear_ble_name() {
  ble_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetBleNameReq::ble_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.SetBleNameReq.ble_name)
  return ble_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetBleNameReq::set_ble_name(const ::std::string& value) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SetBleNameReq.ble_name)
}
inline void SetBleNameReq::set_ble_name(const char* value) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SetBleNameReq.ble_name)
}
inline void SetBleNameReq::set_ble_name(const char* value, size_t size) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SetBleNameReq.ble_name)
}
inline ::std::string* SetBleNameReq::mutable_ble_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SetBleNameReq.ble_name)
  return ble_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetBleNameReq::release_ble_name() {
  // @@protoc_insertion_point(field_release:deviceapi.SetBleNameReq.ble_name)
  
  return ble_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetBleNameReq::set_allocated_ble_name(::std::string* ble_name) {
  if (ble_name != NULL) {
    
  } else {
    
  }
  ble_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ble_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SetBleNameReq.ble_name)
}

inline const SetBleNameReq* SetBleNameReq::internal_default_instance() {
  return &SetBleNameReq_default_instance_.get();
}
// -------------------------------------------------------------------

// GetBleVersionRes

// optional string ble_version = 1;
inline void GetBleVersionRes::clear_ble_version() {
  ble_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBleVersionRes::ble_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetBleVersionRes.ble_version)
  return ble_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBleVersionRes::set_ble_version(const ::std::string& value) {
  
  ble_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetBleVersionRes.ble_version)
}
inline void GetBleVersionRes::set_ble_version(const char* value) {
  
  ble_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetBleVersionRes.ble_version)
}
inline void GetBleVersionRes::set_ble_version(const char* value, size_t size) {
  
  ble_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetBleVersionRes.ble_version)
}
inline ::std::string* GetBleVersionRes::mutable_ble_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetBleVersionRes.ble_version)
  return ble_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBleVersionRes::release_ble_version() {
  // @@protoc_insertion_point(field_release:deviceapi.GetBleVersionRes.ble_version)
  
  return ble_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBleVersionRes::set_allocated_ble_version(::std::string* ble_version) {
  if (ble_version != NULL) {
    
  } else {
    
  }
  ble_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ble_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetBleVersionRes.ble_version)
}

inline const GetBleVersionRes* GetBleVersionRes::internal_default_instance() {
  return &GetBleVersionRes_default_instance_.get();
}
// -------------------------------------------------------------------

// GetSdkInfoRes

// optional string sdk_version = 1;
inline void GetSdkInfoRes::clear_sdk_version() {
  sdk_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSdkInfoRes::sdk_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetSdkInfoRes.sdk_version)
  return sdk_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSdkInfoRes::set_sdk_version(const ::std::string& value) {
  
  sdk_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetSdkInfoRes.sdk_version)
}
inline void GetSdkInfoRes::set_sdk_version(const char* value) {
  
  sdk_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetSdkInfoRes.sdk_version)
}
inline void GetSdkInfoRes::set_sdk_version(const char* value, size_t size) {
  
  sdk_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetSdkInfoRes.sdk_version)
}
inline ::std::string* GetSdkInfoRes::mutable_sdk_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetSdkInfoRes.sdk_version)
  return sdk_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSdkInfoRes::release_sdk_version() {
  // @@protoc_insertion_point(field_release:deviceapi.GetSdkInfoRes.sdk_version)
  
  return sdk_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSdkInfoRes::set_allocated_sdk_version(::std::string* sdk_version) {
  if (sdk_version != NULL) {
    
  } else {
    
  }
  sdk_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetSdkInfoRes.sdk_version)
}

inline const GetSdkInfoRes* GetSdkInfoRes::internal_default_instance() {
  return &GetSdkInfoRes_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace deviceapi

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_device_2eproto__INCLUDED
