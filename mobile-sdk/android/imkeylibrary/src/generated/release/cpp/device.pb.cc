// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: device.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "device.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace deviceapi {

namespace {

const ::google::protobuf::Descriptor* EmptyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmptyResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppDownloadReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppDownloadReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppUpdateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppUpdateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppDeleteReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppDeleteReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CheckUpdateRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheckUpdateRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* AvailableAppBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AvailableAppBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindCheckReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindCheckReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindCheckRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindCheckRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindAcquireReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindAcquireReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindAcquireRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindAcquireRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSeidRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSeidRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSnRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSnRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRamSizeRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRamSizeRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFirmwareVersionRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFirmwareVersionRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBatteryPowerRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBatteryPowerRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLifeTimeRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLifeTimeRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBleNameRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBleNameRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetBleNameReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetBleNameReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBleVersionRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBleVersionRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSdkInfoRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSdkInfoRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_device_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_device_2eproto() {
  protobuf_AddDesc_device_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "device.proto");
  GOOGLE_CHECK(file != NULL);
  EmptyResponse_descriptor_ = file->message_type(0);
  static const int EmptyResponse_offsets_[1] = {
  };
  EmptyResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EmptyResponse_descriptor_,
      EmptyResponse::internal_default_instance(),
      EmptyResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(EmptyResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyResponse, _internal_metadata_));
  AppDownloadReq_descriptor_ = file->message_type(1);
  static const int AppDownloadReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDownloadReq, app_name_),
  };
  AppDownloadReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AppDownloadReq_descriptor_,
      AppDownloadReq::internal_default_instance(),
      AppDownloadReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(AppDownloadReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDownloadReq, _internal_metadata_));
  AppUpdateReq_descriptor_ = file->message_type(2);
  static const int AppUpdateReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppUpdateReq, app_name_),
  };
  AppUpdateReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AppUpdateReq_descriptor_,
      AppUpdateReq::internal_default_instance(),
      AppUpdateReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(AppUpdateReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppUpdateReq, _internal_metadata_));
  AppDeleteReq_descriptor_ = file->message_type(3);
  static const int AppDeleteReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDeleteReq, app_name_),
  };
  AppDeleteReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AppDeleteReq_descriptor_,
      AppDeleteReq::internal_default_instance(),
      AppDeleteReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(AppDeleteReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDeleteReq, _internal_metadata_));
  CheckUpdateRes_descriptor_ = file->message_type(4);
  static const int CheckUpdateRes_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateRes, se_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateRes, sn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateRes, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateRes, sdk_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateRes, available_app_list_),
  };
  CheckUpdateRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CheckUpdateRes_descriptor_,
      CheckUpdateRes::internal_default_instance(),
      CheckUpdateRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(CheckUpdateRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateRes, _internal_metadata_));
  AvailableAppBean_descriptor_ = file->message_type(5);
  static const int AvailableAppBean_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, app_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, app_logo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, installed_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, last_updated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, latest_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, install_mode_),
  };
  AvailableAppBean_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AvailableAppBean_descriptor_,
      AvailableAppBean::internal_default_instance(),
      AvailableAppBean_offsets_,
      -1,
      -1,
      -1,
      sizeof(AvailableAppBean),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, _internal_metadata_));
  BindCheckReq_descriptor_ = file->message_type(6);
  static const int BindCheckReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindCheckReq, file_path_),
  };
  BindCheckReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindCheckReq_descriptor_,
      BindCheckReq::internal_default_instance(),
      BindCheckReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindCheckReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindCheckReq, _internal_metadata_));
  BindCheckRes_descriptor_ = file->message_type(7);
  static const int BindCheckRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindCheckRes, bind_status_),
  };
  BindCheckRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindCheckRes_descriptor_,
      BindCheckRes::internal_default_instance(),
      BindCheckRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindCheckRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindCheckRes, _internal_metadata_));
  BindAcquireReq_descriptor_ = file->message_type(8);
  static const int BindAcquireReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAcquireReq, bind_code_),
  };
  BindAcquireReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindAcquireReq_descriptor_,
      BindAcquireReq::internal_default_instance(),
      BindAcquireReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindAcquireReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAcquireReq, _internal_metadata_));
  BindAcquireRes_descriptor_ = file->message_type(9);
  static const int BindAcquireRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAcquireRes, bind_result_),
  };
  BindAcquireRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindAcquireRes_descriptor_,
      BindAcquireRes::internal_default_instance(),
      BindAcquireRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindAcquireRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAcquireRes, _internal_metadata_));
  GetSeidRes_descriptor_ = file->message_type(10);
  static const int GetSeidRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSeidRes, seid_),
  };
  GetSeidRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetSeidRes_descriptor_,
      GetSeidRes::internal_default_instance(),
      GetSeidRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetSeidRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSeidRes, _internal_metadata_));
  GetSnRes_descriptor_ = file->message_type(11);
  static const int GetSnRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSnRes, sn_),
  };
  GetSnRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetSnRes_descriptor_,
      GetSnRes::internal_default_instance(),
      GetSnRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetSnRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSnRes, _internal_metadata_));
  GetRamSizeRes_descriptor_ = file->message_type(12);
  static const int GetRamSizeRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRamSizeRes, ram_size_),
  };
  GetRamSizeRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRamSizeRes_descriptor_,
      GetRamSizeRes::internal_default_instance(),
      GetRamSizeRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetRamSizeRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRamSizeRes, _internal_metadata_));
  GetFirmwareVersionRes_descriptor_ = file->message_type(13);
  static const int GetFirmwareVersionRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFirmwareVersionRes, firmware_version_),
  };
  GetFirmwareVersionRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetFirmwareVersionRes_descriptor_,
      GetFirmwareVersionRes::internal_default_instance(),
      GetFirmwareVersionRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetFirmwareVersionRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFirmwareVersionRes, _internal_metadata_));
  GetBatteryPowerRes_descriptor_ = file->message_type(14);
  static const int GetBatteryPowerRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBatteryPowerRes, battery_power_),
  };
  GetBatteryPowerRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBatteryPowerRes_descriptor_,
      GetBatteryPowerRes::internal_default_instance(),
      GetBatteryPowerRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetBatteryPowerRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBatteryPowerRes, _internal_metadata_));
  GetLifeTimeRes_descriptor_ = file->message_type(15);
  static const int GetLifeTimeRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLifeTimeRes, life_time_),
  };
  GetLifeTimeRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetLifeTimeRes_descriptor_,
      GetLifeTimeRes::internal_default_instance(),
      GetLifeTimeRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetLifeTimeRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLifeTimeRes, _internal_metadata_));
  GetBleNameRes_descriptor_ = file->message_type(16);
  static const int GetBleNameRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBleNameRes, ble_name_),
  };
  GetBleNameRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBleNameRes_descriptor_,
      GetBleNameRes::internal_default_instance(),
      GetBleNameRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetBleNameRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBleNameRes, _internal_metadata_));
  SetBleNameReq_descriptor_ = file->message_type(17);
  static const int SetBleNameReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetBleNameReq, ble_name_),
  };
  SetBleNameReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetBleNameReq_descriptor_,
      SetBleNameReq::internal_default_instance(),
      SetBleNameReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetBleNameReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetBleNameReq, _internal_metadata_));
  GetBleVersionRes_descriptor_ = file->message_type(18);
  static const int GetBleVersionRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBleVersionRes, ble_version_),
  };
  GetBleVersionRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBleVersionRes_descriptor_,
      GetBleVersionRes::internal_default_instance(),
      GetBleVersionRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetBleVersionRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBleVersionRes, _internal_metadata_));
  GetSdkInfoRes_descriptor_ = file->message_type(19);
  static const int GetSdkInfoRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSdkInfoRes, sdk_version_),
  };
  GetSdkInfoRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetSdkInfoRes_descriptor_,
      GetSdkInfoRes::internal_default_instance(),
      GetSdkInfoRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetSdkInfoRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSdkInfoRes, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_device_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EmptyResponse_descriptor_, EmptyResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AppDownloadReq_descriptor_, AppDownloadReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AppUpdateReq_descriptor_, AppUpdateReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AppDeleteReq_descriptor_, AppDeleteReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CheckUpdateRes_descriptor_, CheckUpdateRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AvailableAppBean_descriptor_, AvailableAppBean::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindCheckReq_descriptor_, BindCheckReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindCheckRes_descriptor_, BindCheckRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindAcquireReq_descriptor_, BindAcquireReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindAcquireRes_descriptor_, BindAcquireRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetSeidRes_descriptor_, GetSeidRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetSnRes_descriptor_, GetSnRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRamSizeRes_descriptor_, GetRamSizeRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetFirmwareVersionRes_descriptor_, GetFirmwareVersionRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBatteryPowerRes_descriptor_, GetBatteryPowerRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetLifeTimeRes_descriptor_, GetLifeTimeRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBleNameRes_descriptor_, GetBleNameRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetBleNameReq_descriptor_, SetBleNameReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBleVersionRes_descriptor_, GetBleVersionRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetSdkInfoRes_descriptor_, GetSdkInfoRes::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_device_2eproto() {
  EmptyResponse_default_instance_.Shutdown();
  delete EmptyResponse_reflection_;
  AppDownloadReq_default_instance_.Shutdown();
  delete AppDownloadReq_reflection_;
  AppUpdateReq_default_instance_.Shutdown();
  delete AppUpdateReq_reflection_;
  AppDeleteReq_default_instance_.Shutdown();
  delete AppDeleteReq_reflection_;
  CheckUpdateRes_default_instance_.Shutdown();
  delete CheckUpdateRes_reflection_;
  AvailableAppBean_default_instance_.Shutdown();
  delete AvailableAppBean_reflection_;
  BindCheckReq_default_instance_.Shutdown();
  delete BindCheckReq_reflection_;
  BindCheckRes_default_instance_.Shutdown();
  delete BindCheckRes_reflection_;
  BindAcquireReq_default_instance_.Shutdown();
  delete BindAcquireReq_reflection_;
  BindAcquireRes_default_instance_.Shutdown();
  delete BindAcquireRes_reflection_;
  GetSeidRes_default_instance_.Shutdown();
  delete GetSeidRes_reflection_;
  GetSnRes_default_instance_.Shutdown();
  delete GetSnRes_reflection_;
  GetRamSizeRes_default_instance_.Shutdown();
  delete GetRamSizeRes_reflection_;
  GetFirmwareVersionRes_default_instance_.Shutdown();
  delete GetFirmwareVersionRes_reflection_;
  GetBatteryPowerRes_default_instance_.Shutdown();
  delete GetBatteryPowerRes_reflection_;
  GetLifeTimeRes_default_instance_.Shutdown();
  delete GetLifeTimeRes_reflection_;
  GetBleNameRes_default_instance_.Shutdown();
  delete GetBleNameRes_reflection_;
  SetBleNameReq_default_instance_.Shutdown();
  delete SetBleNameReq_reflection_;
  GetBleVersionRes_default_instance_.Shutdown();
  delete GetBleVersionRes_reflection_;
  GetSdkInfoRes_default_instance_.Shutdown();
  delete GetSdkInfoRes_reflection_;
}

void protobuf_InitDefaults_device_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  EmptyResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AppDownloadReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AppUpdateReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AppDeleteReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CheckUpdateRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AvailableAppBean_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BindCheckReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BindCheckRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BindAcquireReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BindAcquireRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetSeidRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetSnRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetRamSizeRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetFirmwareVersionRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetBatteryPowerRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetLifeTimeRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetBleNameRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SetBleNameReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetBleVersionRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetSdkInfoRes_default_instance_.DefaultConstruct();
  EmptyResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  AppDownloadReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  AppUpdateReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  AppDeleteReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  CheckUpdateRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  AvailableAppBean_default_instance_.get_mutable()->InitAsDefaultInstance();
  BindCheckReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  BindCheckRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  BindAcquireReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  BindAcquireRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetSeidRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetSnRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetRamSizeRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetFirmwareVersionRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetBatteryPowerRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetLifeTimeRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetBleNameRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  SetBleNameReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetBleVersionRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetSdkInfoRes_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_device_2eproto_once_);
void protobuf_InitDefaults_device_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_device_2eproto_once_,
                 &protobuf_InitDefaults_device_2eproto_impl);
}
void protobuf_AddDesc_device_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_device_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014device.proto\022\tdeviceapi\"\017\n\rEmptyRespon"
    "se\"\"\n\016AppDownloadReq\022\020\n\010app_name\030\001 \001(\t\" "
    "\n\014AppUpdateReq\022\020\n\010app_name\030\001 \001(\t\" \n\014AppD"
    "eleteReq\022\020\n\010app_name\030\001 \001(\t\"\206\001\n\016CheckUpda"
    "teRes\022\r\n\005se_id\030\001 \001(\t\022\n\n\002sn\030\002 \001(\t\022\016\n\006stat"
    "us\030\003 \001(\t\022\020\n\010sdk_mode\030\004 \001(\t\0227\n\022available_"
    "app_list\030\005 \003(\0132\033.deviceapi.AvailableAppB"
    "ean\"\225\001\n\020AvailableAppBean\022\020\n\010app_name\030\001 \001"
    "(\t\022\020\n\010app_logo\030\002 \001(\t\022\031\n\021installed_versio"
    "n\030\003 \001(\t\022\024\n\014last_updated\030\004 \001(\t\022\026\n\016latest_"
    "version\030\005 \001(\t\022\024\n\014install_mode\030\006 \001(\t\"!\n\014B"
    "indCheckReq\022\021\n\tfile_path\030\001 \001(\t\"#\n\014BindCh"
    "eckRes\022\023\n\013bind_status\030\001 \001(\t\"#\n\016BindAcqui"
    "reReq\022\021\n\tbind_code\030\001 \001(\t\"%\n\016BindAcquireR"
    "es\022\023\n\013bind_result\030\001 \001(\t\"\032\n\nGetSeidRes\022\014\n"
    "\004seid\030\001 \001(\t\"\026\n\010GetSnRes\022\n\n\002sn\030\001 \001(\t\"!\n\rG"
    "etRamSizeRes\022\020\n\010ram_size\030\001 \001(\t\"1\n\025GetFir"
    "mwareVersionRes\022\030\n\020firmware_version\030\001 \001("
    "\t\"+\n\022GetBatteryPowerRes\022\025\n\rbattery_power"
    "\030\001 \001(\t\"#\n\016GetLifeTimeRes\022\021\n\tlife_time\030\001 "
    "\001(\t\"!\n\rGetBleNameRes\022\020\n\010ble_name\030\001 \001(\t\"!"
    "\n\rSetBleNameReq\022\020\n\010ble_name\030\001 \001(\t\"\'\n\020Get"
    "BleVersionRes\022\023\n\013ble_version\030\001 \001(\t\"$\n\rGe"
    "tSdkInfoRes\022\023\n\013sdk_version\030\001 \001(\tb\006proto3", 960);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "device.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_device_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_device_2eproto_once_);
void protobuf_AddDesc_device_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_device_2eproto_once_,
                 &protobuf_AddDesc_device_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_device_2eproto {
  StaticDescriptorInitializer_device_2eproto() {
    protobuf_AddDesc_device_2eproto();
  }
} static_descriptor_initializer_device_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyResponse::EmptyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.EmptyResponse)
}

void EmptyResponse::InitAsDefaultInstance() {
}

EmptyResponse::EmptyResponse(const EmptyResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.EmptyResponse)
}

void EmptyResponse::SharedCtor() {
  _cached_size_ = 0;
}

EmptyResponse::~EmptyResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.EmptyResponse)
  SharedDtor();
}

void EmptyResponse::SharedDtor() {
}

void EmptyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmptyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmptyResponse_descriptor_;
}

const EmptyResponse& EmptyResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EmptyResponse> EmptyResponse_default_instance_;

EmptyResponse* EmptyResponse::New(::google::protobuf::Arena* arena) const {
  EmptyResponse* n = new EmptyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EmptyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.EmptyResponse)
}

bool EmptyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.EmptyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.EmptyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.EmptyResponse)
  return false;
#undef DO_
}

void EmptyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.EmptyResponse)
  // @@protoc_insertion_point(serialize_end:deviceapi.EmptyResponse)
}

::google::protobuf::uint8* EmptyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.EmptyResponse)
  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.EmptyResponse)
  return target;
}

size_t EmptyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.EmptyResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmptyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.EmptyResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EmptyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmptyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.EmptyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.EmptyResponse)
    UnsafeMergeFrom(*source);
  }
}

void EmptyResponse::MergeFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.EmptyResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EmptyResponse::UnsafeMergeFrom(const EmptyResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void EmptyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyResponse::CopyFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.EmptyResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EmptyResponse::IsInitialized() const {

  return true;
}

void EmptyResponse::Swap(EmptyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyResponse::InternalSwap(EmptyResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmptyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmptyResponse_descriptor_;
  metadata.reflection = EmptyResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmptyResponse

inline const EmptyResponse* EmptyResponse::internal_default_instance() {
  return &EmptyResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppDownloadReq::kAppNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppDownloadReq::AppDownloadReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.AppDownloadReq)
}

void AppDownloadReq::InitAsDefaultInstance() {
}

AppDownloadReq::AppDownloadReq(const AppDownloadReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.AppDownloadReq)
}

void AppDownloadReq::SharedCtor() {
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AppDownloadReq::~AppDownloadReq() {
  // @@protoc_insertion_point(destructor:deviceapi.AppDownloadReq)
  SharedDtor();
}

void AppDownloadReq::SharedDtor() {
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppDownloadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppDownloadReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppDownloadReq_descriptor_;
}

const AppDownloadReq& AppDownloadReq::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AppDownloadReq> AppDownloadReq_default_instance_;

AppDownloadReq* AppDownloadReq::New(::google::protobuf::Arena* arena) const {
  AppDownloadReq* n = new AppDownloadReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppDownloadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.AppDownloadReq)
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AppDownloadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.AppDownloadReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_name().data(), this->app_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AppDownloadReq.app_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.AppDownloadReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.AppDownloadReq)
  return false;
#undef DO_
}

void AppDownloadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.AppDownloadReq)
  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AppDownloadReq.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.AppDownloadReq)
}

::google::protobuf::uint8* AppDownloadReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.AppDownloadReq)
  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AppDownloadReq.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.AppDownloadReq)
  return target;
}

size_t AppDownloadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.AppDownloadReq)
  size_t total_size = 0;

  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppDownloadReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.AppDownloadReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AppDownloadReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppDownloadReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.AppDownloadReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.AppDownloadReq)
    UnsafeMergeFrom(*source);
  }
}

void AppDownloadReq::MergeFrom(const AppDownloadReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.AppDownloadReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AppDownloadReq::UnsafeMergeFrom(const AppDownloadReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.app_name().size() > 0) {

    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
}

void AppDownloadReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.AppDownloadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppDownloadReq::CopyFrom(const AppDownloadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.AppDownloadReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AppDownloadReq::IsInitialized() const {

  return true;
}

void AppDownloadReq::Swap(AppDownloadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppDownloadReq::InternalSwap(AppDownloadReq* other) {
  app_name_.Swap(&other->app_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppDownloadReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppDownloadReq_descriptor_;
  metadata.reflection = AppDownloadReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppDownloadReq

// optional string app_name = 1;
void AppDownloadReq::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AppDownloadReq::app_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.AppDownloadReq.app_name)
  return app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppDownloadReq::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AppDownloadReq.app_name)
}
void AppDownloadReq::set_app_name(const char* value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AppDownloadReq.app_name)
}
void AppDownloadReq::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AppDownloadReq.app_name)
}
::std::string* AppDownloadReq::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AppDownloadReq.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppDownloadReq::release_app_name() {
  // @@protoc_insertion_point(field_release:deviceapi.AppDownloadReq.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppDownloadReq::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AppDownloadReq.app_name)
}

inline const AppDownloadReq* AppDownloadReq::internal_default_instance() {
  return &AppDownloadReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppUpdateReq::kAppNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppUpdateReq::AppUpdateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.AppUpdateReq)
}

void AppUpdateReq::InitAsDefaultInstance() {
}

AppUpdateReq::AppUpdateReq(const AppUpdateReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.AppUpdateReq)
}

void AppUpdateReq::SharedCtor() {
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AppUpdateReq::~AppUpdateReq() {
  // @@protoc_insertion_point(destructor:deviceapi.AppUpdateReq)
  SharedDtor();
}

void AppUpdateReq::SharedDtor() {
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppUpdateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppUpdateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppUpdateReq_descriptor_;
}

const AppUpdateReq& AppUpdateReq::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AppUpdateReq> AppUpdateReq_default_instance_;

AppUpdateReq* AppUpdateReq::New(::google::protobuf::Arena* arena) const {
  AppUpdateReq* n = new AppUpdateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppUpdateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.AppUpdateReq)
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AppUpdateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.AppUpdateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_name().data(), this->app_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AppUpdateReq.app_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.AppUpdateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.AppUpdateReq)
  return false;
#undef DO_
}

void AppUpdateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.AppUpdateReq)
  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AppUpdateReq.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.AppUpdateReq)
}

::google::protobuf::uint8* AppUpdateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.AppUpdateReq)
  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AppUpdateReq.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.AppUpdateReq)
  return target;
}

size_t AppUpdateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.AppUpdateReq)
  size_t total_size = 0;

  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppUpdateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.AppUpdateReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AppUpdateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppUpdateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.AppUpdateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.AppUpdateReq)
    UnsafeMergeFrom(*source);
  }
}

void AppUpdateReq::MergeFrom(const AppUpdateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.AppUpdateReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AppUpdateReq::UnsafeMergeFrom(const AppUpdateReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.app_name().size() > 0) {

    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
}

void AppUpdateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.AppUpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppUpdateReq::CopyFrom(const AppUpdateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.AppUpdateReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AppUpdateReq::IsInitialized() const {

  return true;
}

void AppUpdateReq::Swap(AppUpdateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppUpdateReq::InternalSwap(AppUpdateReq* other) {
  app_name_.Swap(&other->app_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppUpdateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppUpdateReq_descriptor_;
  metadata.reflection = AppUpdateReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppUpdateReq

// optional string app_name = 1;
void AppUpdateReq::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AppUpdateReq::app_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.AppUpdateReq.app_name)
  return app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppUpdateReq::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AppUpdateReq.app_name)
}
void AppUpdateReq::set_app_name(const char* value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AppUpdateReq.app_name)
}
void AppUpdateReq::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AppUpdateReq.app_name)
}
::std::string* AppUpdateReq::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AppUpdateReq.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppUpdateReq::release_app_name() {
  // @@protoc_insertion_point(field_release:deviceapi.AppUpdateReq.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppUpdateReq::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AppUpdateReq.app_name)
}

inline const AppUpdateReq* AppUpdateReq::internal_default_instance() {
  return &AppUpdateReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppDeleteReq::kAppNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppDeleteReq::AppDeleteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.AppDeleteReq)
}

void AppDeleteReq::InitAsDefaultInstance() {
}

AppDeleteReq::AppDeleteReq(const AppDeleteReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.AppDeleteReq)
}

void AppDeleteReq::SharedCtor() {
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AppDeleteReq::~AppDeleteReq() {
  // @@protoc_insertion_point(destructor:deviceapi.AppDeleteReq)
  SharedDtor();
}

void AppDeleteReq::SharedDtor() {
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppDeleteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppDeleteReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppDeleteReq_descriptor_;
}

const AppDeleteReq& AppDeleteReq::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AppDeleteReq> AppDeleteReq_default_instance_;

AppDeleteReq* AppDeleteReq::New(::google::protobuf::Arena* arena) const {
  AppDeleteReq* n = new AppDeleteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppDeleteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.AppDeleteReq)
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AppDeleteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.AppDeleteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_name().data(), this->app_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AppDeleteReq.app_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.AppDeleteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.AppDeleteReq)
  return false;
#undef DO_
}

void AppDeleteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.AppDeleteReq)
  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AppDeleteReq.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.AppDeleteReq)
}

::google::protobuf::uint8* AppDeleteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.AppDeleteReq)
  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AppDeleteReq.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.AppDeleteReq)
  return target;
}

size_t AppDeleteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.AppDeleteReq)
  size_t total_size = 0;

  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppDeleteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.AppDeleteReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AppDeleteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppDeleteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.AppDeleteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.AppDeleteReq)
    UnsafeMergeFrom(*source);
  }
}

void AppDeleteReq::MergeFrom(const AppDeleteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.AppDeleteReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AppDeleteReq::UnsafeMergeFrom(const AppDeleteReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.app_name().size() > 0) {

    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
}

void AppDeleteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.AppDeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppDeleteReq::CopyFrom(const AppDeleteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.AppDeleteReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AppDeleteReq::IsInitialized() const {

  return true;
}

void AppDeleteReq::Swap(AppDeleteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppDeleteReq::InternalSwap(AppDeleteReq* other) {
  app_name_.Swap(&other->app_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppDeleteReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppDeleteReq_descriptor_;
  metadata.reflection = AppDeleteReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppDeleteReq

// optional string app_name = 1;
void AppDeleteReq::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AppDeleteReq::app_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.AppDeleteReq.app_name)
  return app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppDeleteReq::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AppDeleteReq.app_name)
}
void AppDeleteReq::set_app_name(const char* value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AppDeleteReq.app_name)
}
void AppDeleteReq::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AppDeleteReq.app_name)
}
::std::string* AppDeleteReq::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AppDeleteReq.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppDeleteReq::release_app_name() {
  // @@protoc_insertion_point(field_release:deviceapi.AppDeleteReq.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppDeleteReq::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AppDeleteReq.app_name)
}

inline const AppDeleteReq* AppDeleteReq::internal_default_instance() {
  return &AppDeleteReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckUpdateRes::kSeIdFieldNumber;
const int CheckUpdateRes::kSnFieldNumber;
const int CheckUpdateRes::kStatusFieldNumber;
const int CheckUpdateRes::kSdkModeFieldNumber;
const int CheckUpdateRes::kAvailableAppListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckUpdateRes::CheckUpdateRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.CheckUpdateRes)
}

void CheckUpdateRes::InitAsDefaultInstance() {
}

CheckUpdateRes::CheckUpdateRes(const CheckUpdateRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.CheckUpdateRes)
}

void CheckUpdateRes::SharedCtor() {
  se_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CheckUpdateRes::~CheckUpdateRes() {
  // @@protoc_insertion_point(destructor:deviceapi.CheckUpdateRes)
  SharedDtor();
}

void CheckUpdateRes::SharedDtor() {
  se_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_mode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckUpdateRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckUpdateRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckUpdateRes_descriptor_;
}

const CheckUpdateRes& CheckUpdateRes::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CheckUpdateRes> CheckUpdateRes_default_instance_;

CheckUpdateRes* CheckUpdateRes::New(::google::protobuf::Arena* arena) const {
  CheckUpdateRes* n = new CheckUpdateRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckUpdateRes::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.CheckUpdateRes)
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  available_app_list_.Clear();
}

bool CheckUpdateRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.CheckUpdateRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string se_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_se_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->se_id().data(), this->se_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.CheckUpdateRes.se_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sn;
        break;
      }

      // optional string sn = 2;
      case 2: {
        if (tag == 18) {
         parse_sn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sn().data(), this->sn().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.CheckUpdateRes.sn"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_status;
        break;
      }

      // optional string status = 3;
      case 3: {
        if (tag == 26) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), this->status().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.CheckUpdateRes.status"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sdk_mode;
        break;
      }

      // optional string sdk_mode = 4;
      case 4: {
        if (tag == 34) {
         parse_sdk_mode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdk_mode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdk_mode().data(), this->sdk_mode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.CheckUpdateRes.sdk_mode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_available_app_list;
        break;
      }

      // repeated .deviceapi.AvailableAppBean available_app_list = 5;
      case 5: {
        if (tag == 42) {
         parse_available_app_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_available_app_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_available_app_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_available_app_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.CheckUpdateRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.CheckUpdateRes)
  return false;
#undef DO_
}

void CheckUpdateRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.CheckUpdateRes)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateRes.se_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->se_id(), output);
  }

  // optional string sn = 2;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateRes.sn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sn(), output);
  }

  // optional string status = 3;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateRes.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->status(), output);
  }

  // optional string sdk_mode = 4;
  if (this->sdk_mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_mode().data(), this->sdk_mode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateRes.sdk_mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sdk_mode(), output);
  }

  // repeated .deviceapi.AvailableAppBean available_app_list = 5;
  for (unsigned int i = 0, n = this->available_app_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->available_app_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.CheckUpdateRes)
}

::google::protobuf::uint8* CheckUpdateRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.CheckUpdateRes)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateRes.se_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->se_id(), target);
  }

  // optional string sn = 2;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateRes.sn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sn(), target);
  }

  // optional string status = 3;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateRes.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->status(), target);
  }

  // optional string sdk_mode = 4;
  if (this->sdk_mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_mode().data(), this->sdk_mode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateRes.sdk_mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sdk_mode(), target);
  }

  // repeated .deviceapi.AvailableAppBean available_app_list = 5;
  for (unsigned int i = 0, n = this->available_app_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->available_app_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.CheckUpdateRes)
  return target;
}

size_t CheckUpdateRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.CheckUpdateRes)
  size_t total_size = 0;

  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->se_id());
  }

  // optional string sn = 2;
  if (this->sn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sn());
  }

  // optional string status = 3;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // optional string sdk_mode = 4;
  if (this->sdk_mode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdk_mode());
  }

  // repeated .deviceapi.AvailableAppBean available_app_list = 5;
  {
    unsigned int count = this->available_app_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->available_app_list(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckUpdateRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.CheckUpdateRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CheckUpdateRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckUpdateRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.CheckUpdateRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.CheckUpdateRes)
    UnsafeMergeFrom(*source);
  }
}

void CheckUpdateRes::MergeFrom(const CheckUpdateRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.CheckUpdateRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CheckUpdateRes::UnsafeMergeFrom(const CheckUpdateRes& from) {
  GOOGLE_DCHECK(&from != this);
  available_app_list_.MergeFrom(from.available_app_list_);
  if (from.se_id().size() > 0) {

    se_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_id_);
  }
  if (from.sn().size() > 0) {

    sn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sn_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.sdk_mode().size() > 0) {

    sdk_mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdk_mode_);
  }
}

void CheckUpdateRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.CheckUpdateRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckUpdateRes::CopyFrom(const CheckUpdateRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.CheckUpdateRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CheckUpdateRes::IsInitialized() const {

  return true;
}

void CheckUpdateRes::Swap(CheckUpdateRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckUpdateRes::InternalSwap(CheckUpdateRes* other) {
  se_id_.Swap(&other->se_id_);
  sn_.Swap(&other->sn_);
  status_.Swap(&other->status_);
  sdk_mode_.Swap(&other->sdk_mode_);
  available_app_list_.UnsafeArenaSwap(&other->available_app_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckUpdateRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheckUpdateRes_descriptor_;
  metadata.reflection = CheckUpdateRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckUpdateRes

// optional string se_id = 1;
void CheckUpdateRes::clear_se_id() {
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUpdateRes::se_id() const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateRes.se_id)
  return se_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateRes::set_se_id(const ::std::string& value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.CheckUpdateRes.se_id)
}
void CheckUpdateRes::set_se_id(const char* value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.CheckUpdateRes.se_id)
}
void CheckUpdateRes::set_se_id(const char* value, size_t size) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.CheckUpdateRes.se_id)
}
::std::string* CheckUpdateRes::mutable_se_id() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateRes.se_id)
  return se_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUpdateRes::release_se_id() {
  // @@protoc_insertion_point(field_release:deviceapi.CheckUpdateRes.se_id)
  
  return se_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateRes::set_allocated_se_id(::std::string* se_id) {
  if (se_id != NULL) {
    
  } else {
    
  }
  se_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_id);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.CheckUpdateRes.se_id)
}

// optional string sn = 2;
void CheckUpdateRes::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUpdateRes::sn() const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateRes.sn)
  return sn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateRes::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.CheckUpdateRes.sn)
}
void CheckUpdateRes::set_sn(const char* value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.CheckUpdateRes.sn)
}
void CheckUpdateRes::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.CheckUpdateRes.sn)
}
::std::string* CheckUpdateRes::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateRes.sn)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUpdateRes::release_sn() {
  // @@protoc_insertion_point(field_release:deviceapi.CheckUpdateRes.sn)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateRes::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.CheckUpdateRes.sn)
}

// optional string status = 3;
void CheckUpdateRes::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUpdateRes::status() const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateRes.status)
  return status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateRes::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.CheckUpdateRes.status)
}
void CheckUpdateRes::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.CheckUpdateRes.status)
}
void CheckUpdateRes::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.CheckUpdateRes.status)
}
::std::string* CheckUpdateRes::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateRes.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUpdateRes::release_status() {
  // @@protoc_insertion_point(field_release:deviceapi.CheckUpdateRes.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateRes::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.CheckUpdateRes.status)
}

// optional string sdk_mode = 4;
void CheckUpdateRes::clear_sdk_mode() {
  sdk_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUpdateRes::sdk_mode() const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateRes.sdk_mode)
  return sdk_mode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateRes::set_sdk_mode(const ::std::string& value) {
  
  sdk_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.CheckUpdateRes.sdk_mode)
}
void CheckUpdateRes::set_sdk_mode(const char* value) {
  
  sdk_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.CheckUpdateRes.sdk_mode)
}
void CheckUpdateRes::set_sdk_mode(const char* value, size_t size) {
  
  sdk_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.CheckUpdateRes.sdk_mode)
}
::std::string* CheckUpdateRes::mutable_sdk_mode() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateRes.sdk_mode)
  return sdk_mode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUpdateRes::release_sdk_mode() {
  // @@protoc_insertion_point(field_release:deviceapi.CheckUpdateRes.sdk_mode)
  
  return sdk_mode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateRes::set_allocated_sdk_mode(::std::string* sdk_mode) {
  if (sdk_mode != NULL) {
    
  } else {
    
  }
  sdk_mode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_mode);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.CheckUpdateRes.sdk_mode)
}

// repeated .deviceapi.AvailableAppBean available_app_list = 5;
int CheckUpdateRes::available_app_list_size() const {
  return available_app_list_.size();
}
void CheckUpdateRes::clear_available_app_list() {
  available_app_list_.Clear();
}
const ::deviceapi::AvailableAppBean& CheckUpdateRes::available_app_list(int index) const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateRes.available_app_list)
  return available_app_list_.Get(index);
}
::deviceapi::AvailableAppBean* CheckUpdateRes::mutable_available_app_list(int index) {
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateRes.available_app_list)
  return available_app_list_.Mutable(index);
}
::deviceapi::AvailableAppBean* CheckUpdateRes::add_available_app_list() {
  // @@protoc_insertion_point(field_add:deviceapi.CheckUpdateRes.available_app_list)
  return available_app_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::deviceapi::AvailableAppBean >*
CheckUpdateRes::mutable_available_app_list() {
  // @@protoc_insertion_point(field_mutable_list:deviceapi.CheckUpdateRes.available_app_list)
  return &available_app_list_;
}
const ::google::protobuf::RepeatedPtrField< ::deviceapi::AvailableAppBean >&
CheckUpdateRes::available_app_list() const {
  // @@protoc_insertion_point(field_list:deviceapi.CheckUpdateRes.available_app_list)
  return available_app_list_;
}

inline const CheckUpdateRes* CheckUpdateRes::internal_default_instance() {
  return &CheckUpdateRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvailableAppBean::kAppNameFieldNumber;
const int AvailableAppBean::kAppLogoFieldNumber;
const int AvailableAppBean::kInstalledVersionFieldNumber;
const int AvailableAppBean::kLastUpdatedFieldNumber;
const int AvailableAppBean::kLatestVersionFieldNumber;
const int AvailableAppBean::kInstallModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvailableAppBean::AvailableAppBean()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.AvailableAppBean)
}

void AvailableAppBean::InitAsDefaultInstance() {
}

AvailableAppBean::AvailableAppBean(const AvailableAppBean& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.AvailableAppBean)
}

void AvailableAppBean::SharedCtor() {
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_logo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  installed_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_updated_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latest_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  install_mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AvailableAppBean::~AvailableAppBean() {
  // @@protoc_insertion_point(destructor:deviceapi.AvailableAppBean)
  SharedDtor();
}

void AvailableAppBean::SharedDtor() {
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_logo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  installed_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_updated_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latest_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  install_mode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AvailableAppBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvailableAppBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AvailableAppBean_descriptor_;
}

const AvailableAppBean& AvailableAppBean::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AvailableAppBean> AvailableAppBean_default_instance_;

AvailableAppBean* AvailableAppBean::New(::google::protobuf::Arena* arena) const {
  AvailableAppBean* n = new AvailableAppBean;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvailableAppBean::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.AvailableAppBean)
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_logo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  installed_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_updated_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latest_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  install_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AvailableAppBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.AvailableAppBean)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_name().data(), this->app_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AvailableAppBean.app_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_app_logo;
        break;
      }

      // optional string app_logo = 2;
      case 2: {
        if (tag == 18) {
         parse_app_logo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_logo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_logo().data(), this->app_logo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AvailableAppBean.app_logo"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_installed_version;
        break;
      }

      // optional string installed_version = 3;
      case 3: {
        if (tag == 26) {
         parse_installed_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_installed_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->installed_version().data(), this->installed_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AvailableAppBean.installed_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_last_updated;
        break;
      }

      // optional string last_updated = 4;
      case 4: {
        if (tag == 34) {
         parse_last_updated:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_updated()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_updated().data(), this->last_updated().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AvailableAppBean.last_updated"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_latest_version;
        break;
      }

      // optional string latest_version = 5;
      case 5: {
        if (tag == 42) {
         parse_latest_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latest_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->latest_version().data(), this->latest_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AvailableAppBean.latest_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_install_mode;
        break;
      }

      // optional string install_mode = 6;
      case 6: {
        if (tag == 50) {
         parse_install_mode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_install_mode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->install_mode().data(), this->install_mode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AvailableAppBean.install_mode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.AvailableAppBean)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.AvailableAppBean)
  return false;
#undef DO_
}

void AvailableAppBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.AvailableAppBean)
  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_name(), output);
  }

  // optional string app_logo = 2;
  if (this->app_logo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_logo().data(), this->app_logo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.app_logo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->app_logo(), output);
  }

  // optional string installed_version = 3;
  if (this->installed_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->installed_version().data(), this->installed_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.installed_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->installed_version(), output);
  }

  // optional string last_updated = 4;
  if (this->last_updated().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_updated().data(), this->last_updated().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.last_updated");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->last_updated(), output);
  }

  // optional string latest_version = 5;
  if (this->latest_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latest_version().data(), this->latest_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.latest_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->latest_version(), output);
  }

  // optional string install_mode = 6;
  if (this->install_mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->install_mode().data(), this->install_mode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.install_mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->install_mode(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.AvailableAppBean)
}

::google::protobuf::uint8* AvailableAppBean::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.AvailableAppBean)
  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_name(), target);
  }

  // optional string app_logo = 2;
  if (this->app_logo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_logo().data(), this->app_logo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.app_logo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->app_logo(), target);
  }

  // optional string installed_version = 3;
  if (this->installed_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->installed_version().data(), this->installed_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.installed_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->installed_version(), target);
  }

  // optional string last_updated = 4;
  if (this->last_updated().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_updated().data(), this->last_updated().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.last_updated");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->last_updated(), target);
  }

  // optional string latest_version = 5;
  if (this->latest_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latest_version().data(), this->latest_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.latest_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->latest_version(), target);
  }

  // optional string install_mode = 6;
  if (this->install_mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->install_mode().data(), this->install_mode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.install_mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->install_mode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.AvailableAppBean)
  return target;
}

size_t AvailableAppBean::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.AvailableAppBean)
  size_t total_size = 0;

  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_name());
  }

  // optional string app_logo = 2;
  if (this->app_logo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_logo());
  }

  // optional string installed_version = 3;
  if (this->installed_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->installed_version());
  }

  // optional string last_updated = 4;
  if (this->last_updated().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_updated());
  }

  // optional string latest_version = 5;
  if (this->latest_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->latest_version());
  }

  // optional string install_mode = 6;
  if (this->install_mode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->install_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvailableAppBean::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.AvailableAppBean)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AvailableAppBean* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvailableAppBean>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.AvailableAppBean)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.AvailableAppBean)
    UnsafeMergeFrom(*source);
  }
}

void AvailableAppBean::MergeFrom(const AvailableAppBean& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.AvailableAppBean)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AvailableAppBean::UnsafeMergeFrom(const AvailableAppBean& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.app_name().size() > 0) {

    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  if (from.app_logo().size() > 0) {

    app_logo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_logo_);
  }
  if (from.installed_version().size() > 0) {

    installed_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.installed_version_);
  }
  if (from.last_updated().size() > 0) {

    last_updated_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_updated_);
  }
  if (from.latest_version().size() > 0) {

    latest_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latest_version_);
  }
  if (from.install_mode().size() > 0) {

    install_mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.install_mode_);
  }
}

void AvailableAppBean::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.AvailableAppBean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvailableAppBean::CopyFrom(const AvailableAppBean& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.AvailableAppBean)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AvailableAppBean::IsInitialized() const {

  return true;
}

void AvailableAppBean::Swap(AvailableAppBean* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvailableAppBean::InternalSwap(AvailableAppBean* other) {
  app_name_.Swap(&other->app_name_);
  app_logo_.Swap(&other->app_logo_);
  installed_version_.Swap(&other->installed_version_);
  last_updated_.Swap(&other->last_updated_);
  latest_version_.Swap(&other->latest_version_);
  install_mode_.Swap(&other->install_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvailableAppBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AvailableAppBean_descriptor_;
  metadata.reflection = AvailableAppBean_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvailableAppBean

// optional string app_name = 1;
void AvailableAppBean::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvailableAppBean::app_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.app_name)
  return app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.app_name)
}
void AvailableAppBean::set_app_name(const char* value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.app_name)
}
void AvailableAppBean::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.app_name)
}
::std::string* AvailableAppBean::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvailableAppBean::release_app_name() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.app_name)
}

// optional string app_logo = 2;
void AvailableAppBean::clear_app_logo() {
  app_logo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvailableAppBean::app_logo() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.app_logo)
  return app_logo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_app_logo(const ::std::string& value) {
  
  app_logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.app_logo)
}
void AvailableAppBean::set_app_logo(const char* value) {
  
  app_logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.app_logo)
}
void AvailableAppBean::set_app_logo(const char* value, size_t size) {
  
  app_logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.app_logo)
}
::std::string* AvailableAppBean::mutable_app_logo() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.app_logo)
  return app_logo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvailableAppBean::release_app_logo() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.app_logo)
  
  return app_logo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_allocated_app_logo(::std::string* app_logo) {
  if (app_logo != NULL) {
    
  } else {
    
  }
  app_logo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_logo);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.app_logo)
}

// optional string installed_version = 3;
void AvailableAppBean::clear_installed_version() {
  installed_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvailableAppBean::installed_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.installed_version)
  return installed_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_installed_version(const ::std::string& value) {
  
  installed_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.installed_version)
}
void AvailableAppBean::set_installed_version(const char* value) {
  
  installed_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.installed_version)
}
void AvailableAppBean::set_installed_version(const char* value, size_t size) {
  
  installed_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.installed_version)
}
::std::string* AvailableAppBean::mutable_installed_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.installed_version)
  return installed_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvailableAppBean::release_installed_version() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.installed_version)
  
  return installed_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_allocated_installed_version(::std::string* installed_version) {
  if (installed_version != NULL) {
    
  } else {
    
  }
  installed_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), installed_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.installed_version)
}

// optional string last_updated = 4;
void AvailableAppBean::clear_last_updated() {
  last_updated_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvailableAppBean::last_updated() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.last_updated)
  return last_updated_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_last_updated(const ::std::string& value) {
  
  last_updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.last_updated)
}
void AvailableAppBean::set_last_updated(const char* value) {
  
  last_updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.last_updated)
}
void AvailableAppBean::set_last_updated(const char* value, size_t size) {
  
  last_updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.last_updated)
}
::std::string* AvailableAppBean::mutable_last_updated() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.last_updated)
  return last_updated_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvailableAppBean::release_last_updated() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.last_updated)
  
  return last_updated_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_allocated_last_updated(::std::string* last_updated) {
  if (last_updated != NULL) {
    
  } else {
    
  }
  last_updated_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_updated);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.last_updated)
}

// optional string latest_version = 5;
void AvailableAppBean::clear_latest_version() {
  latest_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvailableAppBean::latest_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.latest_version)
  return latest_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_latest_version(const ::std::string& value) {
  
  latest_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.latest_version)
}
void AvailableAppBean::set_latest_version(const char* value) {
  
  latest_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.latest_version)
}
void AvailableAppBean::set_latest_version(const char* value, size_t size) {
  
  latest_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.latest_version)
}
::std::string* AvailableAppBean::mutable_latest_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.latest_version)
  return latest_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvailableAppBean::release_latest_version() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.latest_version)
  
  return latest_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_allocated_latest_version(::std::string* latest_version) {
  if (latest_version != NULL) {
    
  } else {
    
  }
  latest_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), latest_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.latest_version)
}

// optional string install_mode = 6;
void AvailableAppBean::clear_install_mode() {
  install_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvailableAppBean::install_mode() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.install_mode)
  return install_mode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_install_mode(const ::std::string& value) {
  
  install_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.install_mode)
}
void AvailableAppBean::set_install_mode(const char* value) {
  
  install_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.install_mode)
}
void AvailableAppBean::set_install_mode(const char* value, size_t size) {
  
  install_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.install_mode)
}
::std::string* AvailableAppBean::mutable_install_mode() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.install_mode)
  return install_mode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvailableAppBean::release_install_mode() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.install_mode)
  
  return install_mode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_allocated_install_mode(::std::string* install_mode) {
  if (install_mode != NULL) {
    
  } else {
    
  }
  install_mode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), install_mode);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.install_mode)
}

inline const AvailableAppBean* AvailableAppBean::internal_default_instance() {
  return &AvailableAppBean_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindCheckReq::kFilePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindCheckReq::BindCheckReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.BindCheckReq)
}

void BindCheckReq::InitAsDefaultInstance() {
}

BindCheckReq::BindCheckReq(const BindCheckReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.BindCheckReq)
}

void BindCheckReq::SharedCtor() {
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BindCheckReq::~BindCheckReq() {
  // @@protoc_insertion_point(destructor:deviceapi.BindCheckReq)
  SharedDtor();
}

void BindCheckReq::SharedDtor() {
  file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindCheckReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindCheckReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindCheckReq_descriptor_;
}

const BindCheckReq& BindCheckReq::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BindCheckReq> BindCheckReq_default_instance_;

BindCheckReq* BindCheckReq::New(::google::protobuf::Arena* arena) const {
  BindCheckReq* n = new BindCheckReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindCheckReq::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.BindCheckReq)
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BindCheckReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.BindCheckReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string file_path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_path().data(), this->file_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.BindCheckReq.file_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.BindCheckReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.BindCheckReq)
  return false;
#undef DO_
}

void BindCheckReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.BindCheckReq)
  // optional string file_path = 1;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), this->file_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindCheckReq.file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_path(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.BindCheckReq)
}

::google::protobuf::uint8* BindCheckReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.BindCheckReq)
  // optional string file_path = 1;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), this->file_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindCheckReq.file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.BindCheckReq)
  return target;
}

size_t BindCheckReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.BindCheckReq)
  size_t total_size = 0;

  // optional string file_path = 1;
  if (this->file_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindCheckReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.BindCheckReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BindCheckReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindCheckReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.BindCheckReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.BindCheckReq)
    UnsafeMergeFrom(*source);
  }
}

void BindCheckReq::MergeFrom(const BindCheckReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.BindCheckReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BindCheckReq::UnsafeMergeFrom(const BindCheckReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.file_path().size() > 0) {

    file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
}

void BindCheckReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.BindCheckReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindCheckReq::CopyFrom(const BindCheckReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.BindCheckReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BindCheckReq::IsInitialized() const {

  return true;
}

void BindCheckReq::Swap(BindCheckReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindCheckReq::InternalSwap(BindCheckReq* other) {
  file_path_.Swap(&other->file_path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindCheckReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindCheckReq_descriptor_;
  metadata.reflection = BindCheckReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindCheckReq

// optional string file_path = 1;
void BindCheckReq::clear_file_path() {
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindCheckReq::file_path() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindCheckReq.file_path)
  return file_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindCheckReq::set_file_path(const ::std::string& value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindCheckReq.file_path)
}
void BindCheckReq::set_file_path(const char* value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindCheckReq.file_path)
}
void BindCheckReq::set_file_path(const char* value, size_t size) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindCheckReq.file_path)
}
::std::string* BindCheckReq::mutable_file_path() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindCheckReq.file_path)
  return file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindCheckReq::release_file_path() {
  // @@protoc_insertion_point(field_release:deviceapi.BindCheckReq.file_path)
  
  return file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindCheckReq::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    
  } else {
    
  }
  file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindCheckReq.file_path)
}

inline const BindCheckReq* BindCheckReq::internal_default_instance() {
  return &BindCheckReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindCheckRes::kBindStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindCheckRes::BindCheckRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.BindCheckRes)
}

void BindCheckRes::InitAsDefaultInstance() {
}

BindCheckRes::BindCheckRes(const BindCheckRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.BindCheckRes)
}

void BindCheckRes::SharedCtor() {
  bind_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BindCheckRes::~BindCheckRes() {
  // @@protoc_insertion_point(destructor:deviceapi.BindCheckRes)
  SharedDtor();
}

void BindCheckRes::SharedDtor() {
  bind_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindCheckRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindCheckRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindCheckRes_descriptor_;
}

const BindCheckRes& BindCheckRes::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BindCheckRes> BindCheckRes_default_instance_;

BindCheckRes* BindCheckRes::New(::google::protobuf::Arena* arena) const {
  BindCheckRes* n = new BindCheckRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindCheckRes::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.BindCheckRes)
  bind_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BindCheckRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.BindCheckRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bind_status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bind_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bind_status().data(), this->bind_status().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.BindCheckRes.bind_status"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.BindCheckRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.BindCheckRes)
  return false;
#undef DO_
}

void BindCheckRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.BindCheckRes)
  // optional string bind_status = 1;
  if (this->bind_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_status().data(), this->bind_status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindCheckRes.bind_status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bind_status(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.BindCheckRes)
}

::google::protobuf::uint8* BindCheckRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.BindCheckRes)
  // optional string bind_status = 1;
  if (this->bind_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_status().data(), this->bind_status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindCheckRes.bind_status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bind_status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.BindCheckRes)
  return target;
}

size_t BindCheckRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.BindCheckRes)
  size_t total_size = 0;

  // optional string bind_status = 1;
  if (this->bind_status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bind_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindCheckRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.BindCheckRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BindCheckRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindCheckRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.BindCheckRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.BindCheckRes)
    UnsafeMergeFrom(*source);
  }
}

void BindCheckRes::MergeFrom(const BindCheckRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.BindCheckRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BindCheckRes::UnsafeMergeFrom(const BindCheckRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.bind_status().size() > 0) {

    bind_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bind_status_);
  }
}

void BindCheckRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.BindCheckRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindCheckRes::CopyFrom(const BindCheckRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.BindCheckRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BindCheckRes::IsInitialized() const {

  return true;
}

void BindCheckRes::Swap(BindCheckRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindCheckRes::InternalSwap(BindCheckRes* other) {
  bind_status_.Swap(&other->bind_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindCheckRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindCheckRes_descriptor_;
  metadata.reflection = BindCheckRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindCheckRes

// optional string bind_status = 1;
void BindCheckRes::clear_bind_status() {
  bind_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindCheckRes::bind_status() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindCheckRes.bind_status)
  return bind_status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindCheckRes::set_bind_status(const ::std::string& value) {
  
  bind_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindCheckRes.bind_status)
}
void BindCheckRes::set_bind_status(const char* value) {
  
  bind_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindCheckRes.bind_status)
}
void BindCheckRes::set_bind_status(const char* value, size_t size) {
  
  bind_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindCheckRes.bind_status)
}
::std::string* BindCheckRes::mutable_bind_status() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindCheckRes.bind_status)
  return bind_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindCheckRes::release_bind_status() {
  // @@protoc_insertion_point(field_release:deviceapi.BindCheckRes.bind_status)
  
  return bind_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindCheckRes::set_allocated_bind_status(::std::string* bind_status) {
  if (bind_status != NULL) {
    
  } else {
    
  }
  bind_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bind_status);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindCheckRes.bind_status)
}

inline const BindCheckRes* BindCheckRes::internal_default_instance() {
  return &BindCheckRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindAcquireReq::kBindCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindAcquireReq::BindAcquireReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.BindAcquireReq)
}

void BindAcquireReq::InitAsDefaultInstance() {
}

BindAcquireReq::BindAcquireReq(const BindAcquireReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.BindAcquireReq)
}

void BindAcquireReq::SharedCtor() {
  bind_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BindAcquireReq::~BindAcquireReq() {
  // @@protoc_insertion_point(destructor:deviceapi.BindAcquireReq)
  SharedDtor();
}

void BindAcquireReq::SharedDtor() {
  bind_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindAcquireReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindAcquireReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindAcquireReq_descriptor_;
}

const BindAcquireReq& BindAcquireReq::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BindAcquireReq> BindAcquireReq_default_instance_;

BindAcquireReq* BindAcquireReq::New(::google::protobuf::Arena* arena) const {
  BindAcquireReq* n = new BindAcquireReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindAcquireReq::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.BindAcquireReq)
  bind_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BindAcquireReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.BindAcquireReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bind_code = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bind_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bind_code().data(), this->bind_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.BindAcquireReq.bind_code"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.BindAcquireReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.BindAcquireReq)
  return false;
#undef DO_
}

void BindAcquireReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.BindAcquireReq)
  // optional string bind_code = 1;
  if (this->bind_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_code().data(), this->bind_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindAcquireReq.bind_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bind_code(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.BindAcquireReq)
}

::google::protobuf::uint8* BindAcquireReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.BindAcquireReq)
  // optional string bind_code = 1;
  if (this->bind_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_code().data(), this->bind_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindAcquireReq.bind_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bind_code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.BindAcquireReq)
  return target;
}

size_t BindAcquireReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.BindAcquireReq)
  size_t total_size = 0;

  // optional string bind_code = 1;
  if (this->bind_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bind_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindAcquireReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.BindAcquireReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BindAcquireReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindAcquireReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.BindAcquireReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.BindAcquireReq)
    UnsafeMergeFrom(*source);
  }
}

void BindAcquireReq::MergeFrom(const BindAcquireReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.BindAcquireReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BindAcquireReq::UnsafeMergeFrom(const BindAcquireReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.bind_code().size() > 0) {

    bind_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bind_code_);
  }
}

void BindAcquireReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.BindAcquireReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindAcquireReq::CopyFrom(const BindAcquireReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.BindAcquireReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BindAcquireReq::IsInitialized() const {

  return true;
}

void BindAcquireReq::Swap(BindAcquireReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindAcquireReq::InternalSwap(BindAcquireReq* other) {
  bind_code_.Swap(&other->bind_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindAcquireReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindAcquireReq_descriptor_;
  metadata.reflection = BindAcquireReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindAcquireReq

// optional string bind_code = 1;
void BindAcquireReq::clear_bind_code() {
  bind_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindAcquireReq::bind_code() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindAcquireReq.bind_code)
  return bind_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindAcquireReq::set_bind_code(const ::std::string& value) {
  
  bind_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindAcquireReq.bind_code)
}
void BindAcquireReq::set_bind_code(const char* value) {
  
  bind_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindAcquireReq.bind_code)
}
void BindAcquireReq::set_bind_code(const char* value, size_t size) {
  
  bind_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindAcquireReq.bind_code)
}
::std::string* BindAcquireReq::mutable_bind_code() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindAcquireReq.bind_code)
  return bind_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindAcquireReq::release_bind_code() {
  // @@protoc_insertion_point(field_release:deviceapi.BindAcquireReq.bind_code)
  
  return bind_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindAcquireReq::set_allocated_bind_code(::std::string* bind_code) {
  if (bind_code != NULL) {
    
  } else {
    
  }
  bind_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bind_code);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindAcquireReq.bind_code)
}

inline const BindAcquireReq* BindAcquireReq::internal_default_instance() {
  return &BindAcquireReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindAcquireRes::kBindResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindAcquireRes::BindAcquireRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.BindAcquireRes)
}

void BindAcquireRes::InitAsDefaultInstance() {
}

BindAcquireRes::BindAcquireRes(const BindAcquireRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.BindAcquireRes)
}

void BindAcquireRes::SharedCtor() {
  bind_result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BindAcquireRes::~BindAcquireRes() {
  // @@protoc_insertion_point(destructor:deviceapi.BindAcquireRes)
  SharedDtor();
}

void BindAcquireRes::SharedDtor() {
  bind_result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindAcquireRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindAcquireRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindAcquireRes_descriptor_;
}

const BindAcquireRes& BindAcquireRes::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BindAcquireRes> BindAcquireRes_default_instance_;

BindAcquireRes* BindAcquireRes::New(::google::protobuf::Arena* arena) const {
  BindAcquireRes* n = new BindAcquireRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindAcquireRes::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.BindAcquireRes)
  bind_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BindAcquireRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.BindAcquireRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bind_result = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bind_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bind_result().data(), this->bind_result().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.BindAcquireRes.bind_result"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.BindAcquireRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.BindAcquireRes)
  return false;
#undef DO_
}

void BindAcquireRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.BindAcquireRes)
  // optional string bind_result = 1;
  if (this->bind_result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_result().data(), this->bind_result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindAcquireRes.bind_result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bind_result(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.BindAcquireRes)
}

::google::protobuf::uint8* BindAcquireRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.BindAcquireRes)
  // optional string bind_result = 1;
  if (this->bind_result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_result().data(), this->bind_result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindAcquireRes.bind_result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bind_result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.BindAcquireRes)
  return target;
}

size_t BindAcquireRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.BindAcquireRes)
  size_t total_size = 0;

  // optional string bind_result = 1;
  if (this->bind_result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bind_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindAcquireRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.BindAcquireRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BindAcquireRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindAcquireRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.BindAcquireRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.BindAcquireRes)
    UnsafeMergeFrom(*source);
  }
}

void BindAcquireRes::MergeFrom(const BindAcquireRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.BindAcquireRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BindAcquireRes::UnsafeMergeFrom(const BindAcquireRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.bind_result().size() > 0) {

    bind_result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bind_result_);
  }
}

void BindAcquireRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.BindAcquireRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindAcquireRes::CopyFrom(const BindAcquireRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.BindAcquireRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BindAcquireRes::IsInitialized() const {

  return true;
}

void BindAcquireRes::Swap(BindAcquireRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindAcquireRes::InternalSwap(BindAcquireRes* other) {
  bind_result_.Swap(&other->bind_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindAcquireRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindAcquireRes_descriptor_;
  metadata.reflection = BindAcquireRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindAcquireRes

// optional string bind_result = 1;
void BindAcquireRes::clear_bind_result() {
  bind_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindAcquireRes::bind_result() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindAcquireRes.bind_result)
  return bind_result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindAcquireRes::set_bind_result(const ::std::string& value) {
  
  bind_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindAcquireRes.bind_result)
}
void BindAcquireRes::set_bind_result(const char* value) {
  
  bind_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindAcquireRes.bind_result)
}
void BindAcquireRes::set_bind_result(const char* value, size_t size) {
  
  bind_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindAcquireRes.bind_result)
}
::std::string* BindAcquireRes::mutable_bind_result() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindAcquireRes.bind_result)
  return bind_result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindAcquireRes::release_bind_result() {
  // @@protoc_insertion_point(field_release:deviceapi.BindAcquireRes.bind_result)
  
  return bind_result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindAcquireRes::set_allocated_bind_result(::std::string* bind_result) {
  if (bind_result != NULL) {
    
  } else {
    
  }
  bind_result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bind_result);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindAcquireRes.bind_result)
}

inline const BindAcquireRes* BindAcquireRes::internal_default_instance() {
  return &BindAcquireRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSeidRes::kSeidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSeidRes::GetSeidRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.GetSeidRes)
}

void GetSeidRes::InitAsDefaultInstance() {
}

GetSeidRes::GetSeidRes(const GetSeidRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.GetSeidRes)
}

void GetSeidRes::SharedCtor() {
  seid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetSeidRes::~GetSeidRes() {
  // @@protoc_insertion_point(destructor:deviceapi.GetSeidRes)
  SharedDtor();
}

void GetSeidRes::SharedDtor() {
  seid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetSeidRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSeidRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSeidRes_descriptor_;
}

const GetSeidRes& GetSeidRes::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetSeidRes> GetSeidRes_default_instance_;

GetSeidRes* GetSeidRes::New(::google::protobuf::Arena* arena) const {
  GetSeidRes* n = new GetSeidRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSeidRes::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.GetSeidRes)
  seid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetSeidRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.GetSeidRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string seid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_seid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->seid().data(), this->seid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.GetSeidRes.seid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.GetSeidRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.GetSeidRes)
  return false;
#undef DO_
}

void GetSeidRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.GetSeidRes)
  // optional string seid = 1;
  if (this->seid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seid().data(), this->seid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetSeidRes.seid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->seid(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.GetSeidRes)
}

::google::protobuf::uint8* GetSeidRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.GetSeidRes)
  // optional string seid = 1;
  if (this->seid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seid().data(), this->seid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetSeidRes.seid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->seid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.GetSeidRes)
  return target;
}

size_t GetSeidRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.GetSeidRes)
  size_t total_size = 0;

  // optional string seid = 1;
  if (this->seid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->seid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSeidRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.GetSeidRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetSeidRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSeidRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.GetSeidRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.GetSeidRes)
    UnsafeMergeFrom(*source);
  }
}

void GetSeidRes::MergeFrom(const GetSeidRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.GetSeidRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetSeidRes::UnsafeMergeFrom(const GetSeidRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.seid().size() > 0) {

    seid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seid_);
  }
}

void GetSeidRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.GetSeidRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSeidRes::CopyFrom(const GetSeidRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.GetSeidRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetSeidRes::IsInitialized() const {

  return true;
}

void GetSeidRes::Swap(GetSeidRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSeidRes::InternalSwap(GetSeidRes* other) {
  seid_.Swap(&other->seid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSeidRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSeidRes_descriptor_;
  metadata.reflection = GetSeidRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSeidRes

// optional string seid = 1;
void GetSeidRes::clear_seid() {
  seid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetSeidRes::seid() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetSeidRes.seid)
  return seid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSeidRes::set_seid(const ::std::string& value) {
  
  seid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetSeidRes.seid)
}
void GetSeidRes::set_seid(const char* value) {
  
  seid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetSeidRes.seid)
}
void GetSeidRes::set_seid(const char* value, size_t size) {
  
  seid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetSeidRes.seid)
}
::std::string* GetSeidRes::mutable_seid() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetSeidRes.seid)
  return seid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetSeidRes::release_seid() {
  // @@protoc_insertion_point(field_release:deviceapi.GetSeidRes.seid)
  
  return seid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSeidRes::set_allocated_seid(::std::string* seid) {
  if (seid != NULL) {
    
  } else {
    
  }
  seid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seid);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetSeidRes.seid)
}

inline const GetSeidRes* GetSeidRes::internal_default_instance() {
  return &GetSeidRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSnRes::kSnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSnRes::GetSnRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.GetSnRes)
}

void GetSnRes::InitAsDefaultInstance() {
}

GetSnRes::GetSnRes(const GetSnRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.GetSnRes)
}

void GetSnRes::SharedCtor() {
  sn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetSnRes::~GetSnRes() {
  // @@protoc_insertion_point(destructor:deviceapi.GetSnRes)
  SharedDtor();
}

void GetSnRes::SharedDtor() {
  sn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetSnRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSnRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSnRes_descriptor_;
}

const GetSnRes& GetSnRes::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetSnRes> GetSnRes_default_instance_;

GetSnRes* GetSnRes::New(::google::protobuf::Arena* arena) const {
  GetSnRes* n = new GetSnRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSnRes::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.GetSnRes)
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetSnRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.GetSnRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sn = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sn().data(), this->sn().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.GetSnRes.sn"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.GetSnRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.GetSnRes)
  return false;
#undef DO_
}

void GetSnRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.GetSnRes)
  // optional string sn = 1;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetSnRes.sn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sn(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.GetSnRes)
}

::google::protobuf::uint8* GetSnRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.GetSnRes)
  // optional string sn = 1;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetSnRes.sn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sn(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.GetSnRes)
  return target;
}

size_t GetSnRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.GetSnRes)
  size_t total_size = 0;

  // optional string sn = 1;
  if (this->sn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sn());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSnRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.GetSnRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetSnRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSnRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.GetSnRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.GetSnRes)
    UnsafeMergeFrom(*source);
  }
}

void GetSnRes::MergeFrom(const GetSnRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.GetSnRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetSnRes::UnsafeMergeFrom(const GetSnRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.sn().size() > 0) {

    sn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sn_);
  }
}

void GetSnRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.GetSnRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSnRes::CopyFrom(const GetSnRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.GetSnRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetSnRes::IsInitialized() const {

  return true;
}

void GetSnRes::Swap(GetSnRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSnRes::InternalSwap(GetSnRes* other) {
  sn_.Swap(&other->sn_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSnRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSnRes_descriptor_;
  metadata.reflection = GetSnRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSnRes

// optional string sn = 1;
void GetSnRes::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetSnRes::sn() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetSnRes.sn)
  return sn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSnRes::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetSnRes.sn)
}
void GetSnRes::set_sn(const char* value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetSnRes.sn)
}
void GetSnRes::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetSnRes.sn)
}
::std::string* GetSnRes::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetSnRes.sn)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetSnRes::release_sn() {
  // @@protoc_insertion_point(field_release:deviceapi.GetSnRes.sn)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSnRes::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetSnRes.sn)
}

inline const GetSnRes* GetSnRes::internal_default_instance() {
  return &GetSnRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRamSizeRes::kRamSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRamSizeRes::GetRamSizeRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.GetRamSizeRes)
}

void GetRamSizeRes::InitAsDefaultInstance() {
}

GetRamSizeRes::GetRamSizeRes(const GetRamSizeRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.GetRamSizeRes)
}

void GetRamSizeRes::SharedCtor() {
  ram_size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetRamSizeRes::~GetRamSizeRes() {
  // @@protoc_insertion_point(destructor:deviceapi.GetRamSizeRes)
  SharedDtor();
}

void GetRamSizeRes::SharedDtor() {
  ram_size_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRamSizeRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRamSizeRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRamSizeRes_descriptor_;
}

const GetRamSizeRes& GetRamSizeRes::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetRamSizeRes> GetRamSizeRes_default_instance_;

GetRamSizeRes* GetRamSizeRes::New(::google::protobuf::Arena* arena) const {
  GetRamSizeRes* n = new GetRamSizeRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRamSizeRes::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.GetRamSizeRes)
  ram_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetRamSizeRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.GetRamSizeRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ram_size = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ram_size()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ram_size().data(), this->ram_size().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.GetRamSizeRes.ram_size"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.GetRamSizeRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.GetRamSizeRes)
  return false;
#undef DO_
}

void GetRamSizeRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.GetRamSizeRes)
  // optional string ram_size = 1;
  if (this->ram_size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram_size().data(), this->ram_size().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetRamSizeRes.ram_size");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ram_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.GetRamSizeRes)
}

::google::protobuf::uint8* GetRamSizeRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.GetRamSizeRes)
  // optional string ram_size = 1;
  if (this->ram_size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram_size().data(), this->ram_size().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetRamSizeRes.ram_size");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ram_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.GetRamSizeRes)
  return target;
}

size_t GetRamSizeRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.GetRamSizeRes)
  size_t total_size = 0;

  // optional string ram_size = 1;
  if (this->ram_size().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ram_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRamSizeRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.GetRamSizeRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetRamSizeRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRamSizeRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.GetRamSizeRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.GetRamSizeRes)
    UnsafeMergeFrom(*source);
  }
}

void GetRamSizeRes::MergeFrom(const GetRamSizeRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.GetRamSizeRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetRamSizeRes::UnsafeMergeFrom(const GetRamSizeRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.ram_size().size() > 0) {

    ram_size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_size_);
  }
}

void GetRamSizeRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.GetRamSizeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRamSizeRes::CopyFrom(const GetRamSizeRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.GetRamSizeRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetRamSizeRes::IsInitialized() const {

  return true;
}

void GetRamSizeRes::Swap(GetRamSizeRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRamSizeRes::InternalSwap(GetRamSizeRes* other) {
  ram_size_.Swap(&other->ram_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRamSizeRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRamSizeRes_descriptor_;
  metadata.reflection = GetRamSizeRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRamSizeRes

// optional string ram_size = 1;
void GetRamSizeRes::clear_ram_size() {
  ram_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetRamSizeRes::ram_size() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetRamSizeRes.ram_size)
  return ram_size_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRamSizeRes::set_ram_size(const ::std::string& value) {
  
  ram_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetRamSizeRes.ram_size)
}
void GetRamSizeRes::set_ram_size(const char* value) {
  
  ram_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetRamSizeRes.ram_size)
}
void GetRamSizeRes::set_ram_size(const char* value, size_t size) {
  
  ram_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetRamSizeRes.ram_size)
}
::std::string* GetRamSizeRes::mutable_ram_size() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetRamSizeRes.ram_size)
  return ram_size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetRamSizeRes::release_ram_size() {
  // @@protoc_insertion_point(field_release:deviceapi.GetRamSizeRes.ram_size)
  
  return ram_size_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRamSizeRes::set_allocated_ram_size(::std::string* ram_size) {
  if (ram_size != NULL) {
    
  } else {
    
  }
  ram_size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ram_size);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetRamSizeRes.ram_size)
}

inline const GetRamSizeRes* GetRamSizeRes::internal_default_instance() {
  return &GetRamSizeRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFirmwareVersionRes::kFirmwareVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFirmwareVersionRes::GetFirmwareVersionRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.GetFirmwareVersionRes)
}

void GetFirmwareVersionRes::InitAsDefaultInstance() {
}

GetFirmwareVersionRes::GetFirmwareVersionRes(const GetFirmwareVersionRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.GetFirmwareVersionRes)
}

void GetFirmwareVersionRes::SharedCtor() {
  firmware_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetFirmwareVersionRes::~GetFirmwareVersionRes() {
  // @@protoc_insertion_point(destructor:deviceapi.GetFirmwareVersionRes)
  SharedDtor();
}

void GetFirmwareVersionRes::SharedDtor() {
  firmware_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFirmwareVersionRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFirmwareVersionRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFirmwareVersionRes_descriptor_;
}

const GetFirmwareVersionRes& GetFirmwareVersionRes::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetFirmwareVersionRes> GetFirmwareVersionRes_default_instance_;

GetFirmwareVersionRes* GetFirmwareVersionRes::New(::google::protobuf::Arena* arena) const {
  GetFirmwareVersionRes* n = new GetFirmwareVersionRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFirmwareVersionRes::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.GetFirmwareVersionRes)
  firmware_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetFirmwareVersionRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.GetFirmwareVersionRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string firmware_version = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firmware_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->firmware_version().data(), this->firmware_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.GetFirmwareVersionRes.firmware_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.GetFirmwareVersionRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.GetFirmwareVersionRes)
  return false;
#undef DO_
}

void GetFirmwareVersionRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.GetFirmwareVersionRes)
  // optional string firmware_version = 1;
  if (this->firmware_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firmware_version().data(), this->firmware_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetFirmwareVersionRes.firmware_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->firmware_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.GetFirmwareVersionRes)
}

::google::protobuf::uint8* GetFirmwareVersionRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.GetFirmwareVersionRes)
  // optional string firmware_version = 1;
  if (this->firmware_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firmware_version().data(), this->firmware_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetFirmwareVersionRes.firmware_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->firmware_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.GetFirmwareVersionRes)
  return target;
}

size_t GetFirmwareVersionRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.GetFirmwareVersionRes)
  size_t total_size = 0;

  // optional string firmware_version = 1;
  if (this->firmware_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->firmware_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFirmwareVersionRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.GetFirmwareVersionRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetFirmwareVersionRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFirmwareVersionRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.GetFirmwareVersionRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.GetFirmwareVersionRes)
    UnsafeMergeFrom(*source);
  }
}

void GetFirmwareVersionRes::MergeFrom(const GetFirmwareVersionRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.GetFirmwareVersionRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetFirmwareVersionRes::UnsafeMergeFrom(const GetFirmwareVersionRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.firmware_version().size() > 0) {

    firmware_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firmware_version_);
  }
}

void GetFirmwareVersionRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.GetFirmwareVersionRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFirmwareVersionRes::CopyFrom(const GetFirmwareVersionRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.GetFirmwareVersionRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetFirmwareVersionRes::IsInitialized() const {

  return true;
}

void GetFirmwareVersionRes::Swap(GetFirmwareVersionRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFirmwareVersionRes::InternalSwap(GetFirmwareVersionRes* other) {
  firmware_version_.Swap(&other->firmware_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFirmwareVersionRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFirmwareVersionRes_descriptor_;
  metadata.reflection = GetFirmwareVersionRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFirmwareVersionRes

// optional string firmware_version = 1;
void GetFirmwareVersionRes::clear_firmware_version() {
  firmware_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetFirmwareVersionRes::firmware_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetFirmwareVersionRes.firmware_version)
  return firmware_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetFirmwareVersionRes::set_firmware_version(const ::std::string& value) {
  
  firmware_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetFirmwareVersionRes.firmware_version)
}
void GetFirmwareVersionRes::set_firmware_version(const char* value) {
  
  firmware_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetFirmwareVersionRes.firmware_version)
}
void GetFirmwareVersionRes::set_firmware_version(const char* value, size_t size) {
  
  firmware_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetFirmwareVersionRes.firmware_version)
}
::std::string* GetFirmwareVersionRes::mutable_firmware_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetFirmwareVersionRes.firmware_version)
  return firmware_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetFirmwareVersionRes::release_firmware_version() {
  // @@protoc_insertion_point(field_release:deviceapi.GetFirmwareVersionRes.firmware_version)
  
  return firmware_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetFirmwareVersionRes::set_allocated_firmware_version(::std::string* firmware_version) {
  if (firmware_version != NULL) {
    
  } else {
    
  }
  firmware_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firmware_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetFirmwareVersionRes.firmware_version)
}

inline const GetFirmwareVersionRes* GetFirmwareVersionRes::internal_default_instance() {
  return &GetFirmwareVersionRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBatteryPowerRes::kBatteryPowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBatteryPowerRes::GetBatteryPowerRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.GetBatteryPowerRes)
}

void GetBatteryPowerRes::InitAsDefaultInstance() {
}

GetBatteryPowerRes::GetBatteryPowerRes(const GetBatteryPowerRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.GetBatteryPowerRes)
}

void GetBatteryPowerRes::SharedCtor() {
  battery_power_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetBatteryPowerRes::~GetBatteryPowerRes() {
  // @@protoc_insertion_point(destructor:deviceapi.GetBatteryPowerRes)
  SharedDtor();
}

void GetBatteryPowerRes::SharedDtor() {
  battery_power_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBatteryPowerRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBatteryPowerRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBatteryPowerRes_descriptor_;
}

const GetBatteryPowerRes& GetBatteryPowerRes::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetBatteryPowerRes> GetBatteryPowerRes_default_instance_;

GetBatteryPowerRes* GetBatteryPowerRes::New(::google::protobuf::Arena* arena) const {
  GetBatteryPowerRes* n = new GetBatteryPowerRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBatteryPowerRes::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.GetBatteryPowerRes)
  battery_power_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetBatteryPowerRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.GetBatteryPowerRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string battery_power = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_battery_power()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->battery_power().data(), this->battery_power().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.GetBatteryPowerRes.battery_power"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.GetBatteryPowerRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.GetBatteryPowerRes)
  return false;
#undef DO_
}

void GetBatteryPowerRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.GetBatteryPowerRes)
  // optional string battery_power = 1;
  if (this->battery_power().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->battery_power().data(), this->battery_power().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetBatteryPowerRes.battery_power");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->battery_power(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.GetBatteryPowerRes)
}

::google::protobuf::uint8* GetBatteryPowerRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.GetBatteryPowerRes)
  // optional string battery_power = 1;
  if (this->battery_power().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->battery_power().data(), this->battery_power().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetBatteryPowerRes.battery_power");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->battery_power(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.GetBatteryPowerRes)
  return target;
}

size_t GetBatteryPowerRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.GetBatteryPowerRes)
  size_t total_size = 0;

  // optional string battery_power = 1;
  if (this->battery_power().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->battery_power());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBatteryPowerRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.GetBatteryPowerRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetBatteryPowerRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBatteryPowerRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.GetBatteryPowerRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.GetBatteryPowerRes)
    UnsafeMergeFrom(*source);
  }
}

void GetBatteryPowerRes::MergeFrom(const GetBatteryPowerRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.GetBatteryPowerRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetBatteryPowerRes::UnsafeMergeFrom(const GetBatteryPowerRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.battery_power().size() > 0) {

    battery_power_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.battery_power_);
  }
}

void GetBatteryPowerRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.GetBatteryPowerRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBatteryPowerRes::CopyFrom(const GetBatteryPowerRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.GetBatteryPowerRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetBatteryPowerRes::IsInitialized() const {

  return true;
}

void GetBatteryPowerRes::Swap(GetBatteryPowerRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBatteryPowerRes::InternalSwap(GetBatteryPowerRes* other) {
  battery_power_.Swap(&other->battery_power_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBatteryPowerRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBatteryPowerRes_descriptor_;
  metadata.reflection = GetBatteryPowerRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBatteryPowerRes

// optional string battery_power = 1;
void GetBatteryPowerRes::clear_battery_power() {
  battery_power_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetBatteryPowerRes::battery_power() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetBatteryPowerRes.battery_power)
  return battery_power_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBatteryPowerRes::set_battery_power(const ::std::string& value) {
  
  battery_power_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetBatteryPowerRes.battery_power)
}
void GetBatteryPowerRes::set_battery_power(const char* value) {
  
  battery_power_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetBatteryPowerRes.battery_power)
}
void GetBatteryPowerRes::set_battery_power(const char* value, size_t size) {
  
  battery_power_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetBatteryPowerRes.battery_power)
}
::std::string* GetBatteryPowerRes::mutable_battery_power() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetBatteryPowerRes.battery_power)
  return battery_power_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBatteryPowerRes::release_battery_power() {
  // @@protoc_insertion_point(field_release:deviceapi.GetBatteryPowerRes.battery_power)
  
  return battery_power_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBatteryPowerRes::set_allocated_battery_power(::std::string* battery_power) {
  if (battery_power != NULL) {
    
  } else {
    
  }
  battery_power_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), battery_power);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetBatteryPowerRes.battery_power)
}

inline const GetBatteryPowerRes* GetBatteryPowerRes::internal_default_instance() {
  return &GetBatteryPowerRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLifeTimeRes::kLifeTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLifeTimeRes::GetLifeTimeRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.GetLifeTimeRes)
}

void GetLifeTimeRes::InitAsDefaultInstance() {
}

GetLifeTimeRes::GetLifeTimeRes(const GetLifeTimeRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.GetLifeTimeRes)
}

void GetLifeTimeRes::SharedCtor() {
  life_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetLifeTimeRes::~GetLifeTimeRes() {
  // @@protoc_insertion_point(destructor:deviceapi.GetLifeTimeRes)
  SharedDtor();
}

void GetLifeTimeRes::SharedDtor() {
  life_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetLifeTimeRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLifeTimeRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLifeTimeRes_descriptor_;
}

const GetLifeTimeRes& GetLifeTimeRes::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetLifeTimeRes> GetLifeTimeRes_default_instance_;

GetLifeTimeRes* GetLifeTimeRes::New(::google::protobuf::Arena* arena) const {
  GetLifeTimeRes* n = new GetLifeTimeRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLifeTimeRes::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.GetLifeTimeRes)
  life_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetLifeTimeRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.GetLifeTimeRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string life_time = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_life_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->life_time().data(), this->life_time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.GetLifeTimeRes.life_time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.GetLifeTimeRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.GetLifeTimeRes)
  return false;
#undef DO_
}

void GetLifeTimeRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.GetLifeTimeRes)
  // optional string life_time = 1;
  if (this->life_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->life_time().data(), this->life_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetLifeTimeRes.life_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->life_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.GetLifeTimeRes)
}

::google::protobuf::uint8* GetLifeTimeRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.GetLifeTimeRes)
  // optional string life_time = 1;
  if (this->life_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->life_time().data(), this->life_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetLifeTimeRes.life_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->life_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.GetLifeTimeRes)
  return target;
}

size_t GetLifeTimeRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.GetLifeTimeRes)
  size_t total_size = 0;

  // optional string life_time = 1;
  if (this->life_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->life_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLifeTimeRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.GetLifeTimeRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetLifeTimeRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLifeTimeRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.GetLifeTimeRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.GetLifeTimeRes)
    UnsafeMergeFrom(*source);
  }
}

void GetLifeTimeRes::MergeFrom(const GetLifeTimeRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.GetLifeTimeRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetLifeTimeRes::UnsafeMergeFrom(const GetLifeTimeRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.life_time().size() > 0) {

    life_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.life_time_);
  }
}

void GetLifeTimeRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.GetLifeTimeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLifeTimeRes::CopyFrom(const GetLifeTimeRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.GetLifeTimeRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetLifeTimeRes::IsInitialized() const {

  return true;
}

void GetLifeTimeRes::Swap(GetLifeTimeRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLifeTimeRes::InternalSwap(GetLifeTimeRes* other) {
  life_time_.Swap(&other->life_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLifeTimeRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLifeTimeRes_descriptor_;
  metadata.reflection = GetLifeTimeRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLifeTimeRes

// optional string life_time = 1;
void GetLifeTimeRes::clear_life_time() {
  life_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetLifeTimeRes::life_time() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetLifeTimeRes.life_time)
  return life_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetLifeTimeRes::set_life_time(const ::std::string& value) {
  
  life_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetLifeTimeRes.life_time)
}
void GetLifeTimeRes::set_life_time(const char* value) {
  
  life_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetLifeTimeRes.life_time)
}
void GetLifeTimeRes::set_life_time(const char* value, size_t size) {
  
  life_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetLifeTimeRes.life_time)
}
::std::string* GetLifeTimeRes::mutable_life_time() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetLifeTimeRes.life_time)
  return life_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetLifeTimeRes::release_life_time() {
  // @@protoc_insertion_point(field_release:deviceapi.GetLifeTimeRes.life_time)
  
  return life_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetLifeTimeRes::set_allocated_life_time(::std::string* life_time) {
  if (life_time != NULL) {
    
  } else {
    
  }
  life_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), life_time);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetLifeTimeRes.life_time)
}

inline const GetLifeTimeRes* GetLifeTimeRes::internal_default_instance() {
  return &GetLifeTimeRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBleNameRes::kBleNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBleNameRes::GetBleNameRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.GetBleNameRes)
}

void GetBleNameRes::InitAsDefaultInstance() {
}

GetBleNameRes::GetBleNameRes(const GetBleNameRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.GetBleNameRes)
}

void GetBleNameRes::SharedCtor() {
  ble_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetBleNameRes::~GetBleNameRes() {
  // @@protoc_insertion_point(destructor:deviceapi.GetBleNameRes)
  SharedDtor();
}

void GetBleNameRes::SharedDtor() {
  ble_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBleNameRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBleNameRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBleNameRes_descriptor_;
}

const GetBleNameRes& GetBleNameRes::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetBleNameRes> GetBleNameRes_default_instance_;

GetBleNameRes* GetBleNameRes::New(::google::protobuf::Arena* arena) const {
  GetBleNameRes* n = new GetBleNameRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBleNameRes::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.GetBleNameRes)
  ble_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetBleNameRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.GetBleNameRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ble_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ble_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ble_name().data(), this->ble_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.GetBleNameRes.ble_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.GetBleNameRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.GetBleNameRes)
  return false;
#undef DO_
}

void GetBleNameRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.GetBleNameRes)
  // optional string ble_name = 1;
  if (this->ble_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ble_name().data(), this->ble_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetBleNameRes.ble_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ble_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.GetBleNameRes)
}

::google::protobuf::uint8* GetBleNameRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.GetBleNameRes)
  // optional string ble_name = 1;
  if (this->ble_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ble_name().data(), this->ble_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetBleNameRes.ble_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ble_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.GetBleNameRes)
  return target;
}

size_t GetBleNameRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.GetBleNameRes)
  size_t total_size = 0;

  // optional string ble_name = 1;
  if (this->ble_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ble_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBleNameRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.GetBleNameRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetBleNameRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBleNameRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.GetBleNameRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.GetBleNameRes)
    UnsafeMergeFrom(*source);
  }
}

void GetBleNameRes::MergeFrom(const GetBleNameRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.GetBleNameRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetBleNameRes::UnsafeMergeFrom(const GetBleNameRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.ble_name().size() > 0) {

    ble_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ble_name_);
  }
}

void GetBleNameRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.GetBleNameRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBleNameRes::CopyFrom(const GetBleNameRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.GetBleNameRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetBleNameRes::IsInitialized() const {

  return true;
}

void GetBleNameRes::Swap(GetBleNameRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBleNameRes::InternalSwap(GetBleNameRes* other) {
  ble_name_.Swap(&other->ble_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBleNameRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBleNameRes_descriptor_;
  metadata.reflection = GetBleNameRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBleNameRes

// optional string ble_name = 1;
void GetBleNameRes::clear_ble_name() {
  ble_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetBleNameRes::ble_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetBleNameRes.ble_name)
  return ble_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBleNameRes::set_ble_name(const ::std::string& value) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetBleNameRes.ble_name)
}
void GetBleNameRes::set_ble_name(const char* value) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetBleNameRes.ble_name)
}
void GetBleNameRes::set_ble_name(const char* value, size_t size) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetBleNameRes.ble_name)
}
::std::string* GetBleNameRes::mutable_ble_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetBleNameRes.ble_name)
  return ble_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBleNameRes::release_ble_name() {
  // @@protoc_insertion_point(field_release:deviceapi.GetBleNameRes.ble_name)
  
  return ble_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBleNameRes::set_allocated_ble_name(::std::string* ble_name) {
  if (ble_name != NULL) {
    
  } else {
    
  }
  ble_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ble_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetBleNameRes.ble_name)
}

inline const GetBleNameRes* GetBleNameRes::internal_default_instance() {
  return &GetBleNameRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetBleNameReq::kBleNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetBleNameReq::SetBleNameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.SetBleNameReq)
}

void SetBleNameReq::InitAsDefaultInstance() {
}

SetBleNameReq::SetBleNameReq(const SetBleNameReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.SetBleNameReq)
}

void SetBleNameReq::SharedCtor() {
  ble_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetBleNameReq::~SetBleNameReq() {
  // @@protoc_insertion_point(destructor:deviceapi.SetBleNameReq)
  SharedDtor();
}

void SetBleNameReq::SharedDtor() {
  ble_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetBleNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetBleNameReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetBleNameReq_descriptor_;
}

const SetBleNameReq& SetBleNameReq::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SetBleNameReq> SetBleNameReq_default_instance_;

SetBleNameReq* SetBleNameReq::New(::google::protobuf::Arena* arena) const {
  SetBleNameReq* n = new SetBleNameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetBleNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.SetBleNameReq)
  ble_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SetBleNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.SetBleNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ble_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ble_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ble_name().data(), this->ble_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.SetBleNameReq.ble_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.SetBleNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.SetBleNameReq)
  return false;
#undef DO_
}

void SetBleNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.SetBleNameReq)
  // optional string ble_name = 1;
  if (this->ble_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ble_name().data(), this->ble_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SetBleNameReq.ble_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ble_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.SetBleNameReq)
}

::google::protobuf::uint8* SetBleNameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.SetBleNameReq)
  // optional string ble_name = 1;
  if (this->ble_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ble_name().data(), this->ble_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SetBleNameReq.ble_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ble_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.SetBleNameReq)
  return target;
}

size_t SetBleNameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.SetBleNameReq)
  size_t total_size = 0;

  // optional string ble_name = 1;
  if (this->ble_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ble_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetBleNameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.SetBleNameReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SetBleNameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetBleNameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.SetBleNameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.SetBleNameReq)
    UnsafeMergeFrom(*source);
  }
}

void SetBleNameReq::MergeFrom(const SetBleNameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.SetBleNameReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SetBleNameReq::UnsafeMergeFrom(const SetBleNameReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.ble_name().size() > 0) {

    ble_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ble_name_);
  }
}

void SetBleNameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.SetBleNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBleNameReq::CopyFrom(const SetBleNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.SetBleNameReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SetBleNameReq::IsInitialized() const {

  return true;
}

void SetBleNameReq::Swap(SetBleNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetBleNameReq::InternalSwap(SetBleNameReq* other) {
  ble_name_.Swap(&other->ble_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetBleNameReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetBleNameReq_descriptor_;
  metadata.reflection = SetBleNameReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetBleNameReq

// optional string ble_name = 1;
void SetBleNameReq::clear_ble_name() {
  ble_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetBleNameReq::ble_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.SetBleNameReq.ble_name)
  return ble_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetBleNameReq::set_ble_name(const ::std::string& value) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SetBleNameReq.ble_name)
}
void SetBleNameReq::set_ble_name(const char* value) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SetBleNameReq.ble_name)
}
void SetBleNameReq::set_ble_name(const char* value, size_t size) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SetBleNameReq.ble_name)
}
::std::string* SetBleNameReq::mutable_ble_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SetBleNameReq.ble_name)
  return ble_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetBleNameReq::release_ble_name() {
  // @@protoc_insertion_point(field_release:deviceapi.SetBleNameReq.ble_name)
  
  return ble_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetBleNameReq::set_allocated_ble_name(::std::string* ble_name) {
  if (ble_name != NULL) {
    
  } else {
    
  }
  ble_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ble_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SetBleNameReq.ble_name)
}

inline const SetBleNameReq* SetBleNameReq::internal_default_instance() {
  return &SetBleNameReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBleVersionRes::kBleVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBleVersionRes::GetBleVersionRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.GetBleVersionRes)
}

void GetBleVersionRes::InitAsDefaultInstance() {
}

GetBleVersionRes::GetBleVersionRes(const GetBleVersionRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.GetBleVersionRes)
}

void GetBleVersionRes::SharedCtor() {
  ble_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetBleVersionRes::~GetBleVersionRes() {
  // @@protoc_insertion_point(destructor:deviceapi.GetBleVersionRes)
  SharedDtor();
}

void GetBleVersionRes::SharedDtor() {
  ble_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBleVersionRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBleVersionRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBleVersionRes_descriptor_;
}

const GetBleVersionRes& GetBleVersionRes::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetBleVersionRes> GetBleVersionRes_default_instance_;

GetBleVersionRes* GetBleVersionRes::New(::google::protobuf::Arena* arena) const {
  GetBleVersionRes* n = new GetBleVersionRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBleVersionRes::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.GetBleVersionRes)
  ble_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetBleVersionRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.GetBleVersionRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ble_version = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ble_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ble_version().data(), this->ble_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.GetBleVersionRes.ble_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.GetBleVersionRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.GetBleVersionRes)
  return false;
#undef DO_
}

void GetBleVersionRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.GetBleVersionRes)
  // optional string ble_version = 1;
  if (this->ble_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ble_version().data(), this->ble_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetBleVersionRes.ble_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ble_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.GetBleVersionRes)
}

::google::protobuf::uint8* GetBleVersionRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.GetBleVersionRes)
  // optional string ble_version = 1;
  if (this->ble_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ble_version().data(), this->ble_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetBleVersionRes.ble_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ble_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.GetBleVersionRes)
  return target;
}

size_t GetBleVersionRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.GetBleVersionRes)
  size_t total_size = 0;

  // optional string ble_version = 1;
  if (this->ble_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ble_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBleVersionRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.GetBleVersionRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetBleVersionRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBleVersionRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.GetBleVersionRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.GetBleVersionRes)
    UnsafeMergeFrom(*source);
  }
}

void GetBleVersionRes::MergeFrom(const GetBleVersionRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.GetBleVersionRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetBleVersionRes::UnsafeMergeFrom(const GetBleVersionRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.ble_version().size() > 0) {

    ble_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ble_version_);
  }
}

void GetBleVersionRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.GetBleVersionRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBleVersionRes::CopyFrom(const GetBleVersionRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.GetBleVersionRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetBleVersionRes::IsInitialized() const {

  return true;
}

void GetBleVersionRes::Swap(GetBleVersionRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBleVersionRes::InternalSwap(GetBleVersionRes* other) {
  ble_version_.Swap(&other->ble_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBleVersionRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBleVersionRes_descriptor_;
  metadata.reflection = GetBleVersionRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBleVersionRes

// optional string ble_version = 1;
void GetBleVersionRes::clear_ble_version() {
  ble_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetBleVersionRes::ble_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetBleVersionRes.ble_version)
  return ble_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBleVersionRes::set_ble_version(const ::std::string& value) {
  
  ble_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetBleVersionRes.ble_version)
}
void GetBleVersionRes::set_ble_version(const char* value) {
  
  ble_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetBleVersionRes.ble_version)
}
void GetBleVersionRes::set_ble_version(const char* value, size_t size) {
  
  ble_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetBleVersionRes.ble_version)
}
::std::string* GetBleVersionRes::mutable_ble_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetBleVersionRes.ble_version)
  return ble_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBleVersionRes::release_ble_version() {
  // @@protoc_insertion_point(field_release:deviceapi.GetBleVersionRes.ble_version)
  
  return ble_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBleVersionRes::set_allocated_ble_version(::std::string* ble_version) {
  if (ble_version != NULL) {
    
  } else {
    
  }
  ble_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ble_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetBleVersionRes.ble_version)
}

inline const GetBleVersionRes* GetBleVersionRes::internal_default_instance() {
  return &GetBleVersionRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSdkInfoRes::kSdkVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSdkInfoRes::GetSdkInfoRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.GetSdkInfoRes)
}

void GetSdkInfoRes::InitAsDefaultInstance() {
}

GetSdkInfoRes::GetSdkInfoRes(const GetSdkInfoRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.GetSdkInfoRes)
}

void GetSdkInfoRes::SharedCtor() {
  sdk_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetSdkInfoRes::~GetSdkInfoRes() {
  // @@protoc_insertion_point(destructor:deviceapi.GetSdkInfoRes)
  SharedDtor();
}

void GetSdkInfoRes::SharedDtor() {
  sdk_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetSdkInfoRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSdkInfoRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSdkInfoRes_descriptor_;
}

const GetSdkInfoRes& GetSdkInfoRes::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetSdkInfoRes> GetSdkInfoRes_default_instance_;

GetSdkInfoRes* GetSdkInfoRes::New(::google::protobuf::Arena* arena) const {
  GetSdkInfoRes* n = new GetSdkInfoRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSdkInfoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.GetSdkInfoRes)
  sdk_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetSdkInfoRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.GetSdkInfoRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sdk_version = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdk_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdk_version().data(), this->sdk_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.GetSdkInfoRes.sdk_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.GetSdkInfoRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.GetSdkInfoRes)
  return false;
#undef DO_
}

void GetSdkInfoRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.GetSdkInfoRes)
  // optional string sdk_version = 1;
  if (this->sdk_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_version().data(), this->sdk_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetSdkInfoRes.sdk_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sdk_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.GetSdkInfoRes)
}

::google::protobuf::uint8* GetSdkInfoRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.GetSdkInfoRes)
  // optional string sdk_version = 1;
  if (this->sdk_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_version().data(), this->sdk_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetSdkInfoRes.sdk_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sdk_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.GetSdkInfoRes)
  return target;
}

size_t GetSdkInfoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.GetSdkInfoRes)
  size_t total_size = 0;

  // optional string sdk_version = 1;
  if (this->sdk_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdk_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSdkInfoRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.GetSdkInfoRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetSdkInfoRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSdkInfoRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.GetSdkInfoRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.GetSdkInfoRes)
    UnsafeMergeFrom(*source);
  }
}

void GetSdkInfoRes::MergeFrom(const GetSdkInfoRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.GetSdkInfoRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetSdkInfoRes::UnsafeMergeFrom(const GetSdkInfoRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.sdk_version().size() > 0) {

    sdk_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdk_version_);
  }
}

void GetSdkInfoRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.GetSdkInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSdkInfoRes::CopyFrom(const GetSdkInfoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.GetSdkInfoRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetSdkInfoRes::IsInitialized() const {

  return true;
}

void GetSdkInfoRes::Swap(GetSdkInfoRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSdkInfoRes::InternalSwap(GetSdkInfoRes* other) {
  sdk_version_.Swap(&other->sdk_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSdkInfoRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSdkInfoRes_descriptor_;
  metadata.reflection = GetSdkInfoRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSdkInfoRes

// optional string sdk_version = 1;
void GetSdkInfoRes::clear_sdk_version() {
  sdk_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetSdkInfoRes::sdk_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetSdkInfoRes.sdk_version)
  return sdk_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSdkInfoRes::set_sdk_version(const ::std::string& value) {
  
  sdk_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetSdkInfoRes.sdk_version)
}
void GetSdkInfoRes::set_sdk_version(const char* value) {
  
  sdk_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetSdkInfoRes.sdk_version)
}
void GetSdkInfoRes::set_sdk_version(const char* value, size_t size) {
  
  sdk_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetSdkInfoRes.sdk_version)
}
::std::string* GetSdkInfoRes::mutable_sdk_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetSdkInfoRes.sdk_version)
  return sdk_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetSdkInfoRes::release_sdk_version() {
  // @@protoc_insertion_point(field_release:deviceapi.GetSdkInfoRes.sdk_version)
  
  return sdk_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSdkInfoRes::set_allocated_sdk_version(::std::string* sdk_version) {
  if (sdk_version != NULL) {
    
  } else {
    
  }
  sdk_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetSdkInfoRes.sdk_version)
}

inline const GetSdkInfoRes* GetSdkInfoRes::internal_default_instance() {
  return &GetSdkInfoRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace deviceapi

// @@protoc_insertion_point(global_scope)
